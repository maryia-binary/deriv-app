{"version":3,"file":"js/core.one-time-deposit-modal.5fd7b3473944209777ed.js","mappings":"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","sources":["webpack:///../../cashier/src/components/funds-protection/funds-protection.tsx","webpack:///../../cashier/src/components/funds-protection/index.ts","webpack:///../../cashier/src/components/error-state/error-state.tsx","webpack:///../../cashier/src/modules/deposit-fiat/components/deposit-fiat-iframe/deposit-fiat-iframe.tsx","webpack:///./App/Containers/OneTimeDepositModal/one-time-deposit-modal.tsx","webpack:///./App/Containers/OneTimeDepositModal/index.ts"],"sourcesContent":["import React from 'react';\nimport { useRequest } from '@deriv/api';\nimport { Localize, localize } from '@deriv/translations';\nimport { EmptyState } from '@deriv/components';\n\nconst FundsProtection = () => {\n    const { mutate, isLoading } = useRequest('tnc_approval', { onSuccess: () => location.reload() });\n\n    return (\n        <EmptyState\n            icon='IcCashierFundsProtection'\n            title={localize('Funds protection level')}\n            description={\n                <Localize\n                    i18n_default_text=\"We hold customer funds in bank accounts separate from our operational accounts which would not, in the event of insolvency, form part of the company's assets. This meets the <0>Gambling Commission</0>'s requirements for the segregation of customer funds at the level: <1>medium protection</1>.\"\n                    components={[\n                        <a\n                            key={0}\n                            className='link link--orange'\n                            href='https://www.gamblingcommission.gov.uk/for-the-public/Your-rights/Protection-of-customer-funds.aspx'\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        />,\n                        <strong key={1} />,\n                    ]}\n                />\n            }\n            action={{\n                label: localize('Deposit now'),\n                disabled: isLoading,\n                onClick: () => mutate({ payload: { ukgc_funds_protection: 1 } }),\n            }}\n        />\n    );\n};\n\nexport default FundsProtection;\n","import FundsProtection from './funds-protection';\n\nexport default FundsProtection;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { EmptyState } from '@deriv/components';\nimport FundsProtection from '../funds-protection';\n\ntype TProps = {\n    error: unknown;\n};\n\nconst ErrorState: React.FC<TProps> = ({ error }) => {\n    let code = localize('UNKNOWN');\n    let message = localize('Something went wrong. Please refresh the page and try again.');\n\n    if (error && typeof error === 'object' && 'code' in error && typeof error.code === 'string') {\n        code = error.code;\n    }\n\n    if (error && typeof error === 'object' && 'message' in error && typeof error.message === 'string') {\n        message = error.message;\n    }\n\n    if (code === 'ASK_UK_FUNDS_PROTECTION') return <FundsProtection />;\n\n    return (\n        <EmptyState\n            icon='IcCashierError'\n            title={localize('Oops, something went wrong!')}\n            description={message}\n            action={{\n                label: localize('Try again'),\n                onClick: () => window.location.reload(),\n                tertiary: true,\n            }}\n        />\n    );\n};\n\nexport default ErrorState;\n","import React, { useEffect, useState } from 'react';\nimport { Loading } from '@deriv/components';\nimport { useDepositFiatAddress } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { ErrorState } from '../../../../components/error-state';\nimport './deposit-fiat-iframe.scss';\n\nconst DepositFiatIframe: React.FC = observer(() => {\n    const { data: iframe_url, error } = useDepositFiatAddress();\n    const [is_loading, setIsLoading] = useState(true);\n\n    // To show loading state when switching theme\n    useEffect(() => {\n        setIsLoading(true);\n    }, [iframe_url]);\n\n    if (error) return <ErrorState error={error} />;\n\n    return (\n        <React.Fragment>\n            {is_loading && <Loading is_fullscreen={false} />}\n            {iframe_url && (\n                <iframe\n                    key={iframe_url}\n                    className='deposit-fiat-iframe__iframe'\n                    onLoad={() => setIsLoading(false)}\n                    src={iframe_url}\n                    style={{ display: is_loading ? 'none' : 'block' }}\n                    data-testid='dt_deposit_fiat_iframe_iframe'\n                />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default DepositFiatIframe;\n","import React from 'react';\nimport {\n    Button,\n    DesktopWrapper,\n    Icon,\n    InlineMessage,\n    MobileFullPageModal,\n    MobileWrapper,\n    Modal,\n    Text,\n} from '@deriv/components';\nimport { useHasMFAccountDeposited } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport DepositFiatIframe from '@deriv/cashier/src/modules/deposit-fiat/components/deposit-fiat-iframe/deposit-fiat-iframe';\nimport useLiveChat from 'App/Components/Elements/LiveChat/use-livechat';\n\nconst OneTimeDepositModal = observer(() => {\n    const { client, ui } = useStore();\n    const { loginid } = client;\n    const {\n        is_mobile,\n        should_show_one_time_deposit_modal,\n        setShouldShowOneTimeDepositModal,\n        toggleAccountSuccessModal,\n    } = ui;\n    const liveChat = useLiveChat(false, loginid);\n    const { has_mf_account_deposited } = useHasMFAccountDeposited();\n\n    React.useEffect(() => {\n        if (has_mf_account_deposited) {\n            onCloseModal();\n        }\n    }, [has_mf_account_deposited]);\n\n    const onLiveChatClick = () => {\n        liveChat.widget?.call('maximize');\n    };\n\n    const onCloseModal = () => {\n        setShouldShowOneTimeDepositModal(false);\n        toggleAccountSuccessModal();\n    };\n\n    const getModalContent = () => (\n        <div className='one-time-deposit-modal__content'>\n            <div className='one-time-deposit-modal__title'>\n                <Text as='h1' size={is_mobile ? 'm' : 'l'} weight='bold'>\n                    <Localize i18n_default_text='Deposit' />\n                </Text>\n                <Text as='p' size={is_mobile ? 'xs' : 's'} align='center'>\n                    <Localize i18n_default_text='Account created. Select payment method for deposit.' />\n                </Text>\n            </div>\n            <div className='one-time-deposit-modal__description'>\n                <InlineMessage\n                    type='information'\n                    size='sm'\n                    message={\n                        <Localize i18n_default_text='We donâ€™t charge deposit fees! Once your account is verified, you will be able to trade, make additional deposits, or withdraw funds.' />\n                    }\n                />\n                <Button\n                    className='one-time-deposit-modal__description--livechat'\n                    data-testid='dt_live_chat'\n                    onClick={onLiveChatClick}\n                    transparent\n                    type='button'\n                >\n                    <Icon\n                        color='red'\n                        icon='IcLiveChat'\n                        className='one-time-deposit-modal__description--livechat-icon'\n                    />\n                    <Text color='loss-danger' size='xs' weight='bold'>\n                        <Localize i18n_default_text='Live Chat' />\n                    </Text>\n                </Button>\n            </div>\n            <DepositFiatIframe />\n        </div>\n    );\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Modal\n                    className='one-time-deposit-modal'\n                    is_open={should_show_one_time_deposit_modal}\n                    title=' '\n                    toggleModal={onCloseModal}\n                    height='auto'\n                    has_close_icon\n                >\n                    <Modal.Body className='one-time-deposit-modal__body'>{getModalContent()}</Modal.Body>\n                </Modal>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <MobileFullPageModal\n                    className='one-time-deposit-modal'\n                    body_className='one-time-deposit-modal__body'\n                    header=' '\n                    height_offset='80px'\n                    is_modal_open={should_show_one_time_deposit_modal}\n                    onClickClose={onCloseModal}\n                >\n                    {getModalContent()}\n                </MobileFullPageModal>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default OneTimeDepositModal;\n","import OneTimeDepositModal from './one-time-deposit-modal';\nimport './one-time-deposit-modal.scss';\n\nexport default OneTimeDepositModal;\n"],"names":["useRequest","onSuccess","location","reload","mutate","isLoading","EmptyState","icon","title","localize","description","Localize","i18n_default_text","components","key","className","href","target","rel","action","label","disabled","onClick","payload","ukgc_funds_protection","error","code","message","window","tertiary","observer","useDepositFiatAddress","iframe_url","data","useState","is_loading","setIsLoading","useEffect","Loading","is_fullscreen","onLoad","src","style","display","useStore","client","ui","loginid","is_mobile","should_show_one_time_deposit_modal","setShouldShowOneTimeDepositModal","toggleAccountSuccessModal","liveChat","useLiveChat","has_mf_account_deposited","useHasMFAccountDeposited","React","onCloseModal","onLiveChatClick","widget","call","getModalContent","Text","as","size","weight","align","InlineMessage","type","Button","transparent","Icon","color","DesktopWrapper","Modal","is_open","toggleModal","height","has_close_icon","MobileWrapper","MobileFullPageModal","body_className","header","height_offset","is_modal_open","onClickClose"],"sourceRoot":""}