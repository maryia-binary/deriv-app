/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["@deriv/components", "@deriv/shared", "@deriv/translations", "mobx", "react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["@deriv/cashier"] = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"));
	else
		root["@deriv/cashier"] = factory(root["@deriv/components"], root["@deriv/shared"], root["@deriv/translations"], root["mobx"], root["react"], root["react-dom"]);
})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../api/src/index.ts":
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// UNUSED EXPORTS: APIProvider, useFetch, useInvalidateQuery, useRequest, useSubscription\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs + 4 modules\nvar queryClient = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs\");\n;// CONCATENATED MODULE: ../../api/src/APIProvider.tsx\n\n\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nvar APIProvider_queryClient = new queryClient/* QueryClient */.S();\nvar APIProvider = function APIProvider(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: APIProvider_queryClient\n  }, children);\n};\n/* harmony default export */ const src_APIProvider = ((/* unused pure expression or super */ null && (APIProvider)));\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ../../api/src/utils.ts\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar utils_send = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, payload) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return WS.send(_objectSpread(_defineProperty({}, name, 1), payload || {}));\n          case 2:\n            response = _context.sent;\n            if (!response.error) {\n              _context.next = 5;\n              break;\n            }\n            throw response.error;\n          case 5:\n            return _context.abrupt(\"return\", response);\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function send(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()));\nvar utils_getQueryKeys = function getQueryKeys(name, props) {\n  if (!props) return [name];\n  delete props.req_id;\n  if (name && props[name] === 1) delete props[name];\n  if (Object.keys(props).length === 0) return [name];\n  var ordered_props = Object.keys(props).sort().reduce(function (obj, key) {\n    obj[key] = props[key];\n    return obj;\n  }, {});\n  var query_props = JSON.stringify(ordered_props);\n  return [name, query_props];\n};\n;// CONCATENATED MODULE: ../../api/src/useFetch.ts\n\n\nvar useFetch = function useFetch(name) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  var prop = props === null || props === void 0 ? void 0 : props[0];\n  var payload = prop && 'payload' in prop ? prop.payload : undefined;\n  var options = prop && 'options' in prop ? prop.options : undefined;\n  return useQuery(getQueryKeys(name, payload), function () {\n    return send(name, payload);\n  }, options);\n};\n/* harmony default export */ const src_useFetch = ((/* unused pure expression or super */ null && (useFetch)));\n;// CONCATENATED MODULE: ../../api/src/useInvalidateQuery.ts\n\n\nvar useInvalidateQuery = function useInvalidateQuery() {\n  var queryClient = useQueryClient();\n  var invalidate = useCallback(function (name) {\n    return queryClient.invalidateQueries([name]);\n  }, [queryClient]);\n  return invalidate;\n};\n/* harmony default export */ const src_useInvalidateQuery = ((/* unused pure expression or super */ null && (useInvalidateQuery)));\n;// CONCATENATED MODULE: ../../api/src/useRequest.ts\nfunction useRequest_typeof(obj) { \"@babel/helpers - typeof\"; return useRequest_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useRequest_typeof(obj); }\nvar _excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useRequest_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useRequest_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useRequest_ownKeys(Object(source), !0).forEach(function (key) { useRequest_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useRequest_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useRequest_defineProperty(obj, key, value) { key = useRequest_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useRequest_toPropertyKey(arg) { var key = useRequest_toPrimitive(arg, \"string\"); return useRequest_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useRequest_toPrimitive(input, hint) { if (useRequest_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useRequest_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar useRequest = function useRequest(name, options) {\n  var _useMutation = useMutation(function (props) {\n      var prop = props === null || props === void 0 ? void 0 : props[0];\n      var payload = prop && 'payload' in prop ? prop.payload : undefined;\n      return send(name, payload);\n    }, options),\n    _mutate = _useMutation.mutate,\n    rest = _objectWithoutProperties(_useMutation, _excluded);\n  var mutate = useCallback(function () {\n    for (var _len = arguments.length, payload = new Array(_len), _key = 0; _key < _len; _key++) {\n      payload[_key] = arguments[_key];\n    }\n    return _mutate(payload);\n  }, [_mutate]);\n  return useRequest_objectSpread({\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const src_useRequest = ((/* unused pure expression or super */ null && (useRequest)));\n;// CONCATENATED MODULE: ../../api/src/useSubscription.ts\nfunction useSubscription_typeof(obj) { \"@babel/helpers - typeof\"; return useSubscription_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useSubscription_typeof(obj); }\nfunction useSubscription_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useSubscription_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useSubscription_ownKeys(Object(source), !0).forEach(function (key) { useSubscription_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useSubscription_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useSubscription_defineProperty(obj, key, value) { key = useSubscription_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useSubscription_toPropertyKey(arg) { var key = useSubscription_toPrimitive(arg, \"string\"); return useSubscription_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useSubscription_toPrimitive(input, hint) { if (useSubscription_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useSubscription_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar useSubscription = function useSubscription(name) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    is_loading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    is_subscribed = _useState4[0],\n    setSubscribed = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    data = _useState8[0],\n    setData = _useState8[1];\n  var subscriber = useRef();\n  var WS = useWS();\n  var subscribe = useCallback(function () {\n    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n      props[_key] = arguments[_key];\n    }\n    var prop = props === null || props === void 0 ? void 0 : props[0];\n    var payload = prop && 'payload' in prop ? prop.payload : undefined;\n    setIsLoading(true);\n    setSubscribed(true);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var onData = function onData(response) {\n      setData(response);\n      setIsLoading(false);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var onError = function onError(response) {\n      setError(response.error);\n      setIsLoading(false);\n    };\n    try {\n      var _objectSpread2;\n      subscriber.current = WS.subscribe(useSubscription_objectSpread((_objectSpread2 = {}, useSubscription_defineProperty(_objectSpread2, name, 1), useSubscription_defineProperty(_objectSpread2, \"subscribe\", 1), _objectSpread2), payload || {})).subscribe(onData, onError);\n    } catch (e) {\n      setError(e);\n    }\n  }, [WS, name]);\n  var unsubscribe = useCallback(function () {\n    var _subscriber$current, _subscriber$current$u;\n    (_subscriber$current = subscriber.current) === null || _subscriber$current === void 0 ? void 0 : (_subscriber$current$u = _subscriber$current.unsubscribe) === null || _subscriber$current$u === void 0 ? void 0 : _subscriber$current$u.call(_subscriber$current);\n    setSubscribed(false);\n  }, []);\n  useEffect(function () {\n    return function () {\n      unsubscribe();\n    };\n  }, [unsubscribe]);\n  return {\n    subscribe: subscribe,\n    unsubscribe: unsubscribe,\n    is_loading: is_loading,\n    is_subscribed: is_subscribed,\n    error: error,\n    data: data\n  };\n};\n/* harmony default export */ const src_useSubscription = ((/* unused pure expression or super */ null && (useSubscription)));\n;// CONCATENATED MODULE: ../../api/src/index.ts\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../api/src/index.ts\n");

/***/ }),

/***/ "./components/cashier-locked/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_cashier_locked)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: ../../stores/src/index.ts + 10 modules\nvar src = __webpack_require__(\"../../stores/src/index.ts\");\n// EXTERNAL MODULE: ../../hooks/src/index.ts + 40 modules\nvar hooks_src = __webpack_require__(\"../../hooks/src/index.ts\");\n// EXTERNAL MODULE: ./components/empty-state/index.ts + 1 modules\nvar empty_state = __webpack_require__(\"./components/empty-state/index.ts\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ./components/cashier-locked/cashier-locked-provider.tsx\n\n\n\nvar getMessage = function getMessage(_ref) {\n  var cashier_validation = _ref.cashier_validation,\n    is_crypto = _ref.is_crypto,\n    is_system_maintenance = _ref.is_system_maintenance,\n    is_cashier_locked = _ref.is_cashier_locked,\n    is_deposit_locked = _ref.is_deposit_locked,\n    is_withdrawal_locked = _ref.is_withdrawal_locked,\n    is_identity_verification_needed = _ref.is_identity_verification_needed,\n    excluded_until = _ref.excluded_until;\n  var no_residence = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('no_residence');\n  var unwelcome_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('unwelcome_status');\n  var self_exclusion = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('SelfExclusion');\n  var no_withdrawal_or_trading_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('no_withdrawal_or_trading_status');\n  var only_pa_withdrawals_allowed_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('only_pa_withdrawals_allowed_status');\n  var withdraw_service_unavailable_for_pa = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('WithdrawServiceUnavailableForPA');\n  var withdrawal_locked_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('withdrawal_locked_status');\n  var documents_expired = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('documents_expired');\n  var cashier_locked_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('cashier_locked_status');\n  var disabled_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('disabled_status');\n  var financial_assessment_required = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('FinancialAssessmentRequired');\n  var ask_currency = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_CURRENCY');\n  var ask_authenticate = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_AUTHENTICATE');\n  var ask_financial_risk_approval = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_FINANCIAL_RISK_APPROVAL');\n  var ask_tin_information = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_TIN_INFORMATION');\n  var ask_self_exclusion_max_turnover_set = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_SELF_EXCLUSION_MAX_TURNOVER_SET');\n  var ask_fix_details = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_FIX_DETAILS');\n  var ask_uk_funds_protection = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_UK_FUNDS_PROTECTION');\n  var pa_commision_withdrawal_limit = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('PACommisionWithdrawalLimit');\n  if (is_system_maintenance) {\n    if (is_crypto && is_withdrawal_locked) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: (0,translations_.localize)('Withdrawals are temporarily unavailable due to system maintenance. You can make your withdrawals when the maintenance is complete.')\n    };\n    if (is_crypto && is_deposit_locked) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Deposits are temporarily unavailable due to system maintenance. You can make your deposits when the maintenance is complete.')\n    };\n    if (is_crypto) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Our cryptocurrency cashier is temporarily down due to system maintenance. You can access the Cashier in a few minutes when the maintenance is complete.')\n    };\n    return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Our cashier is temporarily down due to system maintenance. You can access the Cashier in a few minutes when the maintenance is complete.')\n    };\n  }\n  if (is_cashier_locked) {\n    if (no_residence) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('You’ve not set your country of residence. To access Cashier, please update your country of residence in the Personal details section in your account settings.')\n    };\n    if (documents_expired) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('The identification documents you submitted have expired. Please submit valid identity documents to unlock Cashier. ')\n    };\n    if (cashier_locked_status) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your cashier is currently locked. Please contact us via <0>live chat</0> to find out how to unlock it.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n          key: 0,\n          className: \"link link--orange\",\n          onClick: function onClick() {\n            return window.LC_API.open_chat_window();\n          }\n        })]\n      })\n    };\n    if (disabled_status) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your account is temporarily disabled. Please contact us via <0>live chat</0> to enable deposits and withdrawals again.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n          key: 0,\n          className: \"link link--orange\",\n          onClick: function onClick() {\n            return window.LC_API.open_chat_window();\n          }\n        })]\n      })\n    };\n    if (ask_currency) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Please set your account currency to enable deposits and withdrawals.')\n    };\n    if (ask_authenticate && is_identity_verification_needed) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Please submit your <0>proof of identity</0> to authenticate your account and access your Cashier.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          href: '/account/proof-of-identity'\n        })]\n      })\n    };\n    if (ask_authenticate) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your account has not been authenticated. Please submit your <0>proof of identity</0> and <1>proof of address</1> to authenticate your account and access your cashier.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-identity'\n        }), /*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 1,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-address'\n        })]\n      })\n    };\n    if (ask_financial_risk_approval) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Please complete the <0>Appropriateness Test</0> to access your cashier.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/financial-assessment',\n          \"data-testid\": \"dt_financial_assessment_link\"\n        })]\n      })\n    };\n    if (financial_assessment_required) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your cashier is locked. Please complete the <0>financial assessment</0> to unlock it.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/financial-assessment',\n          \"data-testid\": \"dt_financial_assessment_link\"\n        })]\n      })\n    };\n    if (ask_tin_information) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"You have not provided your tax identification number. This information is necessary for legal and regulatory requirements. Please go to <0>Personal details</0> in your account settings, and fill in your latest tax identification number.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n    if (ask_uk_funds_protection) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your cashier is locked. See <0>how we protect your funds</0> before you proceed.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/cashier/deposit'\n        })]\n      })\n    };\n    if (ask_self_exclusion_max_turnover_set) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your access to Cashier has been temporarily disabled as you have not set your 30-day turnover limit. Please go to <0>Self-exclusion</0> and set your 30-day turnover limit.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/self-exclusion'\n        })]\n      })\n    };\n    if (ask_fix_details) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable deposits and withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n  }\n  if (is_deposit_locked) {\n    if (ask_fix_details) return {\n      icon: 'IcCashierDepositLock',\n      title: (0,translations_.localize)('Deposits are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable deposits.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n    if (self_exclusion) return {\n      icon: 'IcCashierDepositLock',\n      title: (0,translations_.localize)('Deposits are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"You have chosen to exclude yourself from trading on our website until {{exclude_until}}. If you are unable to place a trade or deposit after your self-exclusion period, please contact us via <0>live chat</0>.\",\n        values: {\n          exclude_until: (0,shared_.formatDate)(excluded_until, 'DD MMM, YYYY')\n        },\n        components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n          key: 0,\n          className: \"link link--orange\",\n          onClick: function onClick() {\n            return window.LC_API.open_chat_window();\n          }\n        })]\n      })\n    };\n    if (unwelcome_status) return {\n      icon: 'IcCashierDepositLock',\n      title: (0,translations_.localize)('Deposits are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Please contact us via <0>live chat</0>.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n          key: 0,\n          className: \"link link--orange\",\n          onClick: function onClick() {\n            return window.LC_API.open_chat_window();\n          }\n        })]\n      })\n    };\n  }\n  if (is_withdrawal_locked) {\n    if (financial_assessment_required) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"You can only make deposits. Please complete the <0>financial assessment</0> to unlock withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          href: '/account/financial-assessment',\n          \"data-testid\": \"dt_financial_assessment_link\"\n        })]\n      })\n    };\n    if (ask_authenticate) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your account has not been authenticated. Please submit your <0>proof of identity</0> and <1>proof of address</1> to authenticate your account and request for withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-identity'\n        }), /*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 1,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-address'\n        })]\n      })\n    };\n    if (ask_fix_details) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n    if (withdraw_service_unavailable_for_pa) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: (0,translations_.localize)('This feature is not available for payment agents.')\n    };\n    if (no_withdrawal_or_trading_status) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Unfortunately, you can only make deposits. Please contact us via <0>live chat</0> to enable withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n          key: 0,\n          className: \"link link--orange\",\n          onClick: function onClick() {\n            return window.LC_API.open_chat_window();\n          }\n        })]\n      })\n    };\n    if (withdrawal_locked_status) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Unfortunately, you can only make deposits. Please contact us via <0>live chat</0> to enable withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n          key: 0,\n          className: \"link link--orange\",\n          onClick: function onClick() {\n            return window.LC_API.open_chat_window();\n          }\n        })]\n      })\n    };\n    if (only_pa_withdrawals_allowed_status) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"You can only make deposits. Please contact us via <0>live chat</0> for more information.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n          key: 0,\n          className: \"link link--orange\",\n          onClick: function onClick() {\n            return window.LC_API.open_chat_window();\n          }\n        })]\n      })\n    };\n    if (pa_commision_withdrawal_limit) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Cashier is locked for withdrawals'),\n      description: (0,translations_.localize)(\"It seems that you've no commissions to withdraw at the moment. You can make withdrawals once you receive your commissions.\")\n    };\n  }\n  return {\n    icon: 'IcCashierLocked',\n    title: (0,translations_.localize)('Cashier is locked'),\n    description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"Your cashier is currently locked. Please contact us via <0>live chat</0> to find out how to unlock it.\",\n      components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n        key: 0,\n        className: \"link link--orange\",\n        onClick: function onClick() {\n          return window.LC_API.open_chat_window();\n        }\n      })]\n    })\n  };\n};\n/* harmony default export */ const cashier_locked_provider = (getMessage);\n;// CONCATENATED MODULE: ./components/cashier-locked/cashier-locked.tsx\n\n\n\n\n\nvar CashierLocked = (0,src.observer)(function () {\n  var _accounts$loginid;\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client;\n  var account_status = client.account_status,\n    accounts = client.accounts,\n    current_currency_type = client.current_currency_type,\n    is_withdrawal_locked = client.is_withdrawal_lock,\n    loginid = client.loginid,\n    is_identity_verification_needed = client.is_identity_verification_needed;\n  var is_cashier_locked = (0,hooks_src.useCashierLocked)();\n  var is_system_maintenance = (0,hooks_src.useIsSystemMaintenance)();\n  var is_deposit_locked = (0,hooks_src.useDepositLocked)();\n  var state = cashier_locked_provider({\n    cashier_validation: account_status.cashier_validation,\n    is_crypto: current_currency_type === 'crypto',\n    is_system_maintenance: is_system_maintenance,\n    is_cashier_locked: is_cashier_locked,\n    is_deposit_locked: is_deposit_locked,\n    is_withdrawal_locked: is_withdrawal_locked,\n    is_identity_verification_needed: is_identity_verification_needed,\n    excluded_until: loginid ? (_accounts$loginid = accounts[loginid]) === null || _accounts$loginid === void 0 ? void 0 : _accounts$loginid.excluded_until : undefined\n  });\n  return /*#__PURE__*/external_react_default().createElement(empty_state/* default */.Z, {\n    icon: state.icon,\n    title: state.title,\n    description: state.description\n  });\n});\n/* harmony default export */ const cashier_locked = (CashierLocked);\n;// CONCATENATED MODULE: ./components/cashier-locked/index.ts\n\n/* harmony default export */ const components_cashier_locked = (cashier_locked);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/cashier-locked/index.ts\n");

/***/ }),

/***/ "./components/empty-state/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_empty_state)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n;// CONCATENATED MODULE: ./components/empty-state/empty-state.tsx\n\n\n\nvar EmptyState = function EmptyState(_ref) {\n  var icon = _ref.icon,\n    title = _ref.title,\n    description = _ref.description,\n    action = _ref.action;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier-empty-state\"\n  }, icon && /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: icon,\n    data_testid: \"dt_empty_state_icon\",\n    className: \"cashier-empty-state__icon\"\n  }), title && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h2\",\n    weight: \"bold\",\n    align: \"center\",\n    \"data-testid\": \"dt_empty_state_title\",\n    className: \"cashier-empty-state__title\"\n  }, title), description && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    size: \"xs\",\n    align: \"center\",\n    \"data-testid\": \"dt_empty_state_description\",\n    className: \"cashier-empty-state__desc\"\n  }, description), action && /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    has_effect: true,\n    text: action.label,\n    onClick: action.onClick,\n    primary: action.primary || true,\n    tertiary: action.tertiary,\n    is_disabled: action.disabled,\n    large: true,\n    \"data-testid\": \"dt_empty_state_action\",\n    className: \"cashier-empty-state__action\"\n  }));\n};\n/* harmony default export */ const empty_state = (EmptyState);\n;// CONCATENATED MODULE: ./components/empty-state/index.ts\n\n/* harmony default export */ const components_empty_state = (empty_state);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2VtcHR5LXN0YXRlL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQWlCQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBR0E7O0FDNURBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uL2NvbXBvbmVudHMvZW1wdHktc3RhdGUvZW1wdHktc3RhdGUudHN4PzQxYjAiLCJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL2VtcHR5LXN0YXRlL2luZGV4LnRzPzJjYzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEljb24sIFRleHQsIEJ1dHRvbiB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcbmltcG9ydCAnLi9lbXB0eS1zdGF0ZS5zY3NzJztcblxudHlwZSBUQWN0aW9uID0ge1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgb25DbGljaz86IFZvaWRGdW5jdGlvbjtcbiAgICBwcmltYXJ5PzogYm9vbGVhbjtcbiAgICB0ZXJ0aWFyeT86IGJvb2xlYW47XG4gICAgZGlzYWJsZWQ/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IHR5cGUgVEVtcHR5U3RhdGVQcm9wcyA9IHtcbiAgICBpY29uPzogc3RyaW5nO1xuICAgIHRpdGxlPzogUmVhY3QuUmVhY3ROb2RlO1xuICAgIGRlc2NyaXB0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xuICAgIGFjdGlvbj86IFRBY3Rpb247XG59ICYgKHsgdGl0bGU6IFJlYWN0LlJlYWN0Tm9kZSB9IHwgeyBkZXNjcmlwdGlvbjogUmVhY3QuUmVhY3ROb2RlIH0pO1xuXG5jb25zdCBFbXB0eVN0YXRlID0gKHsgaWNvbiwgdGl0bGUsIGRlc2NyaXB0aW9uLCBhY3Rpb24gfTogVEVtcHR5U3RhdGVQcm9wcykgPT4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdjYXNoaWVyLWVtcHR5LXN0YXRlJz5cbiAgICAgICAge2ljb24gJiYgPEljb24gaWNvbj17aWNvbn0gZGF0YV90ZXN0aWQ9J2R0X2VtcHR5X3N0YXRlX2ljb24nIGNsYXNzTmFtZT0nY2FzaGllci1lbXB0eS1zdGF0ZV9faWNvbicgLz59XG4gICAgICAgIHt0aXRsZSAmJiAoXG4gICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgIGFzPSdoMidcbiAgICAgICAgICAgICAgICB3ZWlnaHQ9J2JvbGQnXG4gICAgICAgICAgICAgICAgYWxpZ249J2NlbnRlcidcbiAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0nZHRfZW1wdHlfc3RhdGVfdGl0bGUnXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdjYXNoaWVyLWVtcHR5LXN0YXRlX190aXRsZSdcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICl9XG4gICAgICAgIHtkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgIGFzPSdwJ1xuICAgICAgICAgICAgICAgIHNpemU9J3hzJ1xuICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInXG4gICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9J2R0X2VtcHR5X3N0YXRlX2Rlc2NyaXB0aW9uJ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2FzaGllci1lbXB0eS1zdGF0ZV9fZGVzYydcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7ZGVzY3JpcHRpb259XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICl9XG4gICAgICAgIHthY3Rpb24gJiYgKFxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgIGhhc19lZmZlY3RcbiAgICAgICAgICAgICAgICB0ZXh0PXthY3Rpb24ubGFiZWx9XG4gICAgICAgICAgICAgICAgb25DbGljaz17YWN0aW9uLm9uQ2xpY2t9XG4gICAgICAgICAgICAgICAgcHJpbWFyeT17YWN0aW9uLnByaW1hcnkgfHwgdHJ1ZX1cbiAgICAgICAgICAgICAgICB0ZXJ0aWFyeT17YWN0aW9uLnRlcnRpYXJ5fVxuICAgICAgICAgICAgICAgIGlzX2Rpc2FibGVkPXthY3Rpb24uZGlzYWJsZWR9XG4gICAgICAgICAgICAgICAgbGFyZ2VcbiAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0nZHRfZW1wdHlfc3RhdGVfYWN0aW9uJ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2FzaGllci1lbXB0eS1zdGF0ZV9fYWN0aW9uJ1xuICAgICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICA8L2Rpdj5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IEVtcHR5U3RhdGU7XG4iLCJpbXBvcnQgRW1wdHlTdGF0ZSBmcm9tICcuL2VtcHR5LXN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgRW1wdHlTdGF0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/empty-state/index.ts\n");

/***/ }),

/***/ "./components/side-note/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_side_note)\n});\n\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ./components/side-note/side-note.tsx\n\n\n\n\n\n\nvar SideNoteTitle = function SideNoteTitle(_ref) {\n  var children_length = _ref.children_length,\n    side_notes_length = _ref.side_notes_length,\n    title = _ref.title;\n  var length_of_notes = children_length || side_notes_length || 0;\n  return /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    className: \"side-note-legacy__title\",\n    weight: \"bold\",\n    as: \"p\"\n  }, title || (length_of_notes > 1 ? /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Notes\"\n  }) : /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Note\"\n  })));\n};\nvar SideNoteBullet = function SideNoteBullet(_ref2) {\n  var children = _ref2.children,\n    id = _ref2.id;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"side-note-legacy__bullet-wrapper\",\n    \"data-testid\": \"dt_side_note_bullet_wrapper_\".concat(id)\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"side-note-legacy__bullet\",\n    \"data-testid\": \"dt_side_note_bullet_\".concat(id)\n  }), /*#__PURE__*/external_react_default().createElement(\"div\", null, children));\n};\n\n/** @deprecated Use `SideNote` from `@deriv/components` package instead. */\nvar SideNote = function SideNote(_ref3) {\n  var children = _ref3.children,\n    className = _ref3.className,\n    _ref3$has_bullets = _ref3.has_bullets,\n    has_bullets = _ref3$has_bullets === void 0 ? true : _ref3$has_bullets,\n    _ref3$has_title = _ref3.has_title,\n    has_title = _ref3$has_title === void 0 ? true : _ref3$has_title,\n    is_mobile = _ref3.is_mobile,\n    side_notes = _ref3.side_notes,\n    title = _ref3.title;\n  var Wrapper = is_mobile ? components_.MobileWrapper : components_.DesktopWrapper;\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, (children || (side_notes === null || side_notes === void 0 ? void 0 : side_notes.length)) && /*#__PURE__*/external_react_default().createElement(Wrapper, null, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: classnames_default()('side-note-legacy', {\n      'side-note-legacy--mobile': (0,shared_.isMobile)()\n    }, className)\n  }, has_title && /*#__PURE__*/external_react_default().createElement(SideNoteTitle, {\n    title: title,\n    children_length: Array.isArray(children) ? children === null || children === void 0 ? void 0 : children.length : 1,\n    side_notes_length: side_notes === null || side_notes === void 0 ? void 0 : side_notes.length\n  }), children && /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, children), !children && (side_notes === null || side_notes === void 0 ? void 0 : side_notes.map(function (note, i) {\n    return has_bullets ? /*#__PURE__*/external_react_default().createElement(SideNoteBullet, {\n      id: i,\n      key: i\n    }, note) : /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      key: i,\n      className: \"side-note-legacy__text\",\n      size: \"xxs\",\n      as: \"p\"\n    }, note);\n  })))));\n};\n/* harmony default export */ const side_note = (SideNote);\n;// CONCATENATED MODULE: ./components/side-note/index.ts\n\n/* harmony default export */ const components_side_note = (side_note);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3NpZGUtbm90ZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBcUJBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7O0FBR0E7QUFDQTtBQVFBO0FBTkE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFLQTtBQUVBO0FBQUE7QUFFQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBT0E7QUFFQTtBQUFBO0FBQUE7QUFJQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFPQTtBQUVBOztBQ2pHQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL3NpZGUtbm90ZS9zaWRlLW5vdGUudHN4PzBhZmYiLCJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL3NpZGUtbm90ZS9pbmRleC50cz9hYTJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IERlc2t0b3BXcmFwcGVyLCBNb2JpbGVXcmFwcGVyLCBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCB7IGlzTW9iaWxlIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgeyBUU2lkZU5vdGVzUHJvcHMgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgJy4vc2lkZS1ub3RlLnNjc3MnO1xuXG50eXBlIFRTaWRlTm90ZVRpdGxlID0ge1xuICAgIGNoaWxkcmVuX2xlbmd0aD86IG51bWJlcjtcbiAgICBzaWRlX25vdGVzX2xlbmd0aD86IG51bWJlcjtcbiAgICB0aXRsZT86IHN0cmluZyB8IEpTWC5FbGVtZW50O1xufTtcblxudHlwZSBUU2lkZU5vdGVCdWxsZXQgPSBSZWFjdC5Qcm9wc1dpdGhDaGlsZHJlbjx7XG4gICAgaWQ6IG51bWJlcjtcbn0+O1xuXG50eXBlIFRTaWRlTm90ZVByb3BzID0gUmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW48e1xuICAgIGNsYXNzTmFtZT86IHN0cmluZztcbiAgICBoYXNfYnVsbGV0cz86IGJvb2xlYW47XG4gICAgaGFzX3RpdGxlPzogYm9vbGVhbjtcbiAgICBpc19tb2JpbGU/OiBib29sZWFuO1xuICAgIHNpZGVfbm90ZXM/OiBUU2lkZU5vdGVzUHJvcHM7XG4gICAgdGl0bGU/OiBzdHJpbmcgfCBKU1guRWxlbWVudDtcbn0+O1xuXG5jb25zdCBTaWRlTm90ZVRpdGxlID0gKHsgY2hpbGRyZW5fbGVuZ3RoLCBzaWRlX25vdGVzX2xlbmd0aCwgdGl0bGUgfTogVFNpZGVOb3RlVGl0bGUpID0+IHtcbiAgICBjb25zdCBsZW5ndGhfb2Zfbm90ZXMgPSBjaGlsZHJlbl9sZW5ndGggfHwgc2lkZV9ub3Rlc19sZW5ndGggfHwgMDtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxUZXh0IGNsYXNzTmFtZT0nc2lkZS1ub3RlLWxlZ2FjeV9fdGl0bGUnIHdlaWdodD0nYm9sZCcgYXM9J3AnPlxuICAgICAgICAgICAge3RpdGxlIHx8XG4gICAgICAgICAgICAgICAgKGxlbmd0aF9vZl9ub3RlcyA+IDEgPyA8TG9jYWxpemUgaTE4bl9kZWZhdWx0X3RleHQ9J05vdGVzJyAvPiA6IDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nTm90ZScgLz4pfVxuICAgICAgICA8L1RleHQ+XG4gICAgKTtcbn07XG5cbmNvbnN0IFNpZGVOb3RlQnVsbGV0ID0gKHsgY2hpbGRyZW4sIGlkIH06IFRTaWRlTm90ZUJ1bGxldCkgPT4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdzaWRlLW5vdGUtbGVnYWN5X19idWxsZXQtd3JhcHBlcicgZGF0YS10ZXN0aWQ9e2BkdF9zaWRlX25vdGVfYnVsbGV0X3dyYXBwZXJfJHtpZH1gfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NpZGUtbm90ZS1sZWdhY3lfX2J1bGxldCcgZGF0YS10ZXN0aWQ9e2BkdF9zaWRlX25vdGVfYnVsbGV0XyR7aWR9YH0gLz5cbiAgICAgICAgPGRpdj57Y2hpbGRyZW59PC9kaXY+XG4gICAgPC9kaXY+XG4pO1xuXG4vKiogQGRlcHJlY2F0ZWQgVXNlIGBTaWRlTm90ZWAgZnJvbSBgQGRlcml2L2NvbXBvbmVudHNgIHBhY2thZ2UgaW5zdGVhZC4gKi9cbmNvbnN0IFNpZGVOb3RlID0gKHtcbiAgICBjaGlsZHJlbixcbiAgICBjbGFzc05hbWUsXG4gICAgaGFzX2J1bGxldHMgPSB0cnVlLFxuICAgIGhhc190aXRsZSA9IHRydWUsXG4gICAgaXNfbW9iaWxlLFxuICAgIHNpZGVfbm90ZXMsXG4gICAgdGl0bGUsXG59OiBUU2lkZU5vdGVQcm9wcykgPT4ge1xuICAgIGNvbnN0IFdyYXBwZXIgPSBpc19tb2JpbGUgPyBNb2JpbGVXcmFwcGVyIDogRGVza3RvcFdyYXBwZXI7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgeyhjaGlsZHJlbiB8fCBzaWRlX25vdGVzPy5sZW5ndGgpICYmIChcbiAgICAgICAgICAgICAgICA8V3JhcHBlcj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzaWRlLW5vdGUtbGVnYWN5JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICdzaWRlLW5vdGUtbGVnYWN5LS1tb2JpbGUnOiBpc01vYmlsZSgpIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7aGFzX3RpdGxlICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2lkZU5vdGVUaXRsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17dGl0bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuX2xlbmd0aD17QXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbj8ubGVuZ3RoIDogMX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2lkZV9ub3Rlc19sZW5ndGg9e3NpZGVfbm90ZXM/Lmxlbmd0aH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVuICYmIDw+e2NoaWxkcmVufTwvPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyFjaGlsZHJlbiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZGVfbm90ZXM/Lm1hcCgobm90ZSwgaSkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzX2J1bGxldHMgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2lkZU5vdGVCdWxsZXQgaWQ9e2l9IGtleT17aX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge25vdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NpZGVOb3RlQnVsbGV0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQga2V5PXtpfSBjbGFzc05hbWU9J3NpZGUtbm90ZS1sZWdhY3lfX3RleHQnIHNpemU9J3h4cycgYXM9J3AnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtub3RlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9XcmFwcGVyPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC8+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNpZGVOb3RlO1xuIiwiaW1wb3J0IFNpZGVOb3RlIGZyb20gJy4vc2lkZS1ub3RlJztcblxuZXhwb3J0IGRlZmF1bHQgU2lkZU5vdGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/side-note/index.ts\n");

/***/ }),

/***/ "./pages/on-ramp/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ pages_on_ramp)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: ../../hooks/src/index.ts + 40 modules\nvar src = __webpack_require__(\"../../hooks/src/index.ts\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: ../../stores/src/index.ts + 10 modules\nvar stores_src = __webpack_require__(\"../../stores/src/index.ts\");\n// EXTERNAL MODULE: ./components/cashier-locked/index.ts + 2 modules\nvar cashier_locked = __webpack_require__(\"./components/cashier-locked/index.ts\");\n// EXTERNAL MODULE: ./components/side-note/index.ts + 1 modules\nvar side_note = __webpack_require__(\"./components/side-note/index.ts\");\n// EXTERNAL MODULE: ./stores/useCashierStores.tsx\nvar useCashierStores = __webpack_require__(\"./stores/useCashierStores.tsx\");\n;// CONCATENATED MODULE: ./pages/on-ramp/on-ramp-provider-card/on-ramp-provider-card.tsx\n\n\n\n\n\nvar OnRampProviderCard = (0,stores_src.observer)(function (_ref) {\n  var provider = _ref.provider;\n  var _useStore = (0,stores_src.useStore)(),\n    ui = _useStore.ui;\n  var is_dark_mode_on = ui.is_dark_mode_on,\n    is_mobile = ui.is_mobile;\n  var _useCashierStore = (0,useCashierStores/* useCashierStore */.E)(),\n    onramp = _useCashierStore.onramp;\n  var setSelectedProvider = onramp.setSelectedProvider;\n  var payment_icons = provider.getPaymentIcons();\n  var gtm_identifier = provider.name.toLowerCase().replace(' ', '-');\n  var logo_size = is_mobile ? 56 : 128;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__provider\"\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__provider-logo\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    data_testid: is_dark_mode_on ? 'dti_provider_icon_dark' : 'dti_provider_icon_light',\n    icon: is_dark_mode_on ? provider.icon.dark : provider.icon.light,\n    width: logo_size,\n    height: logo_size\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: \"s\",\n    color: \"prominent\",\n    weight: \"bold\",\n    line_height: \"l\",\n    className: \"on-ramp__provider-name\"\n  }, provider.name), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: \"xs\",\n    line_height: \"m\",\n    as: \"p\",\n    className: \"on-ramp__provider-description\"\n  }, provider.getDescription()), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__provider-payment-icons\"\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__provider-payment-icons-shadow\"\n  }), /*#__PURE__*/external_react_default().createElement(components_.NewsTicker, {\n    speed: 10\n  }, payment_icons.map(function (payment_icon, idx) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n      data_testid: is_dark_mode_on ? 'dti_payment_icon_dark' : 'dti_payment_icon_light',\n      icon: is_dark_mode_on ? payment_icon.dark : payment_icon.light,\n      key: idx,\n      size: 40\n    });\n  }))), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    id: \"gtm-onramp-provider-select--\".concat(gtm_identifier),\n    className: \"on-ramp__provider-button\",\n    type: \"button\",\n    has_effect: true,\n    onClick: function onClick() {\n      return setSelectedProvider(provider);\n    },\n    text: (0,translations_.localize)('Select'),\n    primary: true,\n    small: is_mobile\n  }));\n});\n/* harmony default export */ const on_ramp_provider_card = (OnRampProviderCard);\n;// CONCATENATED MODULE: ./pages/on-ramp/on-ramp-provider-card/index.ts\n\n/* harmony default export */ const on_ramp_on_ramp_provider_card = (on_ramp_provider_card);\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n;// CONCATENATED MODULE: ./pages/on-ramp/on-ramp-provider-popup/on-ramp-provider-popup.tsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\nvar OnRampProviderPopup = (0,stores_src.observer)(function () {\n  var _useStore = (0,stores_src.useStore)(),\n    ui = _useStore.ui;\n  var is_dark_mode_on = ui.is_dark_mode_on;\n  var _useCashierStore = (0,useCashierStores/* useCashierStore */.E)(),\n    onramp = _useCashierStore.onramp;\n  var api_error = onramp.api_error,\n    deposit_address = onramp.deposit_address,\n    is_deposit_address_loading = onramp.is_deposit_address_loading,\n    is_requesting_widget_html = onramp.is_requesting_widget_html,\n    onClickDisclaimerContinue = onramp.onClickDisclaimerContinue,\n    onClickGoToDepositPage = onramp.onClickGoToDepositPage,\n    selected_provider = onramp.selected_provider,\n    setIsOnRampModalOpen = onramp.setIsOnRampModalOpen,\n    should_show_dialog = onramp.should_show_dialog,\n    should_show_widget = onramp.should_show_widget,\n    widget_error = onramp.widget_error,\n    widget_html = onramp.widget_html;\n  var el_onramp_widget_container_ref = external_react_default().useRef(null);\n  var _useCopyToClipboard = (0,components_.useCopyToClipboard)(),\n    _useCopyToClipboard2 = _slicedToArray(_useCopyToClipboard, 3),\n    is_copied = _useCopyToClipboard2[0],\n    copyToClipboard = _useCopyToClipboard2[1],\n    setIsCopied = _useCopyToClipboard2[2];\n  var timeout_clipboard;\n  var onClickCopyDepositAddress = function onClickCopyDepositAddress() {\n    copyToClipboard(deposit_address || '');\n    timeout_clipboard = setTimeout(function () {\n      setIsCopied(false);\n    }, 500);\n  };\n  external_react_default().useEffect(function () {\n    return function () {\n      return clearTimeout(timeout_clipboard);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // JS executed after \"on-ramp__widget-container\" has been added to the DOM.\n  // Used for providers that require JS to be executed for inclusion of their widget.\n  // (vs embedding an <iframe>)\n  external_react_default().useEffect(function () {\n    if (should_show_widget && widget_html) {\n      selected_provider === null || selected_provider === void 0 ? void 0 : selected_provider.onMountWidgetContainer(el_onramp_widget_container_ref);\n    }\n  }, [selected_provider, should_show_widget, widget_html]);\n  if (selected_provider === null) {\n    return null;\n  }\n  if (is_deposit_address_loading || should_show_widget && is_requesting_widget_html) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Loading, {\n      is_fullscreen: true\n    });\n  }\n  if (should_show_widget) {\n    return /*#__PURE__*/external_react_default().createElement(\"div\", {\n      className: classnames_default()('on-ramp__widget-container', {\n        'on-ramp__widget-container--error': widget_error\n      }),\n      ref: el_onramp_widget_container_ref\n    }, widget_error ? /*#__PURE__*/external_react_default().createElement(\"div\", {\n      className: \"on-ramp__widget-container-error\"\n    }, widget_error) : /*#__PURE__*/external_react_default().createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: widget_html || ''\n      }\n    }));\n  }\n  if (should_show_dialog) {\n    return /*#__PURE__*/external_react_default().createElement(\"div\", {\n      className: \"on-ramp__popup-no-deposit-address\"\n    }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      size: \"xs\",\n      className: \"on-ramp__popup-no-deposit-address-text\"\n    }, api_error ? /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"Please go to the Deposit page to get an address.\"\n    }) : /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"Please go to the Deposit page to generate an address. Then come back here to continue with your transaction.\"\n    })), /*#__PURE__*/external_react_default().createElement(components_.Button.Group, {\n      className: \"on-ramp__popup-no-deposit-address-buttons\"\n    }, /*#__PURE__*/external_react_default().createElement(components_.Button, {\n      text: (0,translations_.localize)('Cancel'),\n      onClick: function onClick() {\n        return setIsOnRampModalOpen(false);\n      },\n      secondary: true,\n      large: true\n    }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n      text: (0,translations_.localize)('Go to Deposit page'),\n      onClick: onClickGoToDepositPage,\n      primary: true,\n      large: true\n    })));\n  }\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__popup\",\n    \"data-testid\": \"dti_on-ramp_popup\"\n  }, selected_provider.should_show_deposit_address && /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__popup-deposit\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: (0,shared_.isMobile)() ? 'xxs' : 'xs',\n    color: \"general\",\n    line_height: (0,shared_.isMobile)() ? 'm' : 'l',\n    align: (0,shared_.isMobile)() ? 'left' : 'center'\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Please copy the crypto address you see below. You'll need it to deposit your cryptocurrency.\"\n  })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__popup-deposit-address\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Popover, {\n    zIndex: \"9998\",\n    alignment: \"right\",\n    message: (0,translations_.localize)('Copied!'),\n    is_open: is_copied\n  }, /*#__PURE__*/external_react_default().createElement(\"input\", {\n    className: classnames_default()('on-ramp__popup-deposit-address-text', {\n      'on-ramp__popup-deposit-address-text--dark': is_dark_mode_on\n    }),\n    defaultValue: deposit_address || '',\n    disabled: true,\n    onFocus: function onFocus(e) {\n      return e.preventDefault();\n    }\n  }), /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    className: \"on-ramp__popup-deposit-address-icon\",\n    data_testid: \"dti_deposit_address_icon\",\n    icon: (0,shared_.isMobile)() ? 'IcCopy' : 'icClipboard',\n    size: 16,\n    onClick: onClickCopyDepositAddress\n  }))), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__popup-deposit-address-hint\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.HintBox, {\n    icon: 'IcInfo',\n    is_info: true,\n    message: (0,translations_.localize)('This address can only be used ONCE. Please copy a new one for your next transaction.')\n  }))), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__popup-divider\"\n  })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__popup-disclaimer\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    line_height: \"m\",\n    weight: \"bold\",\n    color: \"prominent\",\n    as: \"p\",\n    className: \"on-ramp__popup-disclaimer-title\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Disclaimer\"\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: (0,shared_.isMobile)() ? 'xxs' : 'xs',\n    line_height: \"l\",\n    color: \"general\",\n    as: \"p\",\n    className: \"on-ramp__popup-disclaimer-text\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"By clicking 'Continue' you will be redirected to {{ service }}, a third-party payment service provider. Please note that {{ website_name }} is not responsible for the content or services provided by {{ service }}. If you encounter any issues related to {{ service }} services, you must contact {{ service }} directly.\",\n    values: {\n      service: selected_provider.name,\n      website_name: shared_.website_name\n    }\n  }))), !should_show_widget && deposit_address && /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__popup-buttons\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Button.Group, null, /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    large: true,\n    onClick: function onClick() {\n      return setIsOnRampModalOpen(false);\n    },\n    secondary: true,\n    text: (0,translations_.localize)('Cancel')\n  }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    id: \"gtm-onramp-provider-continue--\".concat((0,shared_.getKebabCase)(selected_provider.name)),\n    large: true,\n    onClick: onClickDisclaimerContinue,\n    primary: true,\n    text: (0,translations_.localize)('Continue')\n  }))));\n});\n/* harmony default export */ const on_ramp_provider_popup = (OnRampProviderPopup);\n;// CONCATENATED MODULE: ./pages/on-ramp/on-ramp-provider-popup/index.ts\n\n/* harmony default export */ const on_ramp_on_ramp_provider_popup = (on_ramp_provider_popup);\n;// CONCATENATED MODULE: ./pages/on-ramp/on-ramp.tsx\nfunction on_ramp_slicedToArray(arr, i) { return on_ramp_arrayWithHoles(arr) || on_ramp_iterableToArrayLimit(arr, i) || on_ramp_unsupportedIterableToArray(arr, i) || on_ramp_nonIterableRest(); }\nfunction on_ramp_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction on_ramp_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return on_ramp_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return on_ramp_arrayLikeToArray(o, minLen); }\nfunction on_ramp_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction on_ramp_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction on_ramp_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\nvar OnRampSideNote = function OnRampSideNote() {\n  var notes = [/*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Fiat onramp is a cashier service that allows you to convert fiat currencies to crypto to top up your Deriv crypto accounts. Listed here are third-party crypto exchanges. You\\u2019ll need to create an account with them to use their services.\",\n    key: 0\n  })];\n  return /*#__PURE__*/external_react_default().createElement(side_note/* default */.Z, {\n    side_notes: notes,\n    title: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"What is Fiat onramp?\"\n    })\n  });\n};\nvar OnRampInfo = function OnRampInfo() {\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__info\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    color: \"prominent\",\n    size: \"s\",\n    weight: \"bold\",\n    className: \"on-ramp__info-header\",\n    as: \"p\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"What is Fiat onramp?\"\n  })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"on-ramp__info-content\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.ReadMore, {\n    expand_text: (0,translations_.localize)('See more'),\n    text: (0,translations_.localize)('Fiat onramp is a cashier service that allows you to convert fiat currencies to crypto to top up your Deriv crypto accounts. Listed here are third-party crypto exchanges. You’ll need to create an account with them to use their services.'),\n    collapse_length: 140,\n    className: \"on-ramp__read-more\"\n  })));\n};\nvar OnRamp = (0,stores_src.observer)(function (_ref) {\n  var menu_options = _ref.menu_options,\n    setSideNotes = _ref.setSideNotes;\n  var _useStore = (0,stores_src.useStore)(),\n    common = _useStore.common,\n    client = _useStore.client;\n  var _useCashierStore = (0,useCashierStores/* useCashierStore */.E)(),\n    onramp = _useCashierStore.onramp,\n    general_store = _useCashierStore.general_store;\n  var filtered_onramp_providers = onramp.filtered_onramp_providers,\n    is_onramp_modal_open = onramp.is_onramp_modal_open,\n    onMountOnramp = onramp.onMountOnramp,\n    onUnmountOnramp = onramp.onUnmountOnramp,\n    onramp_popup_modal_title = onramp.onramp_popup_modal_title,\n    resetPopup = onramp.resetPopup,\n    setIsOnRampModalOpen = onramp.setIsOnRampModalOpen,\n    should_show_dialog = onramp.should_show_dialog;\n  var is_cashier_onboarding = general_store.is_cashier_onboarding,\n    is_loading = general_store.is_loading,\n    cashier_route_tab_index = general_store.cashier_route_tab_index;\n  var is_cashier_locked = (0,src.useCashierLocked)();\n  var is_switching = client.is_switching;\n  var routeTo = common.routeTo;\n  var is_deposit_locked = (0,src.useDepositLocked)();\n  var _React$useState = external_react_default().useState(shared_.routes.cashier_onramp),\n    _React$useState2 = on_ramp_slicedToArray(_React$useState, 2),\n    selected_cashier_path = _React$useState2[0],\n    setSelectedCashierPath = _React$useState2[1];\n  external_react_default().useEffect(function () {\n    if (menu_options && selected_cashier_path !== shared_.routes.cashier_onramp) {\n      routeTo(selected_cashier_path);\n    }\n  }, [menu_options, routeTo, selected_cashier_path]);\n  external_react_default().useEffect(function () {\n    onMountOnramp();\n    if (typeof setSideNotes === 'function' && !is_switching && !is_loading) {\n      setSideNotes([/*#__PURE__*/external_react_default().createElement(OnRampSideNote, {\n        key: 0\n      })]);\n    }\n    return function () {\n      onUnmountOnramp();\n      if (typeof setSideNotes === 'function') {\n        setSideNotes([]);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMountOnramp, onUnmountOnramp, is_cashier_onboarding, is_switching, is_loading, cashier_route_tab_index]);\n  var getActivePaths = function getActivePaths() {\n    return (menu_options !== null && menu_options !== void 0 ? menu_options : []).map(function (menu_option) {\n      return {\n        text: menu_option.label,\n        value: menu_option.path\n      };\n    });\n  };\n  if (is_switching || is_loading) return /*#__PURE__*/external_react_default().createElement(components_.Loading, {\n    className: \"cashier-onboarding__loader\",\n    is_fullscreen: true\n  });\n  if (is_deposit_locked || is_cashier_locked) {\n    return /*#__PURE__*/external_react_default().createElement(cashier_locked/* default */.Z, null);\n  }\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier__wrapper cashier__wrapper--align-left on-ramp\"\n  }, (0,shared_.isMobile)() && /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(components_.SelectNative, {\n    data_testid: \"dt_on_ramp_select_native\",\n    className: \"on-ramp__selector\",\n    label: '',\n    list_items: getActivePaths(),\n    value: selected_cashier_path,\n    should_show_empty_option: false,\n    hide_top_placeholder: false,\n    onChange: function onChange(e) {\n      if (e.currentTarget.value !== selected_cashier_path) {\n        setSelectedCashierPath(e.currentTarget.value);\n      }\n    }\n  }), /*#__PURE__*/external_react_default().createElement(OnRampInfo, null)), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    color: (0,shared_.isMobile)() ? 'less-prominent' : 'general',\n    weight: (0,shared_.isMobile)() ? 'normal' : 'bold',\n    align: \"center\",\n    line_height: \"m\",\n    className: \"on-ramp__page-header\",\n    as: \"p\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Select payment channel\"\n  })), filtered_onramp_providers.map(function (provider) {\n    return /*#__PURE__*/external_react_default().createElement(on_ramp_on_ramp_provider_card, {\n      key: provider.name,\n      provider: provider\n    });\n  }), /*#__PURE__*/external_react_default().createElement(components_.Modal, {\n    className: \"on-ramp__modal\",\n    has_close_icon: true,\n    is_open: is_onramp_modal_open,\n    small: should_show_dialog,\n    title: onramp_popup_modal_title,\n    toggleModal: function toggleModal() {\n      return setIsOnRampModalOpen(!is_onramp_modal_open);\n    },\n    onUnmount: resetPopup,\n    width: should_show_dialog ? '44rem' : '62.8rem'\n  }, /*#__PURE__*/external_react_default().createElement(components_.Modal.Body, null, /*#__PURE__*/external_react_default().createElement(on_ramp_on_ramp_provider_popup, null)))));\n});\n/* harmony default export */ const on_ramp = (OnRamp);\n;// CONCATENATED MODULE: ./pages/on-ramp/index.ts\n\n/* harmony default export */ const pages_on_ramp = (on_ramp);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/on-ramp/index.ts\n");

/***/ }),

/***/ "./stores/useCashierStores.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"E\": () => (/* binding */ useCashierStore)\n/* harmony export */ });\n/* unused harmony export CashierStoreProvider */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../stores/src/index.ts\");\n\n\nvar CashierStoreContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar CashierStoreProvider = function CashierStoreProvider(_ref) {\n  var children = _ref.children;\n  var _useStore = useStore(),\n    modules = _useStore.modules;\n  // const memoizedValue = useMemo(() => new CashierStore(), []);\n\n  return /*#__PURE__*/React.createElement(CashierStoreContext.Provider, {\n    // value={memoizedValue}\n    value: modules === null || modules === void 0 ? void 0 : modules.cashier\n  }, children);\n};\nvar useCashierStore = function useCashierStore() {\n  var store = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(CashierStoreContext);\n  if (!store) {\n    throw new Error('useCashierStore must be used within CashierStoreContext');\n  }\n  return store;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdG9yZXMvdXNlQ2FzaGllclN0b3Jlcy50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFHQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFLQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9zdG9yZXMvdXNlQ2FzaGllclN0b3Jlcy50c3g/NGZkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgUHJvcHNXaXRoQ2hpbGRyZW4sIHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ0BkZXJpdi9zdG9yZXMnO1xuaW1wb3J0IENhc2hpZXJTdG9yZSBmcm9tICcuL2Nhc2hpZXItc3RvcmUnO1xuXG5jb25zdCBDYXNoaWVyU3RvcmVDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxDYXNoaWVyU3RvcmUgfCBudWxsPihudWxsKTtcblxuZXhwb3J0IGNvbnN0IENhc2hpZXJTdG9yZVByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfTogUHJvcHNXaXRoQ2hpbGRyZW48dW5rbm93bj4pID0+IHtcbiAgICBjb25zdCB7IG1vZHVsZXMgfSA9IHVzZVN0b3JlKCk7XG4gICAgLy8gY29uc3QgbWVtb2l6ZWRWYWx1ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IENhc2hpZXJTdG9yZSgpLCBbXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Q2FzaGllclN0b3JlQ29udGV4dC5Qcm92aWRlclxuICAgICAgICAgICAgLy8gdmFsdWU9e21lbW9pemVkVmFsdWV9XG4gICAgICAgICAgICB2YWx1ZT17bW9kdWxlcz8uY2FzaGllcn1cbiAgICAgICAgPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0Nhc2hpZXJTdG9yZUNvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VDYXNoaWVyU3RvcmUgPSAoKSA9PiB7XG4gICAgY29uc3Qgc3RvcmUgPSB1c2VDb250ZXh0KENhc2hpZXJTdG9yZUNvbnRleHQpO1xuXG4gICAgaWYgKCFzdG9yZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUNhc2hpZXJTdG9yZSBtdXN0IGJlIHVzZWQgd2l0aGluIENhc2hpZXJTdG9yZUNvbnRleHQnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RvcmU7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./stores/useCashierStores.tsx\n");

/***/ }),

/***/ "../../hooks/src/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"useCashierLocked\": () => (/* reexport */ src_useCashierLocked),\n  \"useDepositLocked\": () => (/* reexport */ src_useDepositLocked),\n  \"useIsSystemMaintenance\": () => (/* reexport */ src_useIsSystemMaintenance)\n});\n\n// UNUSED EXPORTS: useAccountTransferVisible, useCFDAccounts, useCFDAllAccounts, useCFDDemoAccounts, useCFDRealAccounts, useCountdown, useCurrencyConfig, useDepositCryptoAddress, useExchangeRate, useFeatureFlags, useFiatAccountList, useHasActiveRealAccount, useHasCryptoCurrency, useHasFiatCurrency, useHasMaltaInvestAccount, useHasSetCurrency, useHasSvgAccount, useHasSwapFreeAccount, useHasUSDCurrency, useInputATMFormatter, useInputDecimalFormatter, useIsP2PEnabled, useIsRealAccountNeededForCashier, useNeedAuthentication, useNeedFinancialAssessment, useNeedTNC, useOnrampVisible, useP2PNotificationCount, usePaymentAgentList, usePaymentAgentTransferVisible, usePlatformAccounts, usePlatformDemoAccount, usePlatformRealAccounts, useRealSTPAccount, useTotalAccountBalance, useVerifyEmail\n\n// EXTERNAL MODULE: ../../stores/src/index.ts + 10 modules\nvar src = __webpack_require__(\"../../stores/src/index.ts\");\n;// CONCATENATED MODULE: ../../hooks/src/useHasMaltaInvestAccount.ts\n\nvar useHasMaltaInvestAccount_useHasMaltaInvestAccount = function useHasMaltaInvestAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var active_accounts = client.active_accounts;\n  var has_malta_invest_account = active_accounts.some(function (account) {\n    return account.landing_company_shortcode === 'maltainvest';\n  });\n  return has_malta_invest_account;\n};\n/* harmony default export */ const src_useHasMaltaInvestAccount = ((/* unused pure expression or super */ null && (useHasMaltaInvestAccount_useHasMaltaInvestAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useAccountTransferVisible.ts\n\n\nvar useAccountTransferVisible = function useAccountTransferVisible() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var landing_company_shortcode = client.landing_company_shortcode,\n    residence = client.residence;\n  var has_malta_invest_account = useHasMaltaInvestAccount();\n  var is_account_transfer_visible = residence !== 'im' && (landing_company_shortcode !== 'malta' || has_malta_invest_account);\n  return is_account_transfer_visible;\n};\n/* harmony default export */ const src_useAccountTransferVisible = ((/* unused pure expression or super */ null && (useAccountTransferVisible)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDAllAccounts.ts\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/**\n * we can use this hook to get the CFD accounts for both Eu and Non-Eu regions.\n * it gets dxtrade_accounts_list and mt5_login_list from store and merges them into one array\n * and returns the array\n */\nvar useCFDAllAccounts_useCFDAllAccounts = function useCFDAllAccounts() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var dxtrade_accounts_list = client.dxtrade_accounts_list,\n    mt5_login_list = client.mt5_login_list;\n  var cfd_accounts = [];\n  if (Array.isArray(mt5_login_list)) {\n    cfd_accounts = [].concat(_toConsumableArray(cfd_accounts), _toConsumableArray(mt5_login_list));\n  }\n  if (Array.isArray(dxtrade_accounts_list)) {\n    cfd_accounts = [].concat(_toConsumableArray(cfd_accounts), _toConsumableArray(dxtrade_accounts_list));\n  }\n  return cfd_accounts;\n};\n/* harmony default export */ const src_useCFDAllAccounts = ((/* unused pure expression or super */ null && (useCFDAllAccounts_useCFDAllAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDDemoAccounts.ts\n\n\n/**\n *  we can use this hook to get the CFD demo accounts.\n *  it loops through the all of user's CFD accounts, finds and returns demo accounts\n */\nvar useCFDDemoAccounts_useCFDDemoAccounts = function useCFDDemoAccounts() {\n  var cfd_accounts = useCFDAllAccounts();\n  var cfd_demo_accounts = cfd_accounts.filter(function (account) {\n    return account.account_type === 'demo';\n  });\n  return cfd_demo_accounts;\n};\n/* harmony default export */ const src_useCFDDemoAccounts = ((/* unused pure expression or super */ null && (useCFDDemoAccounts_useCFDDemoAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDRealAccounts.ts\n\n\n\n/**\n * we can use this hook to get the real CFD accounts for both Eu and Non-Eu regions.\n * it loops through the all of user's CFD accounts, finds and returns real accounts\n */\nvar useCFDRealAccounts_useCFDRealAccounts = function useCFDRealAccounts() {\n  var _useStore = useStore(),\n    traders_hub = _useStore.traders_hub;\n  var is_eu_user = traders_hub.is_eu_user;\n  var cfd_accounts = useCFDAllAccounts();\n  var cfd_real_accounts = cfd_accounts.filter(function (account) {\n    var is_demo = account.account_type === 'demo';\n    var is_maltainvest = account.landing_company_short === 'maltainvest';\n    if (is_demo) return false;\n    if (!is_eu_user) return !is_maltainvest;\n    return is_maltainvest;\n  });\n  return cfd_real_accounts;\n};\n/* harmony default export */ const src_useCFDRealAccounts = ((/* unused pure expression or super */ null && (useCFDRealAccounts_useCFDRealAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDAccounts.ts\n\n\n\n\n/**\n * this is a wrapper hook for useCFDDemoAccounts and useCFDRealAccounts\n * and it returns different cfd account types which are demo, real, and all\n */\n\nvar useCFDAccounts = function useCFDAccounts() {\n  var all_cfd_accounts = useCFDAllAccounts();\n  var cfd_demo_accounts = useCFDDemoAccounts();\n  var cfd_real_accounts = useCFDRealAccounts();\n  return {\n    all: all_cfd_accounts,\n    demo: cfd_demo_accounts,\n    real: cfd_real_accounts\n  };\n};\n/* harmony default export */ const src_useCFDAccounts = ((/* unused pure expression or super */ null && (useCFDAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCashierLocked.ts\n\nvar useCashierLocked = function useCashierLocked() {\n  var _account_status$statu;\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client;\n  var account_status = client.account_status;\n  var is_cashier_locked = ((_account_status$statu = account_status.status) === null || _account_status$statu === void 0 ? void 0 : _account_status$statu.some(function (status) {\n    return status === 'cashier_locked';\n  })) || false;\n  return is_cashier_locked;\n};\n/* harmony default export */ const src_useCashierLocked = (useCashierLocked);\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\n;// CONCATENATED MODULE: ../../hooks/src/useCountdown.ts\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || useCountdown_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useCountdown_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useCountdown_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useCountdown_arrayLikeToArray(o, minLen); }\nfunction useCountdown_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar ONE_SECOND = 1000;\nvar useCountdown_useCountdown = function useCountdown(_ref) {\n  var from = _ref.from,\n    _ref$to = _ref.to,\n    to = _ref$to === void 0 ? 0 : _ref$to,\n    _ref$increment = _ref.increment,\n    increment = _ref$increment === void 0 ? false : _ref$increment;\n  var _useState = useState(from),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    is_running = _useState4[0],\n    setIsRunning = _useState4[1];\n  useEffect(function () {\n    var timer;\n    if (is_running) {\n      timer = setTimeout(function () {\n        if (count === to) {\n          pause();\n        } else {\n          setCount(function (old) {\n            return increment ? old + 1 : old - 1;\n          });\n        }\n      }, ONE_SECOND);\n    }\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [count, is_running, to, increment]);\n  var start = function start() {\n    return setIsRunning(true);\n  };\n  var pause = function pause() {\n    return setIsRunning(false);\n  };\n  var reset = function reset() {\n    return setCount(from);\n  };\n  var stop = function stop() {\n    pause();\n    reset();\n  };\n  return {\n    count: count,\n    is_running: is_running,\n    start: start,\n    pause: pause,\n    reset: reset,\n    stop: stop\n  };\n};\n/* harmony default export */ const src_useCountdown = ((/* unused pure expression or super */ null && (useCountdown_useCountdown)));\n// EXTERNAL MODULE: ../../api/src/index.ts + 6 modules\nvar api_src = __webpack_require__(\"../../api/src/index.ts\");\n;// CONCATENATED MODULE: ../../hooks/src/useCurrencyConfig.ts\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n/** A custom hook to get the currency config information from `website_status` endpoint */\nvar useCurrencyConfig = function useCurrencyConfig() {\n  var _data$website_status3;\n  var _useFetch = useFetch('website_status'),\n    data = _useFetch.data;\n  var currencies_config = useMemo(function () {\n    var _data$website_status;\n    if (!(data !== null && data !== void 0 && (_data$website_status = data.website_status) !== null && _data$website_status !== void 0 && _data$website_status.currencies_config)) return undefined;\n    var modified_currencies_config = Object.keys(data.website_status.currencies_config).map(function (currency) {\n      var _data$website_status2;\n      var currency_config = data === null || data === void 0 ? void 0 : (_data$website_status2 = data.website_status) === null || _data$website_status2 === void 0 ? void 0 : _data$website_status2.currencies_config[currency];\n      return _objectSpread(_objectSpread({}, currency_config), {}, {\n        /** determine if the currency is a `crypto` currency */\n        is_crypto: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'crypto',\n        /** determine if the currency is a `fiat` currency */\n        is_fiat: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'fiat',\n        /** determine if the currency is `Australian Dollar` */\n        is_AUD: currency === 'AUD',\n        /** determine if the currency is `US Dollar` */\n        is_USD: currency === 'USD',\n        /** determine if the currency is `Euro` */\n        is_EUR: currency === 'EUR',\n        /** determine if the currency is `Pound Sterling` */\n        is_GBP: currency === 'GBP',\n        /** determine if the currency is `Bitcoin` */\n        is_BTC: currency === 'BTC',\n        /** determine if the currency is `Ethereum` */\n        is_ETH: currency === 'ETH',\n        /** determine if the currency is `Litecoin` */\n        is_LTC: currency === 'LTC',\n        /** determine if the currency is `Multi-Collateral DAI` */\n        is_DAI: currency === 'DAI',\n        /** determine if the currency is `IDK` */\n        is_IDK: currency === 'IDK',\n        /** determine if the currency is `Paxos Standard` */\n        is_PAX: currency === 'PAX',\n        /** determine if the currency is `Binary Coin` */\n        is_USB: currency === 'USB',\n        /** determine if the currency is `Tether Omni` */\n        is_USDT: currency === 'UST',\n        /** determine if the currency is `True USD` */\n        is_TUSD: currency === 'TUSD',\n        /** determine if the currency is `Binance USD` */\n        is_BUSD: currency === 'BUSD',\n        /** determine if the currency is `STATIS Euro` */\n        is_EURS: currency === 'EURS',\n        /** determine if the currency is `Tether ERC20` */\n        is_eUSDT: currency === 'eUSDT',\n        /** determine if the currency is `Tether TRC20` */\n        is_tUSDT: currency === 'tUSDT',\n        /** determine if the currency is `USD Coin` */\n        is_USDC: currency === 'USDC',\n        /** determine if the currency is `USDK` */\n        is_USDK: currency === 'USDK',\n        /** Currency code */\n        code: currency,\n        /** Local asset name for the currency icon. ex: `IcCurrencyUsd` for `USD` */\n        icon: \"IcCurrency\".concat(currency[0].toUpperCase() + currency.slice(1).toLowerCase())\n      });\n    });\n    return modified_currencies_config.reduce(function (previous, current) {\n      return _objectSpread(_objectSpread({}, previous), {}, _defineProperty({}, current.code, current));\n    }, {});\n  }, [data === null || data === void 0 ? void 0 : (_data$website_status3 = data.website_status) === null || _data$website_status3 === void 0 ? void 0 : _data$website_status3.currencies_config]);\n  var getConfig = useCallback(function (currency) {\n    return currencies_config === null || currencies_config === void 0 ? void 0 : currencies_config[currency];\n  }, [currencies_config]);\n  return {\n    /** Returns the currency config object for the given currency */\n    getConfig: getConfig,\n    /** Available currencies and their information */\n    currencies_config: currencies_config\n  };\n};\n/* harmony default export */ const src_useCurrencyConfig = ((/* unused pure expression or super */ null && (useCurrencyConfig)));\n;// CONCATENATED MODULE: ../../hooks/src/useDepositCryptoAddress.ts\nfunction useDepositCryptoAddress_typeof(obj) { \"@babel/helpers - typeof\"; return useDepositCryptoAddress_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDepositCryptoAddress_typeof(obj); }\nvar _excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useDepositCryptoAddress_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDepositCryptoAddress_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDepositCryptoAddress_ownKeys(Object(source), !0).forEach(function (key) { useDepositCryptoAddress_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDepositCryptoAddress_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDepositCryptoAddress_defineProperty(obj, key, value) { key = useDepositCryptoAddress_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDepositCryptoAddress_toPropertyKey(arg) { var key = useDepositCryptoAddress_toPrimitive(arg, \"string\"); return useDepositCryptoAddress_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDepositCryptoAddress_toPrimitive(input, hint) { if (useDepositCryptoAddress_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDepositCryptoAddress_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar useDepositCryptoAddress = function useDepositCryptoAddress() {\n  var _data$cashier, _data$cashier$deposit;\n  var _useRequest = useRequest('cashier'),\n    data = _useRequest.data,\n    mutate = _useRequest.mutate,\n    rest = _objectWithoutProperties(_useRequest, _excluded);\n  var deposit_address = typeof (data === null || data === void 0 ? void 0 : data.cashier) !== 'string' ? data === null || data === void 0 ? void 0 : (_data$cashier = data.cashier) === null || _data$cashier === void 0 ? void 0 : (_data$cashier$deposit = _data$cashier.deposit) === null || _data$cashier$deposit === void 0 ? void 0 : _data$cashier$deposit.address : undefined;\n  var send = useCallback(function () {\n    return mutate({\n      payload: {\n        cashier: 'deposit',\n        provider: 'crypto',\n        type: 'api'\n      }\n    });\n  }, [mutate]);\n  useEffect(function () {\n    send();\n  }, [send]);\n  return useDepositCryptoAddress_objectSpread(useDepositCryptoAddress_objectSpread({}, rest), {}, {\n    resend: send,\n    data: deposit_address\n  });\n};\n/* harmony default export */ const src_useDepositCryptoAddress = ((/* unused pure expression or super */ null && (useDepositCryptoAddress)));\n;// CONCATENATED MODULE: ../../hooks/src/useNeedAuthentication.ts\n\nvar useNeedAuthentication = function useNeedAuthentication() {\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  var is_authentication_needed = client.is_authentication_needed;\n  var is_low_risk_cr_eu_real = traders_hub.is_low_risk_cr_eu_real;\n  var is_need_authentication = is_authentication_needed && is_low_risk_cr_eu_real;\n  return is_need_authentication;\n};\n/* harmony default export */ const src_useNeedAuthentication = (useNeedAuthentication);\n;// CONCATENATED MODULE: ../../hooks/src/useNeedFinancialAssessment.ts\n\nvar useNeedFinancialAssessment = function useNeedFinancialAssessment() {\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client;\n  var is_financial_account = client.is_financial_account,\n    is_financial_information_incomplete = client.is_financial_information_incomplete,\n    is_trading_experience_incomplete = client.is_trading_experience_incomplete;\n  var is_need_financial_assessment = is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete);\n  return is_need_financial_assessment;\n};\n/* harmony default export */ const src_useNeedFinancialAssessment = (useNeedFinancialAssessment);\n;// CONCATENATED MODULE: ../../hooks/src/useRealSTPAccount.ts\n\nvar useRealSTPAccount = function useRealSTPAccount() {\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client;\n  var mt5_login_list = client.mt5_login_list;\n  var has_real_stp_account = mt5_login_list.some(function (item) {\n    return item.account_type === 'real' && item.sub_account_type === 'financial_stp';\n  });\n  return has_real_stp_account;\n};\n/* harmony default export */ const src_useRealSTPAccount = (useRealSTPAccount);\n;// CONCATENATED MODULE: ../../hooks/src/useNeedTNC.ts\n\n\nvar useNeedTNC = function useNeedTNC() {\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client;\n  var is_eu = client.is_eu,\n    is_tnc_needed = client.is_tnc_needed;\n  var has_real_stp_account = src_useRealSTPAccount();\n  var is_need_tnc = (is_eu || has_real_stp_account) && is_tnc_needed;\n  return is_need_tnc;\n};\n/* harmony default export */ const src_useNeedTNC = (useNeedTNC);\n;// CONCATENATED MODULE: ../../hooks/src/useDepositLocked.ts\n\n\n\n\nvar useDepositLocked = function useDepositLocked() {\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client;\n  var is_deposit_lock = client.is_deposit_lock,\n    is_trading_experience_incomplete = client.is_trading_experience_incomplete,\n    landing_company_shortcode = client.landing_company_shortcode;\n  var is_need_authentication = src_useNeedAuthentication();\n  var is_need_tnc = src_useNeedTNC();\n  var is_need_financial_assessment = src_useNeedFinancialAssessment();\n  var is_malta_invest = landing_company_shortcode === 'maltainvest';\n  var is_trading_experience_incomplete_or_need_financial_assessment = is_malta_invest ? is_trading_experience_incomplete : is_need_financial_assessment;\n  var is_deposit_locked = is_deposit_lock || is_need_authentication || is_need_tnc || is_trading_experience_incomplete_or_need_financial_assessment;\n  return is_deposit_locked;\n};\n/* harmony default export */ const src_useDepositLocked = (useDepositLocked);\n;// CONCATENATED MODULE: ../../hooks/src/useExchangeRate.ts\n\n\n\n/**\n * we can use this hook to get the exchange rate for the given currency.\n * exchange_rates comes from store and includes the rates for all currencies based on USD.\n */\nvar useExchangeRate_useExchangeRate = function useExchangeRate() {\n  var _useStore = useStore(),\n    exchange_rates = _useStore.exchange_rates;\n  var data = exchange_rates.data;\n  var rates = data === null || data === void 0 ? void 0 : data.rates;\n  var getRate = useCallback(function (currency) {\n    return (rates === null || rates === void 0 ? void 0 : rates[currency]) || 1;\n  }, [rates]);\n  return {\n    getRate: getRate,\n    last_update: data === null || data === void 0 ? void 0 : data.date,\n    base_currency: (data === null || data === void 0 ? void 0 : data.base_currency) || 'USD'\n  };\n};\n/* harmony default export */ const src_useExchangeRate = ((/* unused pure expression or super */ null && (useExchangeRate_useExchangeRate)));\n;// CONCATENATED MODULE: ../../hooks/src/useFeatureFlags.ts\nfunction useFeatureFlags_typeof(obj) { \"@babel/helpers - typeof\"; return useFeatureFlags_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useFeatureFlags_typeof(obj); }\nfunction useFeatureFlags_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useFeatureFlags_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useFeatureFlags_ownKeys(Object(source), !0).forEach(function (key) { useFeatureFlags_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useFeatureFlags_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useFeatureFlags_defineProperty(obj, key, value) { key = useFeatureFlags_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useFeatureFlags_toPropertyKey(arg) { var key = useFeatureFlags_toPrimitive(arg, \"string\"); return useFeatureFlags_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useFeatureFlags_toPrimitive(input, hint) { if (useFeatureFlags_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useFeatureFlags_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nvar useFeatureFlags = function useFeatureFlags() {\n  var _useStore = useStore(),\n    feature_flags = _useStore.feature_flags;\n  var result = useMemo(function () {\n    // Safe to do null assertions here as we are setting default values in the store.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var flags = feature_flags.data;\n    return Object.keys(flags).reduce(function (previous, current) {\n      return useFeatureFlags_objectSpread(useFeatureFlags_objectSpread({}, previous), {}, useFeatureFlags_defineProperty({}, \"is_\".concat(current, \"_enabled\"), Boolean(flags[current])));\n    }, {});\n  }, [feature_flags.data]);\n  return result;\n};\n/* harmony default export */ const src_useFeatureFlags = ((/* unused pure expression or super */ null && (useFeatureFlags)));\n;// CONCATENATED MODULE: ../../hooks/src/useFiatAccountList.ts\n\nvar useFiatAccountList = function useFiatAccountList() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list,\n    is_crypto = client.is_crypto;\n  var fiat_account_list = account_list.filter(function (account) {\n    var _account$loginid;\n    return !account.is_virtual && !is_crypto(account.title || '') && ((_account$loginid = account.loginid) === null || _account$loginid === void 0 ? void 0 : _account$loginid.startsWith('CR'));\n  });\n  return fiat_account_list;\n};\n/* harmony default export */ const src_useFiatAccountList = ((/* unused pure expression or super */ null && (useFiatAccountList)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasActiveRealAccount.ts\n\nvar useHasActiveRealAccount_useHasActiveRealAccount = function useHasActiveRealAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var active_accounts = client.active_accounts;\n  var has_active_real_account = active_accounts.some(function (account) {\n    return account.is_virtual === 0;\n  });\n  return has_active_real_account;\n};\n/* harmony default export */ const src_useHasActiveRealAccount = ((/* unused pure expression or super */ null && (useHasActiveRealAccount_useHasActiveRealAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasCryptoCurrency.ts\n\nvar useHasCryptoCurrency = function useHasCryptoCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list,\n    is_crypto = client.is_crypto;\n  var has_crypto_currency = account_list.some(function (account) {\n    return is_crypto(account.title || 'USD');\n  });\n  return has_crypto_currency;\n};\n/* harmony default export */ const src_useHasCryptoCurrency = ((/* unused pure expression or super */ null && (useHasCryptoCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasFiatCurrency.ts\n\nvar useHasFiatCurrency = function useHasFiatCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list,\n    is_crypto = client.is_crypto;\n  var has_fiat_currency = account_list.some(function (account) {\n    return account.title !== 'Real' && !is_crypto(account.title);\n  });\n  return has_fiat_currency;\n};\n/* harmony default export */ const src_useHasFiatCurrency = ((/* unused pure expression or super */ null && (useHasFiatCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasSetCurrency.ts\n\n\nvar useHasSetCurrency = function useHasSetCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list;\n  var has_active_real_account = useHasActiveRealAccount();\n  var has_real_account = account_list.filter(function (account) {\n    return !account.is_virtual;\n  }).some(function (account) {\n    return account.title !== 'Real' && account.title !== 'Investment';\n  });\n  var has_set_currency = has_real_account || !has_active_real_account;\n  return has_set_currency;\n};\n/* harmony default export */ const src_useHasSetCurrency = ((/* unused pure expression or super */ null && (useHasSetCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasSvgAccount.ts\n\nvar useHasSvgAccount_useHasSvgAccount = function useHasSvgAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var active_accounts = client.active_accounts;\n  var has_svg_account = active_accounts.some(function (account) {\n    return account.landing_company_shortcode === 'svg';\n  });\n  return has_svg_account;\n};\n/* harmony default export */ const src_useHasSvgAccount = ((/* unused pure expression or super */ null && (useHasSvgAccount_useHasSvgAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasSwapFreeAccount.ts\n\n\n/**\n * This hook is used to check if the client has a Swap-Free account.\n * It checks for availability of market_type 'all' in trading_platform_available_accounts API response\n */\nvar useHasSwapFreeAccount = function useHasSwapFreeAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var trading_platform_available_accounts = client.trading_platform_available_accounts;\n  var has_swap_free_account = trading_platform_available_accounts.some(function (available_account) {\n    return available_account.market_type === 'all';\n  });\n  return has_swap_free_account;\n};\n/* harmony default export */ const src_useHasSwapFreeAccount = ((/* unused pure expression or super */ null && (useHasSwapFreeAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasUSDCurrency.ts\n\nvar useHasUSDCurrency = function useHasUSDCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list;\n  var has_usd_currency = account_list.some(function (account) {\n    return account.title === 'USD';\n  });\n  return has_usd_currency;\n};\n/* harmony default export */ const src_useHasUSDCurrency = ((/* unused pure expression or super */ null && (useHasUSDCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useInputDecimalFormatter.ts\nfunction useInputDecimalFormatter_slicedToArray(arr, i) { return useInputDecimalFormatter_arrayWithHoles(arr) || useInputDecimalFormatter_iterableToArrayLimit(arr, i) || useInputDecimalFormatter_unsupportedIterableToArray(arr, i) || useInputDecimalFormatter_nonIterableRest(); }\nfunction useInputDecimalFormatter_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useInputDecimalFormatter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useInputDecimalFormatter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useInputDecimalFormatter_arrayLikeToArray(o, minLen); }\nfunction useInputDecimalFormatter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useInputDecimalFormatter_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useInputDecimalFormatter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar useInputDecimalFormatter_useInputDecimalFormatter = function useInputDecimalFormatter(initial, options) {\n  var _useState = useState(''),\n    _useState2 = useInputDecimalFormatter_slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _ref = options || {},\n    _ref$fraction_digits = _ref.fraction_digits,\n    fraction_digits = _ref$fraction_digits === void 0 ? 2 : _ref$fraction_digits,\n    _ref$with_sign = _ref.with_sign,\n    with_sign = _ref$with_sign === void 0 ? false : _ref$with_sign;\n  var onChange = useCallback(function (e) {\n    setValue(function (old_value) {\n      var _e$target;\n      var new_value = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '';\n      var isEmpty = new_value === '';\n\n      // The field has been cleared, So we return the new value.\n      if (isEmpty) return new_value;\n      var text = with_sign ? new_value : new_value.replaceAll(/[+-]/g, '');\n      var inputs = text.split('.');\n\n      // The field contains more than one dot, So we return the old value as only one dot\n      // is allowed.\n      if (inputs.length > 2) return old_value;\n      var left = inputs[0];\n      var right = inputs.length > 1 ? inputs[1] : null;\n      var has_right = right !== null && right !== '';\n\n      // The field value is positive or negative sign, So we return the new value without\n      // any calculations.\n      if ((left === '-' || left === '+') && !has_right) return new_value;\n\n      // The field value is 0, So we return the new value without any calculations.\n      if (left === '0' && !has_right) return new_value;\n      var is_number = !isNaN(Number(new_value));\n\n      // The input value is not a valid number, So we return the old value.\n      if (!is_number) return old_value;\n      var new_left = left.replaceAll(/[+-]/g, '');\n      var has_decimal = new_value.includes('.');\n\n      // The field starts with 0 but doesn't have decimal point, So we return the old value\n      // as the only valid input at this step is decimal point.\n      if (new_left.startsWith('0') && new_left.length !== 1 && !has_decimal) return old_value;\n\n      // The field have a decimal point and decimal places are already as allowed fraction\n      // digits, So we remove the extra decimal digits from the right and return the new value.\n      if (has_right && right.length > fraction_digits) {\n        var new_right = right.substring(0, fraction_digits);\n        return \"\".concat(left, \".\").concat(new_right);\n      }\n      return new_value;\n    });\n  }, [fraction_digits, with_sign]);\n  useEffect(function () {\n    if (initial) onChange({\n      target: {\n        value: \"\".concat(initial)\n      }\n    });\n  }, [initial, onChange]);\n  return {\n    value: value,\n    onChange: onChange\n  };\n};\n/* harmony default export */ const src_useInputDecimalFormatter = ((/* unused pure expression or super */ null && (useInputDecimalFormatter_useInputDecimalFormatter)));\n;// CONCATENATED MODULE: ../../hooks/src/useInputATMFormatter.ts\n\n\n\nvar useInputATMFormatter = function useInputATMFormatter(initial, options) {\n  var is_pasting = useRef(false);\n  var _useInputDecimalForma = useInputDecimalFormatter(undefined, options),\n    value = _useInputDecimalForma.value,\n    onChangeDecimal = _useInputDecimalForma.onChange;\n  var _ref = options || {},\n    locale = _ref.locale,\n    _ref$fraction_digits = _ref.fraction_digits,\n    fraction_digits = _ref$fraction_digits === void 0 ? 2 : _ref$fraction_digits;\n  var formatted_value = useMemo(function () {\n    return \"\".concat(Number(value).toLocaleString(locale, {\n      minimumFractionDigits: fraction_digits\n    }));\n  }, [fraction_digits, locale, value]);\n  var onChange = useCallback(function (e) {\n    var _e$target, _unformatted$split, _unformatted$split$;\n    var new_value = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '';\n    var unformatted = unFormatLocaleString(new_value, locale);\n    // @ts-expect-error shouldn't cast to number because we will lose the trailing zeros.\n    var shifted = Math.fround(unformatted * 10).toFixed(fraction_digits);\n    // @ts-expect-error shouldn't cast to number because we will lose the trailing zeros.\n    var un_shifted = Math.fround(unformatted / 10).toFixed(fraction_digits);\n    var unformatted_fraction = ((_unformatted$split = unformatted.split('.')) === null || _unformatted$split === void 0 ? void 0 : (_unformatted$split$ = _unformatted$split[1]) === null || _unformatted$split$ === void 0 ? void 0 : _unformatted$split$.length) || fraction_digits;\n\n    // If the user is pasting, we don't need to shift the decimal point,\n    // We just need to format the value.\n    if (is_pasting.current) {\n      is_pasting.current = false;\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n\n    // The new value has one more decimal places than the fraction_digits,\n    // so we need to shift the decimal point to the left.\n    if (unformatted_fraction - 1 === fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: shifted\n        }\n      });\n    }\n\n    // The new value has one less decimal places than the fraction_digits,\n    // so we need to shift the decimal point to the right.\n    if (unformatted_fraction + 1 === fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: un_shifted\n        }\n      });\n    }\n\n    // The new value has the same number of decimal places as the fraction_digits,\n    // so we don't need to shift the decimal point.\n    if (unformatted_fraction === fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n\n    // The new value has more decimal places than the fraction_digits,\n    // so we chop the extra decimal points.\n    if (unformatted_fraction - 1 > fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n\n    // The new value has less decimal places than the fraction_digits,\n    // so we add the missing extra decimal point.\n    if (unformatted_fraction + 1 < fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n    return onChangeDecimal({\n      target: {\n        value: unformatted\n      }\n    });\n  }, [locale, fraction_digits, onChangeDecimal]);\n  var onPaste = useCallback(function (e) {\n    return is_pasting.current = e.type === 'paste';\n  }, []);\n  useEffect(function () {\n    if (initial) {\n      is_pasting.current = true;\n      onChange({\n        target: {\n          value: \"\".concat(Number(initial).toLocaleString(locale, {\n            minimumFractionDigits: fraction_digits\n          }))\n        }\n      });\n    }\n  }, [fraction_digits, initial, locale, onChange]);\n  return {\n    value: formatted_value,\n    onChange: onChange,\n    onPaste: onPaste\n  };\n};\n/* harmony default export */ const src_useInputATMFormatter = ((/* unused pure expression or super */ null && (useInputATMFormatter)));\n;// CONCATENATED MODULE: ../../hooks/src/useIsP2PEnabled.ts\nfunction useIsP2PEnabled_typeof(obj) { \"@babel/helpers - typeof\"; return useIsP2PEnabled_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useIsP2PEnabled_typeof(obj); }\nvar useIsP2PEnabled_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useIsP2PEnabled_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useIsP2PEnabled_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useIsP2PEnabled_ownKeys(Object(source), !0).forEach(function (key) { useIsP2PEnabled_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useIsP2PEnabled_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useIsP2PEnabled_defineProperty(obj, key, value) { key = useIsP2PEnabled_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useIsP2PEnabled_toPropertyKey(arg) { var key = useIsP2PEnabled_toPrimitive(arg, \"string\"); return useIsP2PEnabled_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useIsP2PEnabled_toPrimitive(input, hint) { if (useIsP2PEnabled_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useIsP2PEnabled_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useIsP2PEnabled_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useIsP2PEnabled_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useIsP2PEnabled_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar useIsP2PEnabled = function useIsP2PEnabled() {\n  var _data$website_status, _data$website_status$;\n  var _useStore = useStore(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  var is_authorize = client.is_authorize,\n    loginid = client.loginid,\n    currency = client.currency,\n    is_virtual = client.is_virtual;\n  var is_low_risk_cr_eu_real = traders_hub.is_low_risk_cr_eu_real;\n  var invalidate = useInvalidateQuery();\n  var _useFetch = useFetch('website_status', {\n      options: {\n        enabled: is_authorize\n      }\n    }),\n    data = _useFetch.data,\n    rest = useIsP2PEnabled_objectWithoutProperties(_useFetch, useIsP2PEnabled_excluded);\n  var is_p2p_supported_currency = Boolean(data === null || data === void 0 ? void 0 : (_data$website_status = data.website_status) === null || _data$website_status === void 0 ? void 0 : (_data$website_status$ = _data$website_status.p2p_config) === null || _data$website_status$ === void 0 ? void 0 : _data$website_status$.supported_currencies.includes(currency.toLocaleLowerCase()));\n  var is_p2p_enabled = is_p2p_supported_currency && !is_virtual && !is_low_risk_cr_eu_real;\n\n  // Todo: should replace with the next line instead once BE is fixed.\n  // const is_p2p_enabled = data?.p2p_config?.disabled === 0;\n\n  useEffect(function () {\n    invalidate('website_status');\n  }, [invalidate, loginid]);\n  return useIsP2PEnabled_objectSpread(useIsP2PEnabled_objectSpread({}, rest), {}, {\n    data: is_p2p_enabled\n  });\n};\n/* harmony default export */ const src_useIsP2PEnabled = ((/* unused pure expression or super */ null && (useIsP2PEnabled)));\n;// CONCATENATED MODULE: ../../hooks/src/useIsRealAccountNeededForCashier.ts\n\n\n\nvar useIsRealAccountNeededForCashier = function useIsRealAccountNeededForCashier() {\n  var _useStore = useStore(),\n    traders_hub = _useStore.traders_hub;\n  var is_eu_user = traders_hub.is_eu_user,\n    is_real = traders_hub.is_real;\n  var has_svg_account = useHasSvgAccount();\n  var has_maltainvest_account = useHasMaltaInvestAccount();\n  var no_real_mf_account = has_svg_account && !has_maltainvest_account && is_eu_user;\n  var no_real_cr_account = !has_svg_account && has_maltainvest_account && !is_eu_user;\n  var is_real_account_needed = no_real_mf_account || no_real_cr_account;\n  var is_real_account_needed_for_cashier = is_real_account_needed && is_real;\n  return is_real_account_needed_for_cashier;\n};\n/* harmony default export */ const src_useIsRealAccountNeededForCashier = ((/* unused pure expression or super */ null && (useIsRealAccountNeededForCashier)));\n;// CONCATENATED MODULE: ../../hooks/src/useIsSystemMaintenance.ts\n\nvar useIsSystemMaintenance = function useIsSystemMaintenance() {\n  var _account_status$cashi;\n  var _useStore = (0,src.useStore)(),\n    client = _useStore.client;\n  var account_status = client.account_status;\n  var is_system_maintenance = ((_account_status$cashi = account_status.cashier_validation) === null || _account_status$cashi === void 0 ? void 0 : _account_status$cashi.some(function (validation) {\n    return validation === 'system_maintenance';\n  })) || false;\n  return is_system_maintenance;\n};\n/* harmony default export */ const src_useIsSystemMaintenance = (useIsSystemMaintenance);\n;// CONCATENATED MODULE: ../../hooks/src/useOnrampVisible.ts\n\nvar useOnrampVisible = function useOnrampVisible() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_virtual = client.is_virtual,\n    is_crypto = client.is_crypto;\n  var is_onramp_visible = !is_virtual && is_crypto();\n  return is_onramp_visible;\n};\n/* harmony default export */ const src_useOnrampVisible = ((/* unused pure expression or super */ null && (useOnrampVisible)));\n;// CONCATENATED MODULE: ../../hooks/src/useP2PNotificationCount.ts\nfunction useP2PNotificationCount_slicedToArray(arr, i) { return useP2PNotificationCount_arrayWithHoles(arr) || useP2PNotificationCount_iterableToArrayLimit(arr, i) || useP2PNotificationCount_unsupportedIterableToArray(arr, i) || useP2PNotificationCount_nonIterableRest(); }\nfunction useP2PNotificationCount_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useP2PNotificationCount_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useP2PNotificationCount_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useP2PNotificationCount_arrayLikeToArray(o, minLen); }\nfunction useP2PNotificationCount_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useP2PNotificationCount_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useP2PNotificationCount_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar useP2PNotificationCount = function useP2PNotificationCount() {\n  var _p2p_settings$loginid;\n  var _useState = useState(JSON.parse(localStorage.getItem('p2p_settings') || '{}')),\n    _useState2 = useP2PNotificationCount_slicedToArray(_useState, 2),\n    p2p_settings = _useState2[0],\n    setP2PSettings = _useState2[1];\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var loginid = client.loginid;\n  var notifications = loginid ? (_p2p_settings$loginid = p2p_settings[loginid]) === null || _p2p_settings$loginid === void 0 ? void 0 : _p2p_settings$loginid.notifications : null;\n  useEffect(function () {\n    var onStorageChanged = function onStorageChanged() {\n      var data = localStorage.getItem('p2p_settings');\n      if (data) {\n        setP2PSettings(JSON.parse(data));\n      }\n    };\n    window.addEventListener('storage', onStorageChanged);\n    return function () {\n      window.removeEventListener('storage', onStorageChanged);\n    };\n  }, []);\n  var p2p_notification_count = (notifications === null || notifications === void 0 ? void 0 : notifications.filter(function (notification) {\n    return !notification.is_seen;\n  }).length) || 0;\n  return p2p_notification_count;\n};\n/* harmony default export */ const src_useP2PNotificationCount = ((/* unused pure expression or super */ null && (useP2PNotificationCount)));\n;// CONCATENATED MODULE: ../../hooks/src/usePaymentAgentList.ts\nfunction usePaymentAgentList_typeof(obj) { \"@babel/helpers - typeof\"; return usePaymentAgentList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePaymentAgentList_typeof(obj); }\nvar usePaymentAgentList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction usePaymentAgentList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePaymentAgentList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePaymentAgentList_ownKeys(Object(source), !0).forEach(function (key) { usePaymentAgentList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePaymentAgentList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePaymentAgentList_defineProperty(obj, key, value) { key = usePaymentAgentList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePaymentAgentList_toPropertyKey(arg) { var key = usePaymentAgentList_toPrimitive(arg, \"string\"); return usePaymentAgentList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePaymentAgentList_toPrimitive(input, hint) { if (usePaymentAgentList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePaymentAgentList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePaymentAgentList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePaymentAgentList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePaymentAgentList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar usePaymentAgentList = function usePaymentAgentList(currency) {\n  var _data$paymentagent_li;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var residence = client.residence;\n  var _useFetch = useFetch('paymentagent_list', {\n      payload: {\n        paymentagent_list: residence,\n        currency: currency\n      },\n      options: {\n        enabled: Boolean(residence)\n      }\n    }),\n    data = _useFetch.data,\n    rest = usePaymentAgentList_objectWithoutProperties(_useFetch, usePaymentAgentList_excluded);\n  return usePaymentAgentList_objectSpread({\n    data: data === null || data === void 0 ? void 0 : (_data$paymentagent_li = data.paymentagent_list) === null || _data$paymentagent_li === void 0 ? void 0 : _data$paymentagent_li.list\n  }, rest);\n};\n/* harmony default export */ const src_usePaymentAgentList = ((/* unused pure expression or super */ null && (usePaymentAgentList)));\n;// CONCATENATED MODULE: ../../hooks/src/usePaymentAgentTransferVisible.ts\nfunction usePaymentAgentTransferVisible_typeof(obj) { \"@babel/helpers - typeof\"; return usePaymentAgentTransferVisible_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePaymentAgentTransferVisible_typeof(obj); }\nvar usePaymentAgentTransferVisible_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction usePaymentAgentTransferVisible_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePaymentAgentTransferVisible_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePaymentAgentTransferVisible_ownKeys(Object(source), !0).forEach(function (key) { usePaymentAgentTransferVisible_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePaymentAgentTransferVisible_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePaymentAgentTransferVisible_defineProperty(obj, key, value) { key = usePaymentAgentTransferVisible_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePaymentAgentTransferVisible_toPropertyKey(arg) { var key = usePaymentAgentTransferVisible_toPrimitive(arg, \"string\"); return usePaymentAgentTransferVisible_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePaymentAgentTransferVisible_toPrimitive(input, hint) { if (usePaymentAgentTransferVisible_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePaymentAgentTransferVisible_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePaymentAgentTransferVisible_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePaymentAgentTransferVisible_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePaymentAgentTransferVisible_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar usePaymentAgentTransferVisible = function usePaymentAgentTransferVisible() {\n  var _data$get_settings;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_authorize = client.is_authorize;\n  var _useFetch = useFetch('get_settings', {\n      options: {\n        enabled: is_authorize\n      }\n    }),\n    data = _useFetch.data,\n    rest = usePaymentAgentTransferVisible_objectWithoutProperties(_useFetch, usePaymentAgentTransferVisible_excluded);\n  var is_payment_agent_transfer_visible = Boolean(data === null || data === void 0 ? void 0 : (_data$get_settings = data.get_settings) === null || _data$get_settings === void 0 ? void 0 : _data$get_settings.is_authenticated_payment_agent);\n  return usePaymentAgentTransferVisible_objectSpread({\n    data: is_payment_agent_transfer_visible\n  }, rest);\n};\n/* harmony default export */ const src_usePaymentAgentTransferVisible = ((/* unused pure expression or super */ null && (usePaymentAgentTransferVisible)));\n;// CONCATENATED MODULE: ../../hooks/src/usePlatformDemoAccount.ts\n\n\n/**\n * we can use this hook to get the platform demo account.\n * it loops through the all of user's accounts, finds and returns demo account\n */\n\nvar usePlatformDemoAccount_usePlatformDemoAccount = function usePlatformDemoAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var accounts = client.accounts;\n  var account_list = Object.keys(accounts).map(function (loginid) {\n    return accounts[loginid];\n  });\n  var platform_demo_account = account_list.find(function (account) {\n    return account.is_virtual;\n  });\n  return platform_demo_account;\n};\n/* harmony default export */ const src_usePlatformDemoAccount = ((/* unused pure expression or super */ null && (usePlatformDemoAccount_usePlatformDemoAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/usePlatformRealAccounts.ts\n\n\n/**\n * we can use this hook to get all real accounts for both Eu and Non-Eu regions.\n * it loops through the accounts list and returns all real accounts\n */\n\nvar usePlatformRealAccounts_usePlatformRealAccounts = function usePlatformRealAccounts() {\n  var _useStore = useStore(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  var accounts = client.accounts;\n  var is_eu_user = traders_hub.is_eu_user;\n  var account_list = Object.keys(accounts).map(function (loginid) {\n    return accounts[loginid];\n  });\n  var platform_real_accounts = account_list.filter(function (account) {\n    var is_maltainvest = 'landing_company_shortcode' in account && account.landing_company_shortcode === 'maltainvest';\n    if (account.is_virtual) return false;\n    if (!is_eu_user) return !is_maltainvest;\n    return is_maltainvest;\n  });\n  return platform_real_accounts;\n};\n/* harmony default export */ const src_usePlatformRealAccounts = ((/* unused pure expression or super */ null && (usePlatformRealAccounts_usePlatformRealAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/usePlatformAccounts.ts\n\n\n\n/**\n * this is a wrapper hook for usePlatformDemoAccount and usePlatformRealAccounts\n * and it returns different platform accounts which are demo, and real\n */\nvar usePlatformAccounts_usePlatformAccounts = function usePlatformAccounts() {\n  var platform_demo_account = usePlatformDemoAccount();\n  var platform_real_accounts = usePlatformRealAccounts();\n  return {\n    demo: platform_demo_account,\n    real: platform_real_accounts\n  };\n};\n/* harmony default export */ const src_usePlatformAccounts = ((/* unused pure expression or super */ null && (usePlatformAccounts_usePlatformAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useTotalAssetCurrency.ts\n\n\nvar useTotalAssetCurrency_useRealTotalAssetCurrency = function useRealTotalAssetCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  var current_fiat_currency = client.current_fiat_currency,\n    is_crypto = client.is_crypto,\n    currency = client.currency,\n    default_currency = client.default_currency;\n  var is_eu_user = traders_hub.is_eu_user;\n  var _usePlatformAccounts = usePlatformAccounts(),\n    platform_real_accounts = _usePlatformAccounts.real;\n  if (!platform_real_accounts.length) return default_currency;\n  var non_crypto_accounts = platform_real_accounts.find(function (account) {\n    return !is_crypto(account.currency || 'USD');\n  });\n  if (non_crypto_accounts) return (non_crypto_accounts === null || non_crypto_accounts === void 0 ? void 0 : non_crypto_accounts.currency) || '';\n  var currency_if_is_crypto = is_eu_user ? current_fiat_currency || default_currency : platform_real_accounts[0].currency;\n  return is_crypto() ? currency_if_is_crypto : currency;\n};\n/* harmony default export */ const useTotalAssetCurrency = ((/* unused pure expression or super */ null && (useTotalAssetCurrency_useRealTotalAssetCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useTotalAccountBalance.ts\n\n\n\n/**\n * we can use this hook to get the total balance of the given accounts list.\n * it loops through the accounts list and adds the balance of each account\n * to the total balance, it also converts the balance to the currency of the\n * first account in the list\n */\n\nvar useTotalAccountBalance = function useTotalAccountBalance(accounts) {\n  var total_assets_real_currency = useRealTotalAssetCurrency();\n  var _useExchangeRate = useExchangeRate(),\n    getRate = _useExchangeRate.getRate;\n  if (!accounts.length) return {\n    balance: 0,\n    currency: total_assets_real_currency\n  };\n  var balance = accounts.reduce(function (total, account) {\n    var base_rate = getRate(total_assets_real_currency || '');\n    var rate = getRate(account.currency || total_assets_real_currency || '');\n    var exchange_rate = base_rate / rate;\n    return total + (account.balance || 0) * exchange_rate;\n  }, 0);\n  return {\n    balance: balance,\n    currency: total_assets_real_currency\n  };\n};\n/* harmony default export */ const src_useTotalAccountBalance = ((/* unused pure expression or super */ null && (useTotalAccountBalance)));\n;// CONCATENATED MODULE: ../../hooks/src/useVerifyEmail.ts\nfunction useVerifyEmail_slicedToArray(arr, i) { return useVerifyEmail_arrayWithHoles(arr) || useVerifyEmail_iterableToArrayLimit(arr, i) || useVerifyEmail_unsupportedIterableToArray(arr, i) || useVerifyEmail_nonIterableRest(); }\nfunction useVerifyEmail_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useVerifyEmail_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useVerifyEmail_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useVerifyEmail_arrayLikeToArray(o, minLen); }\nfunction useVerifyEmail_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useVerifyEmail_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useVerifyEmail_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar RESEND_COUNTDOWN = 60;\nvar useVerifyEmail = function useVerifyEmail(type) {\n  var WS = useRequest('verify_email');\n  var counter = useCountdown({\n    from: RESEND_COUNTDOWN\n  });\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var _useState = useState(0),\n    _useState2 = useVerifyEmail_slicedToArray(_useState, 2),\n    sent_count = _useState2[0],\n    setSentCount = _useState2[1];\n  var send = function send() {\n    if (!client.email) return;\n    if (counter.is_running) return;\n    counter.reset();\n    counter.start();\n    setSentCount(function (old) {\n      return old + 1;\n    });\n    WS.mutate({\n      payload: {\n        verify_email: client.email,\n        type: type\n      }\n    });\n  };\n  return {\n    is_loading: WS.isLoading,\n    error: WS.error,\n    data: WS.data,\n    counter: counter.count,\n    is_counter_running: counter.is_running,\n    sent_count: sent_count,\n    has_been_sent: sent_count !== 0,\n    send: send\n  };\n};\n/* harmony default export */ const src_useVerifyEmail = ((/* unused pure expression or super */ null && (useVerifyEmail)));\n;// CONCATENATED MODULE: ../../hooks/src/index.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../hooks/src/index.ts\n");

/***/ }),

/***/ "../../stores/src/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"observer\": () => (/* reexport */ es/* observer */.Pi),\n  \"useStore\": () => (/* reexport */ src_useStore)\n});\n\n// UNUSED EXPORTS: StoreContext, StoreProvider, mockStore\n\n// EXTERNAL MODULE: ../../../node_modules/mobx-react-lite/es/index.js + 13 modules\nvar es = __webpack_require__(\"../../../node_modules/mobx-react-lite/es/index.js\");\n// EXTERNAL MODULE: ../../../node_modules/lodash.merge/index.js\nvar lodash_merge = __webpack_require__(\"../../../node_modules/lodash.merge/index.js\");\n;// CONCATENATED MODULE: ../../stores/src/mockStore.ts\n\nvar mock = function mock() {\n  return {\n    is_mock: true,\n    client: {\n      account_settings: {},\n      accounts: {},\n      active_account_landing_company: '',\n      trading_platform_available_accounts: [],\n      account_limits: {\n        daily_transfers: {\n          dxtrade: {\n            allowed: 0,\n            available: 0\n          },\n          internal: {\n            allowed: 0,\n            available: 0\n          },\n          mt5: {\n            allowed: 0,\n            available: 0\n          }\n        }\n      },\n      account_status: {\n        authentication: {\n          attempts: {\n            count: 1,\n            history: [{\n              country_code: 'id',\n              id: '8919',\n              service: 'manual',\n              status: 'verified',\n              timestamp: 1674633681\n            }],\n            latest: {\n              country_code: 'id',\n              id: '8919',\n              service: 'manual',\n              status: 'verified',\n              timestamp: 1674633681\n            }\n          },\n          document: {\n            status: 'verified'\n          },\n          identity: {\n            services: {\n              idv: {\n                last_rejected: [],\n                reported_properties: {},\n                status: 'none',\n                submissions_left: 3\n              },\n              manual: {\n                status: 'verified'\n              },\n              onfido: {\n                country_code: 'IDN',\n                documents_supported: ['Driving Licence', 'National Identity Card', 'Passport', 'Residence Permit'],\n                is_country_supported: 1,\n                last_rejected: [],\n                reported_properties: {},\n                status: 'none',\n                submissions_left: 3\n              }\n            },\n            status: 'verified'\n          },\n          income: {\n            status: 'none'\n          },\n          needs_verification: [],\n          ownership: {\n            requests: [],\n            status: 'none'\n          }\n        },\n        currency_config: {\n          USD: {\n            is_deposit_suspended: 0,\n            is_withdrawal_suspended: 0\n          }\n        },\n        p2p_status: 'none',\n        prompt_client_to_authenticate: 0,\n        risk_classification: 'low',\n        status: ['age_verification', 'allow_document_upload', 'authenticated', 'dxtrade_password_not_set', 'financial_information_not_complete', 'idv_disallowed', 'mt5_password_not_set', 'trading_experience_not_complete']\n      },\n      balance: '',\n      can_change_fiat_currency: false,\n      currency: '',\n      current_currency_type: '',\n      current_fiat_currency: '',\n      cfd_score: 0,\n      setCFDScore: jest.fn(),\n      getLimits: jest.fn(),\n      has_active_real_account: false,\n      has_logged_out: false,\n      has_maltainvest_account: false,\n      initialized_broadcast: false,\n      is_account_setting_loaded: false,\n      is_authorize: false,\n      is_deposit_lock: false,\n      is_dxtrade_allowed: false,\n      is_eu: false,\n      is_financial_account: false,\n      is_financial_information_incomplete: false,\n      is_low_risk: false,\n      is_identity_verification_needed: false,\n      is_landing_company_loaded: false,\n      is_logged_in: false,\n      is_logging_in: false,\n      is_pending_proof_of_ownership: false,\n      is_switching: false,\n      is_tnc_needed: false,\n      is_trading_experience_incomplete: false,\n      is_virtual: false,\n      is_withdrawal_lock: false,\n      is_populating_account_list: false,\n      landing_company_shortcode: '',\n      local_currency_config: {\n        currency: '',\n        decimal_places: 0\n      },\n      loginid: '',\n      pre_switch_broadcast: false,\n      residence: '',\n      responseMt5LoginList: jest.fn(),\n      responseTradingPlatformAccountsList: jest.fn(),\n      standpoint: {\n        iom: '',\n        malta: ''\n      },\n      switchAccount: jest.fn(),\n      verification_code: {\n        payment_agent_withdraw: '',\n        payment_withdraw: '',\n        request_email: '',\n        reset_password: '',\n        signup: '',\n        system_email_change: '',\n        trading_platform_dxtrade_password_reset: '',\n        trading_platform_mt5_password_reset: ''\n      },\n      email: '',\n      setVerificationCode: jest.fn(),\n      updateAccountStatus: jest.fn(),\n      is_authentication_needed: false,\n      authentication_status: {\n        document_status: '',\n        identity_status: ''\n      },\n      mt5_login_list: [],\n      logout: jest.fn(),\n      should_allow_authentication: false,\n      active_accounts: [],\n      account_list: [],\n      available_crypto_currencies: [],\n      setAccountStatus: jest.fn(),\n      setBalanceOtherAccounts: jest.fn(),\n      setInitialized: jest.fn(),\n      setLogout: jest.fn(),\n      setVisibilityRealityCheck: jest.fn(),\n      setP2pAdvertiserInfo: jest.fn(),\n      setPreSwitchAccount: jest.fn(),\n      switched: false,\n      switch_broadcast: false,\n      switchEndSignal: jest.fn(),\n      is_crypto: jest.fn(),\n      dxtrade_accounts_list: [],\n      default_currency: 'USD',\n      resetVirtualBalance: jest.fn(),\n      has_enabled_two_fa: false,\n      setTwoFAStatus: jest.fn(),\n      has_changed_two_fa: false,\n      setTwoFAChangedStatus: jest.fn(),\n      has_any_real_account: false,\n      real_account_creation_unlock_date: 0,\n      setPrevAccountType: jest.fn()\n    },\n    common: {\n      error: {\n        app_routing_history: [],\n        header: '',\n        message: '',\n        type: '',\n        redirect_label: '',\n        redirect_to: '',\n        should_clear_error_on_click: false,\n        should_show_refresh: false,\n        redirectOnClick: jest.fn(),\n        setError: jest.fn()\n      },\n      is_from_derivgo: false,\n      has_error: false,\n      platform: '',\n      routeBackInApp: jest.fn(),\n      routeTo: jest.fn(),\n      changeCurrentLanguage: jest.fn(),\n      changeSelectedLanguage: jest.fn(),\n      current_language: 'EN',\n      is_network_online: false,\n      server_time: undefined,\n      is_language_changing: false\n    },\n    ui: {\n      app_contents_scroll_ref: {\n        current: null\n      },\n      current_focus: null,\n      is_cashier_visible: false,\n      is_closing_create_real_account_modal: false,\n      is_dark_mode_on: false,\n      is_language_settings_modal_on: false,\n      is_mobile: false,\n      is_reports_visible: false,\n      disableApp: jest.fn(),\n      enableApp: jest.fn(),\n      setCurrentFocus: jest.fn(),\n      toggleAccountsDialog: jest.fn(),\n      toggleCashier: jest.fn(),\n      setDarkMode: jest.fn(),\n      setReportsTabIndex: jest.fn(),\n      has_real_account_signup_ended: false,\n      notification_messages_ui: null,\n      openRealAccountSignup: jest.fn(),\n      setIsClosingCreateRealAccountModal: jest.fn(),\n      setRealAccountSignupEnd: jest.fn(),\n      shouldNavigateAfterChooseCrypto: jest.fn(),\n      toggleLanguageSettingsModal: jest.fn(),\n      toggleSetCurrencyModal: jest.fn(),\n      addToast: jest.fn(),\n      removeToast: jest.fn(),\n      reports_route_tab_index: 1,\n      should_show_cancellation_warning: false,\n      toggleCancellationWarning: jest.fn(),\n      toggleUnsupportedContractModal: jest.fn(),\n      toggleReports: jest.fn(),\n      setSubSectionIndex: jest.fn(),\n      sub_section_index: 0,\n      toggleReadyToDepositModal: jest.fn(),\n      is_ready_to_deposit_modal_visible: false,\n      is_real_acc_signup_on: false,\n      is_need_real_account_for_cashier_modal_visible: false,\n      toggleNeedRealAccountForCashierModal: jest.fn(),\n      populateHeaderExtensions: jest.fn(),\n      populateSettingsExtensions: jest.fn(),\n      setShouldShowCooldownModal: jest.fn()\n    },\n    traders_hub: {\n      closeModal: jest.fn(),\n      combined_cfd_mt5_accounts: [],\n      content_flag: '',\n      openModal: jest.fn(),\n      selected_account: {\n        login: '',\n        account_id: ''\n      },\n      is_eu_user: false,\n      is_real: false,\n      selectRegion: jest.fn(),\n      is_low_risk_cr_eu_real: false,\n      toggleRegulatorsCompareModal: jest.fn(),\n      selected_region: '',\n      is_demo: false,\n      financial_restricted_countries: false,\n      selected_account_type: 'real',\n      no_CR_account: false,\n      no_MF_account: false,\n      multipliers_account_status: '',\n      openFailedVerificationModal: jest.fn(),\n      setTogglePlatformType: jest.fn(),\n      setSelectedAccount: jest.fn(),\n      toggleAccountTransferModal: jest.fn(),\n      selectAccountType: jest.fn()\n    },\n    menu: {\n      attach: jest.fn(),\n      update: jest.fn()\n    },\n    notifications: {\n      addNotificationMessage: jest.fn(),\n      client_notifications: {},\n      filterNotificationMessages: jest.fn(),\n      refreshNotifications: jest.fn(),\n      removeNotificationByKey: jest.fn(),\n      removeNotificationMessage: jest.fn(),\n      setP2POrderProps: jest.fn(),\n      showAccountSwitchToRealNotification: jest.fn(),\n      setP2PRedirectTo: jest.fn()\n    },\n    portfolio: {\n      active_positions: [],\n      error: {\n        header: '',\n        message: '',\n        type: '',\n        redirect_label: '',\n        redirect_to: '',\n        should_clear_error_on_click: false,\n        should_show_refresh: false,\n        redirectOnClick: jest.fn(),\n        setError: jest.fn(),\n        app_routing_history: []\n      },\n      getPositionById: jest.fn(),\n      is_loading: false,\n      is_accumulator: false,\n      is_multiplier: false,\n      onClickCancel: jest.fn(),\n      onClickSell: jest.fn(),\n      onMount: jest.fn(),\n      removePositionById: jest.fn()\n    },\n    contract_trade: {\n      getContractById: jest.fn()\n    },\n    modules: {},\n    exchange_rates: {\n      data: undefined,\n      update: jest.fn(),\n      unmount: jest.fn()\n    },\n    feature_flags: {\n      data: undefined,\n      update: jest.fn(),\n      unmount: jest.fn()\n    }\n  };\n};\nvar mockStore = function mockStore(override) {\n  return merge(mock(), override);\n};\n/* harmony default export */ const src_mockStore = ((/* unused pure expression or super */ null && (mockStore)));\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\n;// CONCATENATED MODULE: ../../stores/src/storeContext.ts\n\nvar storeContext_StoreContext = /*#__PURE__*/(0,external_react_.createContext)(null);\n/* harmony default export */ const storeContext = (storeContext_StoreContext);\n// EXTERNAL MODULE: ../../api/src/index.ts + 6 modules\nvar src = __webpack_require__(\"../../api/src/index.ts\");\n;// CONCATENATED MODULE: ../../stores/src/useStore.ts\n\n\nvar useStore_useStore = function useStore() {\n  var store = (0,external_react_.useContext)(storeContext);\n  if (!store) {\n    throw new Error('useStore must be used within StoreProvider');\n  }\n  return store;\n};\n/* harmony default export */ const src_useStore = (useStore_useStore);\n;// CONCATENATED MODULE: ../../stores/src/providers/ExchangeRatesProvider.tsx\n\n\n\n\nvar ExchangeRatesProvider_ExchangeRatesProvider = function ExchangeRatesProvider(_ref) {\n  var children = _ref.children;\n  var _useSubscription = useSubscription('exchange_rates'),\n    data = _useSubscription.data,\n    subscribe = _useSubscription.subscribe;\n  var _useStore = useStore(),\n    update = _useStore.exchange_rates.update;\n  useEffect(function () {\n    subscribe({\n      payload: {\n        base_currency: 'USD'\n      }\n    });\n  }, [subscribe]);\n  useEffect(function () {\n    if (data) {\n      var exchange_rates = data.exchange_rates;\n      if (exchange_rates) update(function (prev) {\n        return merge(prev, exchange_rates);\n      });\n    }\n  }, [update, data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\n/* harmony default export */ const providers_ExchangeRatesProvider = ((/* unused pure expression or super */ null && (ExchangeRatesProvider_ExchangeRatesProvider)));\n;// CONCATENATED MODULE: ../../stores/src/providers/index.ts\n\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n// EXTERNAL MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/index.js + 15 modules\nvar esm5 = __webpack_require__(\"../../../node_modules/mobx-persist-store/lib/esm5/index.js\");\n;// CONCATENATED MODULE: ../../stores/src/stores/BaseStore.ts\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nvar BaseStore = /*#__PURE__*/function () {\n  function BaseStore(name, onHydrationDone) {\n    _classCallCheck(this, BaseStore);\n    this.data = undefined;\n    (0,external_mobx_.makeObservable)(this, {\n      data: external_mobx_.observable,\n      update: external_mobx_.action.bound,\n      unmount: external_mobx_.action.bound\n    });\n    (0,esm5/* makePersistable */.Ko)(this, {\n      name: name,\n      properties: ['data'],\n      storage: window.localStorage\n    }).then(function () {\n      return onHydrationDone === null || onHydrationDone === void 0 ? void 0 : onHydrationDone();\n    });\n  }\n  _createClass(BaseStore, [{\n    key: \"update\",\n    value: function update(data) {\n      this.data = data instanceof Function ? data(this.data) : data;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      (0,esm5/* stopPersisting */.Rf)(this);\n    }\n  }]);\n  return BaseStore;\n}();\n\n;// CONCATENATED MODULE: ../../stores/src/stores/ExchangeRatesStore.ts\nfunction ExchangeRatesStore_typeof(obj) { \"@babel/helpers - typeof\"; return ExchangeRatesStore_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, ExchangeRatesStore_typeof(obj); }\nfunction ExchangeRatesStore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, ExchangeRatesStore_toPropertyKey(descriptor.key), descriptor); } }\nfunction ExchangeRatesStore_createClass(Constructor, protoProps, staticProps) { if (protoProps) ExchangeRatesStore_defineProperties(Constructor.prototype, protoProps); if (staticProps) ExchangeRatesStore_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction ExchangeRatesStore_toPropertyKey(arg) { var key = ExchangeRatesStore_toPrimitive(arg, \"string\"); return ExchangeRatesStore_typeof(key) === \"symbol\" ? key : String(key); }\nfunction ExchangeRatesStore_toPrimitive(input, hint) { if (ExchangeRatesStore_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (ExchangeRatesStore_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction ExchangeRatesStore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (ExchangeRatesStore_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar ExchangeRatesStore_ExchangeRatesStore = /*#__PURE__*/function (_BaseStore) {\n  _inherits(ExchangeRatesStore, _BaseStore);\n  var _super = _createSuper(ExchangeRatesStore);\n  function ExchangeRatesStore() {\n    ExchangeRatesStore_classCallCheck(this, ExchangeRatesStore);\n    return _super.call(this, 'ExchangeRatesStore');\n  }\n  return ExchangeRatesStore_createClass(ExchangeRatesStore);\n}(BaseStore);\n\n;// CONCATENATED MODULE: ../../stores/src/stores/FeatureFlagsStore.ts\nfunction FeatureFlagsStore_typeof(obj) { \"@babel/helpers - typeof\"; return FeatureFlagsStore_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, FeatureFlagsStore_typeof(obj); }\nfunction FeatureFlagsStore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, FeatureFlagsStore_toPropertyKey(descriptor.key), descriptor); } }\nfunction FeatureFlagsStore_createClass(Constructor, protoProps, staticProps) { if (protoProps) FeatureFlagsStore_defineProperties(Constructor.prototype, protoProps); if (staticProps) FeatureFlagsStore_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction FeatureFlagsStore_toPropertyKey(arg) { var key = FeatureFlagsStore_toPrimitive(arg, \"string\"); return FeatureFlagsStore_typeof(key) === \"symbol\" ? key : String(key); }\nfunction FeatureFlagsStore_toPrimitive(input, hint) { if (FeatureFlagsStore_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (FeatureFlagsStore_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction FeatureFlagsStore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction FeatureFlagsStore_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) FeatureFlagsStore_setPrototypeOf(subClass, superClass); }\nfunction FeatureFlagsStore_setPrototypeOf(o, p) { FeatureFlagsStore_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return FeatureFlagsStore_setPrototypeOf(o, p); }\nfunction FeatureFlagsStore_createSuper(Derived) { var hasNativeReflectConstruct = FeatureFlagsStore_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = FeatureFlagsStore_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = FeatureFlagsStore_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return FeatureFlagsStore_possibleConstructorReturn(this, result); }; }\nfunction FeatureFlagsStore_possibleConstructorReturn(self, call) { if (call && (FeatureFlagsStore_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return FeatureFlagsStore_assertThisInitialized(self); }\nfunction FeatureFlagsStore_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction FeatureFlagsStore_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction FeatureFlagsStore_getPrototypeOf(o) { FeatureFlagsStore_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return FeatureFlagsStore_getPrototypeOf(o); }\n\nvar FLAGS = {\n  foo: false,\n  bar: false,\n  baz: false\n  // Add your flag here 🚀\n};\nvar FeatureFlagsStore_FeatureFlagsStore = /*#__PURE__*/function (_BaseStore) {\n  FeatureFlagsStore_inherits(FeatureFlagsStore, _BaseStore);\n  var _super = FeatureFlagsStore_createSuper(FeatureFlagsStore);\n  function FeatureFlagsStore() {\n    var _this;\n    FeatureFlagsStore_classCallCheck(this, FeatureFlagsStore);\n    return _this = _super.call(this, 'FeatureFlagsStore', function () {\n      // Set the default values for the first time.\n      if (!_this.data) _this.update(FLAGS);\n\n      // Update the store data if a new flag was added or removed.\n      if (_this.data && Object.keys(_this.data).length !== Object.keys(FLAGS).length) {\n        _this.update(function (old) {\n          var data = FLAGS;\n          Object.keys(FLAGS).forEach(function (flag) {\n            // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n            if (old[flag] !== undefined) data[flag] = old[flag];\n          });\n          return data;\n        });\n      }\n    });\n  }\n  return FeatureFlagsStore_createClass(FeatureFlagsStore);\n}(BaseStore);\n\n;// CONCATENATED MODULE: ../../stores/src/stores/index.ts\n\n\n;// CONCATENATED MODULE: ../../stores/src/storeProvider.tsx\nfunction storeProvider_typeof(obj) { \"@babel/helpers - typeof\"; return storeProvider_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, storeProvider_typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = storeProvider_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction storeProvider_toPropertyKey(arg) { var key = storeProvider_toPrimitive(arg, \"string\"); return storeProvider_typeof(key) === \"symbol\" ? key : String(key); }\nfunction storeProvider_toPrimitive(input, hint) { if (storeProvider_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (storeProvider_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var children = _ref.children,\n    store = _ref.store;\n  var memoizedValue = useMemo(function () {\n    // If the store is mocked for testing purposes, then return the mocked value.\n    if ('is_mock' in store && store.is_mock) return store;\n\n    // Otherwise, instantiate store and return it.\n    return _objectSpread(_objectSpread({}, store), {}, {\n      exchange_rates: new ExchangeRatesStore(),\n      feature_flags: new FeatureFlagsStore()\n    });\n  }, [store]);\n  useEffect(function () {\n    return function () {\n      Object.values(memoizedValue).forEach(function (value) {\n        if (storeProvider_typeof(value) === 'object' && 'unmount' in value) value.unmount();\n      });\n    };\n  }, [memoizedValue]);\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: memoizedValue\n  }, /*#__PURE__*/React.createElement(ExchangeRatesProvider, null, children));\n};\n/* harmony default export */ const storeProvider = ((/* unused pure expression or super */ null && (StoreProvider)));\n;// CONCATENATED MODULE: ../../stores/src/index.ts\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../stores/src/index.ts\n");

/***/ }),

/***/ "../../../node_modules/classnames/index.js":
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzPzNkY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXHR2YXIgbmF0aXZlQ29kZVN0cmluZyA9ICdbbmF0aXZlIGNvZGVdJztcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgJiYgIWFyZy50b1N0cmluZy50b1N0cmluZygpLmluY2x1ZGVzKCdbbmF0aXZlIGNvZGVdJykpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/classnames/index.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.merge/index.js":
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.merge/index.js\n");

/***/ }),

/***/ "../../../node_modules/mobx-persist-store/lib/esm5/index.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Ko\": () => (/* reexport */ makePersistable),\n  \"Rf\": () => (/* reexport */ stopPersisting)\n});\n\n// UNUSED EXPORTS: PersistStore, PersistStoreMap, StorageAdapter, clearPersistedStore, configurePersistable, getPersistedStore, hydrateStore, isHydrated, isPersisting, mpsConfig, mpsReactionOptions, pausePersisting, startPersisting\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStoreMap.js\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar PersistStoreMap_PersistStoreMap = new Map();\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/clearPersistedStore.js\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar clearPersistedStore = function (target) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.clearPersistedStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/configurePersistable.js\nvar mpsConfig = {};\nvar mpsReactionOptions = {};\nvar configurePersistable = function (config, reactionOptions) {\n    if (reactionOptions === void 0) { reactionOptions = {}; }\n    mpsConfig = config;\n    mpsReactionOptions = reactionOptions;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/getPersistedStore.js\nvar getPersistedStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar getPersistedStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar getPersistedStore = function (target) { return getPersistedStore_awaiter(void 0, void 0, void 0, function () {\n    var _a, _b;\n    return getPersistedStore_generator(this, function (_c) {\n        return [2 /*return*/, (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.getPersistedStore()) !== null && _b !== void 0 ? _b : null];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/hydrateStore.js\nvar hydrateStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar hydrateStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar hydrateStore = function (target) { return hydrateStore_awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return hydrateStore_generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.hydrateStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isHydrated.js\n\nvar isHydrated = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isHydrated) !== null && _b !== void 0 ? _b : false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isPersisting.js\n\nvar isPersisting = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isPersisting) !== null && _b !== void 0 ? _b : false;\n};\n\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/utils.js\nvar buildExpireTimestamp = function (milliseconds) {\n    return new Date().getTime() + milliseconds;\n};\nvar hasTimestampExpired = function (milliseconds) {\n    var dateTimeNow = new Date().getTime();\n    var dateTimeExpiration = new Date(milliseconds).getTime();\n    return dateTimeExpiration <= dateTimeNow;\n};\nvar isDefined = function (t) { return t != null; };\n/**\n * Check if the data is an object.\n */\nvar isObject = function (data) {\n    return Boolean(data) && Array.isArray(data) === false && typeof data === 'object';\n};\n/**\n * Check the data is an object with properties.\n */\nvar isObjectWithProperties = function (data) {\n    return isObject(data) && Object.keys(data).length > 0;\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nvar isFunction = function (functionToCheck) {\n    return functionToCheck && functionToCheck instanceof Function;\n};\nvar isStorageControllerLike = function (value) {\n    // \"typeof Storage\" fixes issue with React Native\n    if (typeof Storage !== 'undefined' && value instanceof Storage) {\n        return true;\n    }\n    return [\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('getItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('removeItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('setItem'),\n        isFunction(value === null || value === void 0 ? void 0 : value.getItem),\n        isFunction(value === null || value === void 0 ? void 0 : value.removeItem),\n        isFunction(value === null || value === void 0 ? void 0 : value.setItem),\n    ].every(Boolean);\n};\nvar isBrowser = typeof window !== 'undefined';\nvar isNotProductionBuild = \"production\" !== 'production';\nvar invalidStorageAdaptorWarningIf = function (storageAdaptor, storageName) {\n    if (isBrowser && isNotProductionBuild && !isStorageControllerLike(storageAdaptor)) {\n        console.warn(\"mobx-persist-store: \".concat(storageName, \" does not have a valid storage adaptor.\\n\\n* Make sure the storage controller has 'getItem', 'setItem' and 'removeItem' methods.\\\"\"));\n    }\n};\nvar duplicatedStoreWarningIf = function (hasPersistedStoreAlready, storageName) {\n    if (isBrowser && isNotProductionBuild && hasPersistedStoreAlready) {\n        console.warn(\"mobx-persist-store: 'makePersistable' was called was called with the same storage name \\\"\".concat(storageName, \"\\\".\\n\\n * Make sure you call \\\"stopPersisting\\\" before recreating \\\"\").concat(storageName, \"\\\" to avoid memory leaks. \\n * Or double check you did not have two stores with the same name.\"));\n    }\n};\nvar computedPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is computed and will not persist.\"));\n    }\n};\nvar actionPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is an action and will not persist.\"));\n    }\n};\nvar consoleDebug = function (isDebugMode, message, content) {\n    if (content === void 0) { content = ''; }\n    if (isDebugMode && isBrowser && isNotProductionBuild) {\n        console.info(\"%c mobx-persist-store: (Debug Mode) \".concat(message, \" \"), 'background: #4B8CC5; color: black; display: block;', content);\n    }\n};\nvar isArrayForMap = function (value) {\n    if (Array.isArray(value)) {\n        return value.every(function (v) { return Array.isArray(v); });\n    }\n    return false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/StorageAdapter.js\nvar StorageAdapter_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar StorageAdapter_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar StorageAdapter = /** @class */ (function () {\n    function StorageAdapter(options) {\n        this.options = options;\n    }\n    StorageAdapter.prototype.setItem = function (key, item) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, _c, stringify, _d, debugMode, data, content;\n            return StorageAdapter_generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _b = this.options, _c = _b.stringify, stringify = _c === void 0 ? true : _c, _d = _b.debugMode, debugMode = _d === void 0 ? false : _d;\n                        data = this.options.expireIn\n                            ? Object.assign({}, item, {\n                                __mps__: {\n                                    expireInTimestamp: buildExpireTimestamp(this.options.expireIn),\n                                },\n                            })\n                            : item;\n                        content = stringify ? JSON.stringify(data) : data;\n                        consoleDebug(debugMode, \"\".concat(key, \" - setItem:\"), content);\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.setItem(key, content))];\n                    case 1:\n                        _e.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.getItem = function (key) {\n        var _a, _b;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _c, _d, removeOnExpiration, _e, debugMode, storageData, parsedData, hasExpired;\n            return StorageAdapter_generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        _c = this.options, _d = _c.removeOnExpiration, removeOnExpiration = _d === void 0 ? true : _d, _e = _c.debugMode, debugMode = _e === void 0 ? false : _e;\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.getItem(key))];\n                    case 1:\n                        storageData = _f.sent();\n                        try {\n                            parsedData = JSON.parse(storageData) || {};\n                        }\n                        catch (error) {\n                            parsedData = storageData || {};\n                        }\n                        hasExpired = hasTimestampExpired((_b = parsedData.__mps__) === null || _b === void 0 ? void 0 : _b.expireInTimestamp);\n                        consoleDebug(debugMode, \"\".concat(key, \" - hasExpired\"), hasExpired);\n                        if (!(hasExpired && removeOnExpiration)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.removeItem(key)];\n                    case 2:\n                        _f.sent();\n                        _f.label = 3;\n                    case 3:\n                        parsedData = hasExpired ? {} : parsedData;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (getItem):\"), parsedData);\n                        return [2 /*return*/, parsedData];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.removeItem = function (key) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, debugMode;\n            return StorageAdapter_generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = this.options.debugMode, debugMode = _b === void 0 ? false : _b;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (removeItem): storage was removed\"));\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.removeItem(key))];\n                    case 1:\n                        _c.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return StorageAdapter;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/serializableProperty.js\n\n\nvar isSerializableProperty = function (obj) {\n    var keys = ['key', 'serialize', 'deserialize'];\n    if (!isObject(obj)) {\n        consoleDebug(!!mpsConfig.debugMode, 'passed value is not an object', { obj: obj });\n        return false;\n    }\n    return keys.every(function (key) {\n        if (obj.hasOwnProperty(key) && typeof key !== 'undefined') {\n            return true;\n        }\n        ;\n        consoleDebug(!!mpsConfig.debugMode, \"\".concat(key, \" not found in SerializableProperty\"), { key: key, obj: obj });\n        return false;\n    });\n};\nvar makeSerializableProperties = function (properties) {\n    return properties.reduce(function (acc, curr) {\n        if (typeof curr === 'string') {\n            acc.push({\n                key: curr,\n                serialize: function (value) { return value; },\n                deserialize: function (value) { return value; }\n            });\n            return acc;\n        }\n        if (isSerializableProperty(curr)) {\n            acc.push(curr);\n            return acc;\n        }\n        return acc;\n    }, []);\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStore.js\nvar PersistStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar PersistStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\nvar PersistStore = /** @class */ (function () {\n    function PersistStore(target, options, reactionOptions) {\n        if (reactionOptions === void 0) { reactionOptions = {}; }\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n        this.debugMode = false;\n        this.isHydrated = false;\n        this.isPersisting = false;\n        this.storageName = '';\n        this.target = target;\n        this.storageName = options.name;\n        this.properties = makeSerializableProperties(options.properties);\n        this.reactionOptions = Object.assign({ fireImmediately: true }, mpsReactionOptions, reactionOptions);\n        this.debugMode = (_b = (_a = options.debugMode) !== null && _a !== void 0 ? _a : mpsConfig.debugMode) !== null && _b !== void 0 ? _b : false;\n        this.storageAdapter = new StorageAdapter({\n            expireIn: (_c = options.expireIn) !== null && _c !== void 0 ? _c : mpsConfig.expireIn,\n            removeOnExpiration: (_e = (_d = options.removeOnExpiration) !== null && _d !== void 0 ? _d : mpsConfig.removeOnExpiration) !== null && _e !== void 0 ? _e : true,\n            stringify: (_g = (_f = options.stringify) !== null && _f !== void 0 ? _f : mpsConfig.stringify) !== null && _g !== void 0 ? _g : true,\n            storage: options.storage ? options.storage : mpsConfig.storage,\n            debugMode: this.debugMode,\n        });\n        (0,external_mobx_.makeObservable)(this, {\n            clearPersistedStore: external_mobx_.action,\n            hydrateStore: external_mobx_.action,\n            isHydrated: external_mobx_.observable,\n            isPersisting: external_mobx_.observable,\n            pausePersisting: external_mobx_.action,\n            startPersisting: external_mobx_.action,\n            stopPersisting: external_mobx_.action,\n        }, { autoBind: true, deep: false });\n        invalidStorageAdaptorWarningIf(this.storageAdapter.options.storage, this.storageName);\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (makePersistable)\"), {\n            properties: this.properties,\n            storageAdapter: this.storageAdapter,\n            reactionOptions: this.reactionOptions,\n        });\n    }\n    PersistStore.prototype.init = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.hydrateStore()];\n                    case 1:\n                        _a.sent();\n                        this.startPersisting();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.hydrateStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            var isBeingWatched, data_1, target_1;\n            var _this = this;\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isBeingWatched = Boolean(this.cancelWatch);\n                        if (this.isPersisting) {\n                            this.pausePersisting();\n                        }\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = false;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - (hydrateStore) isHydrated:\"), _this.isHydrated);\n                        });\n                        if (!(this.storageAdapter && this.target)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.getItem(this.storageName)];\n                    case 1:\n                        data_1 = _a.sent();\n                        target_1 = this.target;\n                        if (data_1) {\n                            (0,external_mobx_.runInAction)(function () {\n                                _this.properties.forEach(function (property) {\n                                    var allowPropertyHydration = [\n                                        target_1.hasOwnProperty(property.key),\n                                        typeof data_1[property.key] !== 'undefined',\n                                    ].every(Boolean);\n                                    if (allowPropertyHydration) {\n                                        var propertyData = data_1[property.key];\n                                        if (target_1[property.key] instanceof external_mobx_.ObservableMap && isArrayForMap(propertyData)) {\n                                            target_1[property.key] = property.deserialize(new Map(propertyData));\n                                        }\n                                        else {\n                                            target_1[property.key] = property.deserialize(propertyData);\n                                        }\n                                    }\n                                });\n                            });\n                        }\n                        _a.label = 2;\n                    case 2:\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = true;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - isHydrated:\"), _this.isHydrated);\n                        });\n                        if (isBeingWatched) {\n                            this.startPersisting();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.startPersisting = function () {\n        var _this = this;\n        if (!this.storageAdapter || !this.target || this.cancelWatch) {\n            return;\n        }\n        // Reassigning so TypeScript doesn't complain (Object is possibly 'null') about and this.target within reaction\n        var target = this.target;\n        this.cancelWatch = (0,external_mobx_.reaction)(function () {\n            var propertiesToWatch = {};\n            _this.properties.forEach(function (property) {\n                var isComputedProperty = (0,external_mobx_.isComputedProp)(target, property.key);\n                var isActionProperty = (0,external_mobx_.isAction)(target[property.key]);\n                computedPersistWarningIf(isComputedProperty, String(property.key));\n                actionPersistWarningIf(isActionProperty, String(property.key));\n                if (!isComputedProperty && !isActionProperty) {\n                    var propertyData = property.serialize(target[property.key]);\n                    if (propertyData instanceof external_mobx_.ObservableMap) {\n                        var mapArray_1 = [];\n                        propertyData.forEach(function (v, k) {\n                            mapArray_1.push([k, (0,external_mobx_.toJS)(v)]);\n                        });\n                        propertyData = mapArray_1;\n                    }\n                    propertiesToWatch[property.key] = (0,external_mobx_.toJS)(propertyData);\n                }\n            });\n            return propertiesToWatch;\n        }, function (dataToSave) { return PersistStore_awaiter(_this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.setItem(this.storageName, dataToSave)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        }); }, this.reactionOptions);\n        this.isPersisting = true;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (startPersisting) isPersisting:\"), this.isPersisting);\n    };\n    PersistStore.prototype.pausePersisting = function () {\n        this.isPersisting = false;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - pausePersisting (isPersisting):\"), this.isPersisting);\n        if (this.cancelWatch) {\n            this.cancelWatch();\n            this.cancelWatch = null;\n        }\n    };\n    PersistStore.prototype.stopPersisting = function () {\n        this.pausePersisting();\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (stopPersisting)\"));\n        PersistStoreMap_PersistStoreMap[\"delete\"](this.target);\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n    };\n    PersistStore.prototype.clearPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (clearPersistedStore)\"));\n                        return [4 /*yield*/, this.storageAdapter.removeItem(this.storageName)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.getPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                if (this.storageAdapter) {\n                    consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (getPersistedStore)\"));\n                    // @ts-ignore\n                    return [2 /*return*/, this.storageAdapter.getItem(this.storageName)];\n                }\n                return [2 /*return*/, null];\n            });\n        });\n    };\n    return PersistStore;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/makePersistable.js\nvar makePersistable_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar makePersistable_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\nvar makePersistable = function (target, storageOptions, reactionOptions) { return makePersistable_awaiter(void 0, void 0, void 0, function () {\n    var mobxPersistStore, hasPersistedStoreAlready;\n    return makePersistable_generator(this, function (_a) {\n        mobxPersistStore = new PersistStore(target, storageOptions, reactionOptions);\n        hasPersistedStoreAlready = Array.from(PersistStoreMap_PersistStoreMap.values())\n            .map(function (item) { return item.storageName; })\n            .includes(mobxPersistStore.storageName);\n        duplicatedStoreWarningIf(hasPersistedStoreAlready, mobxPersistStore.storageName);\n        PersistStoreMap_PersistStoreMap.set(target, mobxPersistStore);\n        return [2 /*return*/, mobxPersistStore.init()];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/pausePersisting.js\n\nvar pausePersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.pausePersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/startPersisting.js\n\nvar startPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.startPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/stopPersisting.js\n\nvar stopPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap_PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.stopPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/mobx-persist-store/lib/esm5/index.js\n");

/***/ }),

/***/ "../../../node_modules/mobx-react-lite/es/index.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Pi\": () => (/* reexport */ observer)\n});\n\n// UNUSED EXPORTS: Observer, clearTimers, enableStaticRendering, isObserverBatched, isUsingStaticRendering, observerBatching, useAsObservableSource, useLocalObservable, useLocalStore, useObserver, useStaticRendering\n\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/assertEnvironment.js\n\n\nif (!external_react_.useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\");\n}\nif (!external_mobx_.makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\");\n}\n//# sourceMappingURL=assertEnvironment.js.map\n// EXTERNAL MODULE: external \"react-dom\"\nvar external_react_dom_ = __webpack_require__(\"react-dom\");\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js\n\n//# sourceMappingURL=reactBatchedUpdates.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/observerBatching.js\n\nfunction defaultNoopBatch(callback) {\n    callback();\n}\nfunction observerBatching(reactionScheduler) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch;\n        if (false) {}\n    }\n    (0,external_mobx_.configure)({ reactionScheduler: reactionScheduler });\n}\nvar isObserverBatched = function () {\n    if (false) {}\n    return true;\n};\n//# sourceMappingURL=observerBatching.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/printDebugValue.js\n\nfunction printDebugValue(v) {\n    return (0,external_mobx_.getDependencyTree)(v);\n}\n//# sourceMappingURL=printDebugValue.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/UniversalFinalizationRegistry.js\nvar REGISTRY_FINALIZE_AFTER = 10000;\nvar REGISTRY_SWEEP_INTERVAL = 10000;\nvar TimerBasedFinalizationRegistry = /** @class */ (function () {\n    function TimerBasedFinalizationRegistry(finalize) {\n        var _this = this;\n        Object.defineProperty(this, \"finalize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: finalize\n        });\n        Object.defineProperty(this, \"registrations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"sweepTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Bound so it can be used directly as setTimeout callback.\n        Object.defineProperty(this, \"sweep\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (maxAge) {\n                if (maxAge === void 0) { maxAge = REGISTRY_FINALIZE_AFTER; }\n                // cancel timeout so we can force sweep anytime\n                clearTimeout(_this.sweepTimeout);\n                _this.sweepTimeout = undefined;\n                var now = Date.now();\n                _this.registrations.forEach(function (registration, token) {\n                    if (now - registration.registeredAt >= maxAge) {\n                        _this.finalize(registration.value);\n                        _this.registrations.delete(token);\n                    }\n                });\n                if (_this.registrations.size > 0) {\n                    _this.scheduleSweep();\n                }\n            }\n        });\n        // Bound so it can be exported directly as clearTimers test utility.\n        Object.defineProperty(this, \"finalizeAllImmediately\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function () {\n                _this.sweep(0);\n            }\n        });\n    }\n    // Token is actually required with this impl\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"register\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (target, value, token) {\n            this.registrations.set(token, {\n                value: value,\n                registeredAt: Date.now()\n            });\n            this.scheduleSweep();\n        }\n    });\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"unregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (token) {\n            this.registrations.delete(token);\n        }\n    });\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"scheduleSweep\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this.sweepTimeout === undefined) {\n                this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL);\n            }\n        }\n    });\n    return TimerBasedFinalizationRegistry;\n}());\n\nvar UniversalFinalizationRegistry = typeof FinalizationRegistry !== \"undefined\"\n    ? FinalizationRegistry\n    : TimerBasedFinalizationRegistry;\n//# sourceMappingURL=UniversalFinalizationRegistry.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/observerFinalizationRegistry.js\n\nvar observerFinalizationRegistry = new UniversalFinalizationRegistry(function (adm) {\n    var _a;\n    (_a = adm.reaction) === null || _a === void 0 ? void 0 : _a.dispose();\n    adm.reaction = null;\n});\n//# sourceMappingURL=observerFinalizationRegistry.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/staticRendering.js\nvar globalIsUsingStaticRendering = false;\nfunction staticRendering_enableStaticRendering(enable) {\n    globalIsUsingStaticRendering = enable;\n}\nfunction isUsingStaticRendering() {\n    return globalIsUsingStaticRendering;\n}\n//# sourceMappingURL=staticRendering.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useObserver.js\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\n\n\nfunction observerComponentNameFor(baseComponentName) {\n    return \"observer\".concat(baseComponentName);\n}\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\nvar ObjectToBeRetainedByReact = /** @class */ (function () {\n    function ObjectToBeRetainedByReact() {\n    }\n    return ObjectToBeRetainedByReact;\n}());\nfunction objectToBeRetainedByReactFactory() {\n    return new ObjectToBeRetainedByReact();\n}\nfunction useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (isUsingStaticRendering()) {\n        return fn();\n    }\n    var _a = __read(external_react_default().useState(objectToBeRetainedByReactFactory), 1), objectRetainedByReact = _a[0];\n    // Force update, see #2982\n    var _b = __read(external_react_default().useState(), 2), setState = _b[1];\n    var forceUpdate = function () { return setState([]); };\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    var admRef = external_react_default().useRef(null);\n    if (!admRef.current) {\n        // First render\n        admRef.current = {\n            reaction: null,\n            mounted: false,\n            changedBeforeMount: false\n        };\n    }\n    var adm = admRef.current;\n    if (!adm.reaction) {\n        // First render or component was not committed and reaction was disposed by registry\n        adm.reaction = new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (adm.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                forceUpdate();\n            }\n            else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.\n                adm.changedBeforeMount = true;\n            }\n        });\n        observerFinalizationRegistry.register(objectRetainedByReact, adm, adm);\n    }\n    external_react_default().useDebugValue(adm.reaction, printDebugValue);\n    external_react_default().useEffect(function () {\n        observerFinalizationRegistry.unregister(adm);\n        adm.mounted = true;\n        if (adm.reaction) {\n            if (adm.changedBeforeMount) {\n                // Got a change before mount, force an update\n                adm.changedBeforeMount = false;\n                forceUpdate();\n            }\n        }\n        else {\n            // The reaction we set up in our render has been disposed.\n            // This can be due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up\n            // Re-create the reaction\n            adm.reaction = new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n                // We've definitely already been mounted at this point\n                forceUpdate();\n            });\n            forceUpdate();\n        }\n        return function () {\n            adm.reaction.dispose();\n            adm.reaction = null;\n            adm.mounted = false;\n            adm.changedBeforeMount = false;\n        };\n    }, []);\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    var rendering;\n    var exception;\n    adm.reaction.track(function () {\n        try {\n            rendering = fn();\n        }\n        catch (e) {\n            exception = e;\n        }\n    });\n    if (exception) {\n        throw exception; // re-throw any exceptions caught during rendering\n    }\n    return rendering;\n}\n//# sourceMappingURL=useObserver.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/observer.js\n\n\n\nvar warnObserverOptionsDeprecated = true;\nvar hasSymbol = typeof Symbol === \"function\" && Symbol.for;\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nvar ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof external_react_.forwardRef === \"function\" && (0,external_react_.forwardRef)(function (props) { return null; })[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof external_react_.memo === \"function\" && (0,external_react_.memo)(function (props) { return null; })[\"$$typeof\"];\n// n.b. base case is not used for actual typings or exported in the typing files\nfunction observer(baseComponent, \n// TODO remove in next major\noptions) {\n    var _a;\n    if (false) {}\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\"[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.\");\n    }\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent;\n    }\n    var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;\n    var render = baseComponent;\n    var baseComponentName = baseComponent.displayName || baseComponent.name;\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true;\n        render = baseComponent[\"render\"];\n        if (typeof render !== \"function\") {\n            throw new Error(\"[mobx-react-lite] `render` property of ForwardRef was not a function\");\n        }\n    }\n    var observerComponent = function (props, ref) {\n        return useObserver(function () { return render(props, ref); }, baseComponentName);\n    };\n    // Don't set `displayName` for anonymous components,\n    // so the `displayName` can be customized by user, see #3192.\n    if (baseComponentName !== \"\") {\n        ;\n        observerComponent.displayName = baseComponentName;\n    }\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if (baseComponent.contextTypes) {\n        ;\n        observerComponent.contextTypes = baseComponent.contextTypes;\n    }\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = (0,external_react_.forwardRef)(observerComponent);\n    }\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = (0,external_react_.memo)(observerComponent);\n    copyStaticProperties(baseComponent, observerComponent);\n    if (false) {}\n    return observerComponent;\n}\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nvar hoistBlackList = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n};\nfunction copyStaticProperties(base, target) {\n    Object.keys(base).forEach(function (key) {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n        }\n    });\n}\n//# sourceMappingURL=observer.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/ObserverComponent.js\n\nfunction ObserverComponent(_a) {\n    var children = _a.children, render = _a.render;\n    var component = children || render;\n    if (typeof component !== \"function\") {\n        return null;\n    }\n    return useObserver(component);\n}\nif (false) {}\nObserverComponent.displayName = \"Observer\";\n\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\n    var extraKey = key === \"children\" ? \"render\" : \"children\";\n    var hasProp = typeof props[key] === \"function\";\n    var hasExtraProp = typeof props[extraKey] === \"function\";\n    if (hasProp && hasExtraProp) {\n        return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\n    }\n    if (hasProp || hasExtraProp) {\n        return null;\n    }\n    return new Error(\"Invalid prop `\" +\n        propFullName +\n        \"` of type `\" +\n        typeof props[key] +\n        \"` supplied to\" +\n        \" `\" +\n        componentName +\n        \"`, expected `function`.\");\n}\n//# sourceMappingURL=ObserverComponent.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalObservable.js\n\n\nfunction useLocalObservable(initializer, annotations) {\n    return useState(function () { return observable(initializer(), annotations, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalObservable.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useAsObservableSource.js\nvar useAsObservableSource_read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\nfunction useAsObservableSource_useAsObservableSource(current) {\n    if (false)\n        {}\n    var _a = useAsObservableSource_read(useState(function () { return observable(current, {}, { deep: false }); }), 1), res = _a[0];\n    runInAction(function () {\n        Object.assign(res, current);\n    });\n    return res;\n}\n//# sourceMappingURL=useAsObservableSource.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalStore.js\n\n\n\n\nfunction useLocalStore(initializer, current) {\n    if (false)\n        {}\n    var source = current && useAsObservableSource(current);\n    return useState(function () { return observable(initializer(source), undefined, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalStore.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/index.js\nvar _a;\n\n\n\n\n\n\n\nobserverBatching(external_react_dom_.unstable_batchedUpdates);\n\n\n\n\n\n\nvar clearTimers = (_a = observerFinalizationRegistry.finalizeAllImmediately) !== null && _a !== void 0 ? _a : (function () { });\nfunction es_useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (false) {}\n    return useObserverOriginal(fn, baseComponentName);\n}\n\nfunction useStaticRendering(enable) {\n    if (false) {}\n    enableStaticRendering(enable);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/mobx-react-lite/es/index.js\n");

/***/ }),

/***/ "@deriv/components":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;

/***/ }),

/***/ "@deriv/shared":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;

/***/ }),

/***/ "@deriv/translations":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;

/***/ }),

/***/ "mobx":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_mobx__;

/***/ }),

/***/ "react":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "react-dom":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"j\": () => (/* binding */ focusManager)\n/* harmony export */ });\n/* unused harmony export FocusManager */\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\nclass FocusManager extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__/* .Subscribable */ .l {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!_utils_mjs__WEBPACK_IMPORTED_MODULE_1__/* .isServer */ .sk && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\n\n//# sourceMappingURL=focusManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9mb2N1c01hbmFnZXIubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvZm9jdXNNYW5hZ2VyLm1qcz9lNzgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gJy4vc3Vic2NyaWJhYmxlLm1qcyc7XG5pbXBvcnQgeyBpc1NlcnZlciB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuY2xhc3MgRm9jdXNNYW5hZ2VyIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuc2V0dXAgPSBvbkZvY3VzID0+IHtcbiAgICAgIC8vIGFkZEV2ZW50TGlzdGVuZXIgZG9lcyBub3QgZXhpc3QgaW4gUmVhY3QgTmF0aXZlLCBidXQgd2luZG93IGRvZXNcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5uZWNlc3NhcnktY29uZGl0aW9uXG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4gb25Gb2N1cygpOyAvLyBMaXN0ZW4gdG8gdmlzaWJpbGxpdHljaGFuZ2UgYW5kIGZvY3VzXG5cblxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgLy8gQmUgc3VyZSB0byB1bnN1YnNjcmliZSBpZiBhIG5ldyBoYW5kbGVyIGlzIHNldFxuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgbGlzdGVuZXIpO1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1cycsIGxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cblxuICBvblN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuc2V0dXApO1xuICAgIH1cbiAgfVxuXG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB2YXIgX3RoaXMkY2xlYW51cDtcblxuICAgICAgKF90aGlzJGNsZWFudXAgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwLmNhbGwodGhpcyk7XG4gICAgICB0aGlzLmNsZWFudXAgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHZhciBfdGhpcyRjbGVhbnVwMjtcblxuICAgIHRoaXMuc2V0dXAgPSBzZXR1cDtcbiAgICAoX3RoaXMkY2xlYW51cDIgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwMi5jYWxsKHRoaXMpO1xuICAgIHRoaXMuY2xlYW51cCA9IHNldHVwKGZvY3VzZWQgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBmb2N1c2VkID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgdGhpcy5zZXRGb2N1c2VkKGZvY3VzZWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzZXRGb2N1c2VkKGZvY3VzZWQpIHtcbiAgICB0aGlzLmZvY3VzZWQgPSBmb2N1c2VkO1xuXG4gICAgaWYgKGZvY3VzZWQpIHtcbiAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIG9uRm9jdXMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoe1xuICAgICAgbGlzdGVuZXJcbiAgICB9KSA9PiB7XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH0pO1xuICB9XG5cbiAgaXNGb2N1c2VkKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5mb2N1c2VkID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvY3VzZWQ7XG4gICAgfSAvLyBkb2N1bWVudCBnbG9iYWwgY2FuIGJlIHVuYXZhaWxhYmxlIGluIHJlYWN0IG5hdGl2ZVxuXG5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIFt1bmRlZmluZWQsICd2aXNpYmxlJywgJ3ByZXJlbmRlciddLmluY2x1ZGVzKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSk7XG4gIH1cblxufVxuY29uc3QgZm9jdXNNYW5hZ2VyID0gbmV3IEZvY3VzTWFuYWdlcigpO1xuXG5leHBvcnQgeyBGb2N1c01hbmFnZXIsIGZvY3VzTWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9jdXNNYW5hZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/logger.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_\": () => (/* binding */ defaultLogger)\n/* harmony export */ });\nconst defaultLogger = console;\n\n\n//# sourceMappingURL=logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9sb2dnZXIubWpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9sb2dnZXIubWpzP2IxZTAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVmYXVsdExvZ2dlciA9IGNvbnNvbGU7XG5cbmV4cG9ydCB7IGRlZmF1bHRMb2dnZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/logger.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"m\": () => (/* binding */ Mutation)\n/* harmony export */ });\n/* unused harmony export getDefaultState */\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _removable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/removable.mjs\");\n/* harmony import */ var _retryer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n\n\n\n\n\n// CLASS\nclass Mutation extends _removable_mjs__WEBPACK_IMPORTED_MODULE_0__/* .Removable */ .F {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || _logger_mjs__WEBPACK_IMPORTED_MODULE_1__/* .defaultLogger */ ._;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_2__/* .createRetryer */ .Mz)({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (false) {}\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !(0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_2__/* .canFetch */ .Kw)(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__/* .notifyManager.batch */ .V.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\n\n//# sourceMappingURL=mutation.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9tdXRhdGlvbi5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvbXV0YXRpb24ubWpzPzY3NWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmYXVsdExvZ2dlciB9IGZyb20gJy4vbG9nZ2VyLm1qcyc7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSAnLi9ub3RpZnlNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBSZW1vdmFibGUgfSBmcm9tICcuL3JlbW92YWJsZS5tanMnO1xuaW1wb3J0IHsgY3JlYXRlUmV0cnllciwgY2FuRmV0Y2ggfSBmcm9tICcuL3JldHJ5ZXIubWpzJztcblxuLy8gQ0xBU1NcbmNsYXNzIE11dGF0aW9uIGV4dGVuZHMgUmVtb3ZhYmxlIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmRlZmF1bHRPcHRpb25zID0gY29uZmlnLmRlZmF1bHRPcHRpb25zO1xuICAgIHRoaXMubXV0YXRpb25JZCA9IGNvbmZpZy5tdXRhdGlvbklkO1xuICAgIHRoaXMubXV0YXRpb25DYWNoZSA9IGNvbmZpZy5tdXRhdGlvbkNhY2hlO1xuICAgIHRoaXMubG9nZ2VyID0gY29uZmlnLmxvZ2dlciB8fCBkZWZhdWx0TG9nZ2VyO1xuICAgIHRoaXMub2JzZXJ2ZXJzID0gW107XG4gICAgdGhpcy5zdGF0ZSA9IGNvbmZpZy5zdGF0ZSB8fCBnZXREZWZhdWx0U3RhdGUoKTtcbiAgICB0aGlzLnNldE9wdGlvbnMoY29uZmlnLm9wdGlvbnMpO1xuICAgIHRoaXMuc2NoZWR1bGVHYygpO1xuICB9XG5cbiAgc2V0T3B0aW9ucyhvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0geyAuLi50aGlzLmRlZmF1bHRPcHRpb25zLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH07XG4gICAgdGhpcy51cGRhdGVDYWNoZVRpbWUodGhpcy5vcHRpb25zLmNhY2hlVGltZSk7XG4gIH1cblxuICBnZXQgbWV0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLm1ldGE7XG4gIH1cblxuICBzZXRTdGF0ZShzdGF0ZSkge1xuICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgdHlwZTogJ3NldFN0YXRlJyxcbiAgICAgIHN0YXRlXG4gICAgfSk7XG4gIH1cblxuICBhZGRPYnNlcnZlcihvYnNlcnZlcikge1xuICAgIGlmICghdGhpcy5vYnNlcnZlcnMuaW5jbHVkZXMob2JzZXJ2ZXIpKSB7XG4gICAgICB0aGlzLm9ic2VydmVycy5wdXNoKG9ic2VydmVyKTsgLy8gU3RvcCB0aGUgbXV0YXRpb24gZnJvbSBiZWluZyBnYXJiYWdlIGNvbGxlY3RlZFxuXG4gICAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG4gICAgICB0aGlzLm11dGF0aW9uQ2FjaGUubm90aWZ5KHtcbiAgICAgICAgdHlwZTogJ29ic2VydmVyQWRkZWQnLFxuICAgICAgICBtdXRhdGlvbjogdGhpcyxcbiAgICAgICAgb2JzZXJ2ZXJcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZU9ic2VydmVyKG9ic2VydmVyKSB7XG4gICAgdGhpcy5vYnNlcnZlcnMgPSB0aGlzLm9ic2VydmVycy5maWx0ZXIoeCA9PiB4ICE9PSBvYnNlcnZlcik7XG4gICAgdGhpcy5zY2hlZHVsZUdjKCk7XG4gICAgdGhpcy5tdXRhdGlvbkNhY2hlLm5vdGlmeSh7XG4gICAgICB0eXBlOiAnb2JzZXJ2ZXJSZW1vdmVkJyxcbiAgICAgIG11dGF0aW9uOiB0aGlzLFxuICAgICAgb2JzZXJ2ZXJcbiAgICB9KTtcbiAgfVxuXG4gIG9wdGlvbmFsUmVtb3ZlKCkge1xuICAgIGlmICghdGhpcy5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICBpZiAodGhpcy5zdGF0ZS5zdGF0dXMgPT09ICdsb2FkaW5nJykge1xuICAgICAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubXV0YXRpb25DYWNoZS5yZW1vdmUodGhpcyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29udGludWUoKSB7XG4gICAgdmFyIF90aGlzJHJldHJ5ZXIkY29udGludSwgX3RoaXMkcmV0cnllcjtcblxuICAgIHJldHVybiAoX3RoaXMkcmV0cnllciRjb250aW51ID0gKF90aGlzJHJldHJ5ZXIgPSB0aGlzLnJldHJ5ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRyZXRyeWVyLmNvbnRpbnVlKCkpICE9IG51bGwgPyBfdGhpcyRyZXRyeWVyJGNvbnRpbnUgOiB0aGlzLmV4ZWN1dGUoKTtcbiAgfVxuXG4gIGFzeW5jIGV4ZWN1dGUoKSB7XG4gICAgY29uc3QgZXhlY3V0ZU11dGF0aW9uID0gKCkgPT4ge1xuICAgICAgdmFyIF90aGlzJG9wdGlvbnMkcmV0cnk7XG5cbiAgICAgIHRoaXMucmV0cnllciA9IGNyZWF0ZVJldHJ5ZXIoe1xuICAgICAgICBmbjogKCkgPT4ge1xuICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLm11dGF0aW9uRm4pIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnTm8gbXV0YXRpb25GbiBmb3VuZCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMubXV0YXRpb25Gbih0aGlzLnN0YXRlLnZhcmlhYmxlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRmFpbDogKGZhaWx1cmVDb3VudCwgZXJyb3IpID0+IHtcbiAgICAgICAgICB0aGlzLmRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdmYWlsZWQnLFxuICAgICAgICAgICAgZmFpbHVyZUNvdW50LFxuICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25QYXVzZTogKCkgPT4ge1xuICAgICAgICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ3BhdXNlJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbkNvbnRpbnVlOiAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnY29udGludWUnXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHJldHJ5OiAoX3RoaXMkb3B0aW9ucyRyZXRyeSA9IHRoaXMub3B0aW9ucy5yZXRyeSkgIT0gbnVsbCA/IF90aGlzJG9wdGlvbnMkcmV0cnkgOiAwLFxuICAgICAgICByZXRyeURlbGF5OiB0aGlzLm9wdGlvbnMucmV0cnlEZWxheSxcbiAgICAgICAgbmV0d29ya01vZGU6IHRoaXMub3B0aW9ucy5uZXR3b3JrTW9kZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcy5yZXRyeWVyLnByb21pc2U7XG4gICAgfTtcblxuICAgIGNvbnN0IHJlc3RvcmVkID0gdGhpcy5zdGF0ZS5zdGF0dXMgPT09ICdsb2FkaW5nJztcblxuICAgIHRyeSB7XG4gICAgICB2YXIgX3RoaXMkbXV0YXRpb25DYWNoZSRjMywgX3RoaXMkbXV0YXRpb25DYWNoZSRjNCwgX3RoaXMkb3B0aW9ucyRvblN1Y2NlLCBfdGhpcyRvcHRpb25zMiwgX3RoaXMkbXV0YXRpb25DYWNoZSRjNSwgX3RoaXMkbXV0YXRpb25DYWNoZSRjNiwgX3RoaXMkb3B0aW9ucyRvblNldHRsLCBfdGhpcyRvcHRpb25zMztcblxuICAgICAgaWYgKCFyZXN0b3JlZCkge1xuICAgICAgICB2YXIgX3RoaXMkbXV0YXRpb25DYWNoZSRjLCBfdGhpcyRtdXRhdGlvbkNhY2hlJGMyLCBfdGhpcyRvcHRpb25zJG9uTXV0YXQsIF90aGlzJG9wdGlvbnM7XG5cbiAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogJ2xvYWRpbmcnLFxuICAgICAgICAgIHZhcmlhYmxlczogdGhpcy5vcHRpb25zLnZhcmlhYmxlc1xuICAgICAgICB9KTsgLy8gTm90aWZ5IGNhY2hlIGNhbGxiYWNrXG5cbiAgICAgICAgYXdhaXQgKChfdGhpcyRtdXRhdGlvbkNhY2hlJGMgPSAoX3RoaXMkbXV0YXRpb25DYWNoZSRjMiA9IHRoaXMubXV0YXRpb25DYWNoZS5jb25maWcpLm9uTXV0YXRlKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRpb25DYWNoZSRjLmNhbGwoX3RoaXMkbXV0YXRpb25DYWNoZSRjMiwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMpKTtcbiAgICAgICAgY29uc3QgY29udGV4dCA9IGF3YWl0ICgoX3RoaXMkb3B0aW9ucyRvbk11dGF0ID0gKF90aGlzJG9wdGlvbnMgPSB0aGlzLm9wdGlvbnMpLm9uTXV0YXRlKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkb3B0aW9ucyRvbk11dGF0LmNhbGwoX3RoaXMkb3B0aW9ucywgdGhpcy5zdGF0ZS52YXJpYWJsZXMpKTtcblxuICAgICAgICBpZiAoY29udGV4dCAhPT0gdGhpcy5zdGF0ZS5jb250ZXh0KSB7XG4gICAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnbG9hZGluZycsXG4gICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgdmFyaWFibGVzOiB0aGlzLnN0YXRlLnZhcmlhYmxlc1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBleGVjdXRlTXV0YXRpb24oKTsgLy8gTm90aWZ5IGNhY2hlIGNhbGxiYWNrXG5cbiAgICAgIGF3YWl0ICgoX3RoaXMkbXV0YXRpb25DYWNoZSRjMyA9IChfdGhpcyRtdXRhdGlvbkNhY2hlJGM0ID0gdGhpcy5tdXRhdGlvbkNhY2hlLmNvbmZpZykub25TdWNjZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRpb25DYWNoZSRjMy5jYWxsKF90aGlzJG11dGF0aW9uQ2FjaGUkYzQsIGRhdGEsIHRoaXMuc3RhdGUudmFyaWFibGVzLCB0aGlzLnN0YXRlLmNvbnRleHQsIHRoaXMpKTtcbiAgICAgIGF3YWl0ICgoX3RoaXMkb3B0aW9ucyRvblN1Y2NlID0gKF90aGlzJG9wdGlvbnMyID0gdGhpcy5vcHRpb25zKS5vblN1Y2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRvcHRpb25zJG9uU3VjY2UuY2FsbChfdGhpcyRvcHRpb25zMiwgZGF0YSwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCkpOyAvLyBOb3RpZnkgY2FjaGUgY2FsbGJhY2tcblxuICAgICAgYXdhaXQgKChfdGhpcyRtdXRhdGlvbkNhY2hlJGM1ID0gKF90aGlzJG11dGF0aW9uQ2FjaGUkYzYgPSB0aGlzLm11dGF0aW9uQ2FjaGUuY29uZmlnKS5vblNldHRsZWQpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRtdXRhdGlvbkNhY2hlJGM1LmNhbGwoX3RoaXMkbXV0YXRpb25DYWNoZSRjNiwgZGF0YSwgbnVsbCwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCwgdGhpcykpO1xuICAgICAgYXdhaXQgKChfdGhpcyRvcHRpb25zJG9uU2V0dGwgPSAoX3RoaXMkb3B0aW9uczMgPSB0aGlzLm9wdGlvbnMpLm9uU2V0dGxlZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG9wdGlvbnMkb25TZXR0bC5jYWxsKF90aGlzJG9wdGlvbnMzLCBkYXRhLCBudWxsLCB0aGlzLnN0YXRlLnZhcmlhYmxlcywgdGhpcy5zdGF0ZS5jb250ZXh0KSk7XG4gICAgICB0aGlzLmRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgICBkYXRhXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgX3RoaXMkbXV0YXRpb25DYWNoZSRjNywgX3RoaXMkbXV0YXRpb25DYWNoZSRjOCwgX3RoaXMkb3B0aW9ucyRvbkVycm9yLCBfdGhpcyRvcHRpb25zNCwgX3RoaXMkbXV0YXRpb25DYWNoZSRjOSwgX3RoaXMkbXV0YXRpb25DYWNoZSRjMTAsIF90aGlzJG9wdGlvbnMkb25TZXR0bDIsIF90aGlzJG9wdGlvbnM1O1xuXG4gICAgICAgIC8vIE5vdGlmeSBjYWNoZSBjYWxsYmFja1xuICAgICAgICBhd2FpdCAoKF90aGlzJG11dGF0aW9uQ2FjaGUkYzcgPSAoX3RoaXMkbXV0YXRpb25DYWNoZSRjOCA9IHRoaXMubXV0YXRpb25DYWNoZS5jb25maWcpLm9uRXJyb3IpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRtdXRhdGlvbkNhY2hlJGM3LmNhbGwoX3RoaXMkbXV0YXRpb25DYWNoZSRjOCwgZXJyb3IsIHRoaXMuc3RhdGUudmFyaWFibGVzLCB0aGlzLnN0YXRlLmNvbnRleHQsIHRoaXMpKTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGF3YWl0ICgoX3RoaXMkb3B0aW9ucyRvbkVycm9yID0gKF90aGlzJG9wdGlvbnM0ID0gdGhpcy5vcHRpb25zKS5vbkVycm9yKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkb3B0aW9ucyRvbkVycm9yLmNhbGwoX3RoaXMkb3B0aW9uczQsIGVycm9yLCB0aGlzLnN0YXRlLnZhcmlhYmxlcywgdGhpcy5zdGF0ZS5jb250ZXh0KSk7IC8vIE5vdGlmeSBjYWNoZSBjYWxsYmFja1xuXG4gICAgICAgIGF3YWl0ICgoX3RoaXMkbXV0YXRpb25DYWNoZSRjOSA9IChfdGhpcyRtdXRhdGlvbkNhY2hlJGMxMCA9IHRoaXMubXV0YXRpb25DYWNoZS5jb25maWcpLm9uU2V0dGxlZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG11dGF0aW9uQ2FjaGUkYzkuY2FsbChfdGhpcyRtdXRhdGlvbkNhY2hlJGMxMCwgdW5kZWZpbmVkLCBlcnJvciwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCwgdGhpcykpO1xuICAgICAgICBhd2FpdCAoKF90aGlzJG9wdGlvbnMkb25TZXR0bDIgPSAoX3RoaXMkb3B0aW9uczUgPSB0aGlzLm9wdGlvbnMpLm9uU2V0dGxlZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG9wdGlvbnMkb25TZXR0bDIuY2FsbChfdGhpcyRvcHRpb25zNSwgdW5kZWZpbmVkLCBlcnJvciwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCkpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICAgICAgZXJyb3I6IGVycm9yXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGRpc3BhdGNoKGFjdGlvbikge1xuICAgIGNvbnN0IHJlZHVjZXIgPSBzdGF0ZSA9PiB7XG4gICAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgJ2ZhaWxlZCc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBmYWlsdXJlQ291bnQ6IGFjdGlvbi5mYWlsdXJlQ291bnQsXG4gICAgICAgICAgICBmYWlsdXJlUmVhc29uOiBhY3Rpb24uZXJyb3JcbiAgICAgICAgICB9O1xuXG4gICAgICAgIGNhc2UgJ3BhdXNlJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGlzUGF1c2VkOiB0cnVlXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdjb250aW51ZSc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBpc1BhdXNlZDogZmFsc2VcbiAgICAgICAgICB9O1xuXG4gICAgICAgIGNhc2UgJ2xvYWRpbmcnOlxuICAgICAgICAgIHJldHVybiB7IC4uLnN0YXRlLFxuICAgICAgICAgICAgY29udGV4dDogYWN0aW9uLmNvbnRleHQsXG4gICAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBmYWlsdXJlQ291bnQ6IDAsXG4gICAgICAgICAgICBmYWlsdXJlUmVhc29uOiBudWxsLFxuICAgICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgICAgICBpc1BhdXNlZDogIWNhbkZldGNoKHRoaXMub3B0aW9ucy5uZXR3b3JrTW9kZSksXG4gICAgICAgICAgICBzdGF0dXM6ICdsb2FkaW5nJyxcbiAgICAgICAgICAgIHZhcmlhYmxlczogYWN0aW9uLnZhcmlhYmxlc1xuICAgICAgICAgIH07XG5cbiAgICAgICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBkYXRhOiBhY3Rpb24uZGF0YSxcbiAgICAgICAgICAgIGZhaWx1cmVDb3VudDogMCxcbiAgICAgICAgICAgIGZhaWx1cmVSZWFzb246IG51bGwsXG4gICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgIHN0YXR1czogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgaXNQYXVzZWQ6IGZhbHNlXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdlcnJvcic6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBlcnJvcjogYWN0aW9uLmVycm9yLFxuICAgICAgICAgICAgZmFpbHVyZUNvdW50OiBzdGF0ZS5mYWlsdXJlQ291bnQgKyAxLFxuICAgICAgICAgICAgZmFpbHVyZVJlYXNvbjogYWN0aW9uLmVycm9yLFxuICAgICAgICAgICAgaXNQYXVzZWQ6IGZhbHNlLFxuICAgICAgICAgICAgc3RhdHVzOiAnZXJyb3InXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdzZXRTdGF0ZSc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICAuLi5hY3Rpb24uc3RhdGVcbiAgICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnN0YXRlID0gcmVkdWNlcih0aGlzLnN0YXRlKTtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMub2JzZXJ2ZXJzLmZvckVhY2gob2JzZXJ2ZXIgPT4ge1xuICAgICAgICBvYnNlcnZlci5vbk11dGF0aW9uVXBkYXRlKGFjdGlvbik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMubXV0YXRpb25DYWNoZS5ub3RpZnkoe1xuICAgICAgICBtdXRhdGlvbjogdGhpcyxcbiAgICAgICAgdHlwZTogJ3VwZGF0ZWQnLFxuICAgICAgICBhY3Rpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbn1cbmZ1bmN0aW9uIGdldERlZmF1bHRTdGF0ZSgpIHtcbiAgcmV0dXJuIHtcbiAgICBjb250ZXh0OiB1bmRlZmluZWQsXG4gICAgZGF0YTogdW5kZWZpbmVkLFxuICAgIGVycm9yOiBudWxsLFxuICAgIGZhaWx1cmVDb3VudDogMCxcbiAgICBmYWlsdXJlUmVhc29uOiBudWxsLFxuICAgIGlzUGF1c2VkOiBmYWxzZSxcbiAgICBzdGF0dXM6ICdpZGxlJyxcbiAgICB2YXJpYWJsZXM6IHVuZGVmaW5lZFxuICB9O1xufVxuXG5leHBvcnQgeyBNdXRhdGlvbiwgZ2V0RGVmYXVsdFN0YXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdXRhdGlvbi5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"V\": () => (/* binding */ notifyManager)\n/* harmony export */ });\n/* unused harmony export createNotifyManager */\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__/* .scheduleMicrotask */ .A4)(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__/* .scheduleMicrotask */ .A4)(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\n\n//# sourceMappingURL=notifyManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9ub3RpZnlNYW5hZ2VyLm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvbm90aWZ5TWFuYWdlci5tanM/NWY3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzY2hlZHVsZU1pY3JvdGFzayB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuZnVuY3Rpb24gY3JlYXRlTm90aWZ5TWFuYWdlcigpIHtcbiAgbGV0IHF1ZXVlID0gW107XG4gIGxldCB0cmFuc2FjdGlvbnMgPSAwO1xuXG4gIGxldCBub3RpZnlGbiA9IGNhbGxiYWNrID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICB9O1xuXG4gIGxldCBiYXRjaE5vdGlmeUZuID0gY2FsbGJhY2sgPT4ge1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG5cbiAgY29uc3QgYmF0Y2ggPSBjYWxsYmFjayA9PiB7XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cmFuc2FjdGlvbnMrKztcblxuICAgIHRyeSB7XG4gICAgICByZXN1bHQgPSBjYWxsYmFjaygpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cmFuc2FjdGlvbnMtLTtcblxuICAgICAgaWYgKCF0cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgZmx1c2goKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIGNvbnN0IHNjaGVkdWxlID0gY2FsbGJhY2sgPT4ge1xuICAgIGlmICh0cmFuc2FjdGlvbnMpIHtcbiAgICAgIHF1ZXVlLnB1c2goY2FsbGJhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgIG5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIEFsbCBjYWxscyB0byB0aGUgd3JhcHBlZCBmdW5jdGlvbiB3aWxsIGJlIGJhdGNoZWQuXG4gICAqL1xuXG5cbiAgY29uc3QgYmF0Y2hDYWxscyA9IGNhbGxiYWNrID0+IHtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgIHNjaGVkdWxlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2soLi4uYXJncyk7XG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xuXG4gIGNvbnN0IGZsdXNoID0gKCkgPT4ge1xuICAgIGNvbnN0IG9yaWdpbmFsUXVldWUgPSBxdWV1ZTtcbiAgICBxdWV1ZSA9IFtdO1xuXG4gICAgaWYgKG9yaWdpbmFsUXVldWUubGVuZ3RoKSB7XG4gICAgICBzY2hlZHVsZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgIGJhdGNoTm90aWZ5Rm4oKCkgPT4ge1xuICAgICAgICAgIG9yaWdpbmFsUXVldWUuZm9yRWFjaChjYWxsYmFjayA9PiB7XG4gICAgICAgICAgICBub3RpZnlGbihjYWxsYmFjayk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICAvKipcbiAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBub3RpZnkgZnVuY3Rpb24uXG4gICAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gZm9yIGV4YW1wbGUgd3JhcCBub3RpZmljYXRpb25zIHdpdGggYFJlYWN0LmFjdGAgd2hpbGUgcnVubmluZyB0ZXN0cy5cbiAgICovXG5cblxuICBjb25zdCBzZXROb3RpZnlGdW5jdGlvbiA9IGZuID0+IHtcbiAgICBub3RpZnlGbiA9IGZuO1xuICB9O1xuICAvKipcbiAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBmdW5jdGlvbiB0byBiYXRjaCBub3RpZmljYXRpb25zIHRvZ2V0aGVyIGludG8gYSBzaW5nbGUgdGljay5cbiAgICogQnkgZGVmYXVsdCBSZWFjdCBRdWVyeSB3aWxsIHVzZSB0aGUgYmF0Y2ggZnVuY3Rpb24gcHJvdmlkZWQgYnkgUmVhY3RET00gb3IgUmVhY3QgTmF0aXZlLlxuICAgKi9cblxuXG4gIGNvbnN0IHNldEJhdGNoTm90aWZ5RnVuY3Rpb24gPSBmbiA9PiB7XG4gICAgYmF0Y2hOb3RpZnlGbiA9IGZuO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgYmF0Y2gsXG4gICAgYmF0Y2hDYWxscyxcbiAgICBzY2hlZHVsZSxcbiAgICBzZXROb3RpZnlGdW5jdGlvbixcbiAgICBzZXRCYXRjaE5vdGlmeUZ1bmN0aW9uXG4gIH07XG59IC8vIFNJTkdMRVRPTlxuXG5jb25zdCBub3RpZnlNYW5hZ2VyID0gY3JlYXRlTm90aWZ5TWFuYWdlcigpO1xuXG5leHBvcnQgeyBjcmVhdGVOb3RpZnlNYW5hZ2VyLCBub3RpZnlNYW5hZ2VyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3RpZnlNYW5hZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"N\": () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* unused harmony export OnlineManager */\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__/* .Subscribable */ .l {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!_utils_mjs__WEBPACK_IMPORTED_MODULE_1__/* .isServer */ .sk && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\n\n//# sourceMappingURL=onlineManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9vbmxpbmVNYW5hZ2VyLm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9vbmxpbmVNYW5hZ2VyLm1qcz83M2U0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gJy4vc3Vic2NyaWJhYmxlLm1qcyc7XG5pbXBvcnQgeyBpc1NlcnZlciB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuY29uc3Qgb25saW5lRXZlbnRzID0gWydvbmxpbmUnLCAnb2ZmbGluZSddO1xuY2xhc3MgT25saW5lTWFuYWdlciBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLnNldHVwID0gb25PbmxpbmUgPT4ge1xuICAgICAgLy8gYWRkRXZlbnRMaXN0ZW5lciBkb2VzIG5vdCBleGlzdCBpbiBSZWFjdCBOYXRpdmUsIGJ1dCB3aW5kb3cgZG9lc1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1jb25kaXRpb25cbiAgICAgIGlmICghaXNTZXJ2ZXIgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgY29uc3QgbGlzdGVuZXIgPSAoKSA9PiBvbk9ubGluZSgpOyAvLyBMaXN0ZW4gdG8gb25saW5lXG5cblxuICAgICAgICBvbmxpbmVFdmVudHMuZm9yRWFjaChldmVudCA9PiB7XG4gICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIC8vIEJlIHN1cmUgdG8gdW5zdWJzY3JpYmUgaWYgYSBuZXcgaGFuZGxlciBpcyBzZXRcbiAgICAgICAgICBvbmxpbmVFdmVudHMuZm9yRWFjaChldmVudCA9PiB7XG4gICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfTtcbiAgfVxuXG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5jbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy5zZXR1cCk7XG4gICAgfVxuICB9XG5cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHZhciBfdGhpcyRjbGVhbnVwO1xuXG4gICAgICAoX3RoaXMkY2xlYW51cCA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAuY2FsbCh0aGlzKTtcbiAgICAgIHRoaXMuY2xlYW51cCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdmFyIF90aGlzJGNsZWFudXAyO1xuXG4gICAgdGhpcy5zZXR1cCA9IHNldHVwO1xuICAgIChfdGhpcyRjbGVhbnVwMiA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAyLmNhbGwodGhpcyk7XG4gICAgdGhpcy5jbGVhbnVwID0gc2V0dXAob25saW5lID0+IHtcbiAgICAgIGlmICh0eXBlb2Ygb25saW5lID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgdGhpcy5zZXRPbmxpbmUob25saW5lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMub25PbmxpbmUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNldE9ubGluZShvbmxpbmUpIHtcbiAgICB0aGlzLm9ubGluZSA9IG9ubGluZTtcblxuICAgIGlmIChvbmxpbmUpIHtcbiAgICAgIHRoaXMub25PbmxpbmUoKTtcbiAgICB9XG4gIH1cblxuICBvbk9ubGluZSgpIHtcbiAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKCh7XG4gICAgICBsaXN0ZW5lclxuICAgIH0pID0+IHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfSk7XG4gIH1cblxuICBpc09ubGluZSgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMub25saW5lID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybiB0aGlzLm9ubGluZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hdmlnYXRvciA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZW9mIG5hdmlnYXRvci5vbkxpbmUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmF2aWdhdG9yLm9uTGluZTtcbiAgfVxuXG59XG5jb25zdCBvbmxpbmVNYW5hZ2VyID0gbmV3IE9ubGluZU1hbmFnZXIoKTtcblxuZXhwb3J0IHsgT25saW5lTWFuYWdlciwgb25saW5lTWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b25saW5lTWFuYWdlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"S\": () => (/* binding */ QueryClient)\n});\n\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\nvar utils = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/logger.mjs\nvar logger = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\nvar notifyManager = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs\nvar retryer = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/removable.mjs\nvar removable = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/removable.mjs\");\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/query.mjs\n\n\n\n\n\n\n// CLASS\nclass Query extends removable/* Removable */.F {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || logger/* defaultLogger */._;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = (0,utils/* replaceData */.oE)(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(utils/* noop */.ZT).catch(utils/* noop */.ZT) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,utils/* timeUntilStale */.Kp)(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (!Array.isArray(this.options.queryKey)) {\n      if (false) {}\n    }\n\n    const abortController = (0,utils/* getAbortController */.G9)(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!((0,retryer/* isCancelledError */.DV)(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!(0,retryer/* isCancelledError */.DV)(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (false) {}\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = (0,retryer/* createRetryer */.Mz)({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (false) {}\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: (0,retryer/* canFetch */.Kw)(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if ((0,retryer/* isCancelledError */.DV)(error) && error.revert && this.revertState) {\n            return { ...this.revertState\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\n\n//# sourceMappingURL=query.mjs.map\n\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs\nvar subscribable = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryCache.mjs\n\n\n\n\n\n// CLASS\nclass QueryCache extends subscribable/* Subscribable */.l {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : (0,utils/* hashQueryKeyByOptions */.Rm)(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  find(arg1, arg2) {\n    const [filters] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => (0,utils/* matchQuery */._x)(filters, query));\n  }\n\n  findAll(arg1, arg2) {\n    const [filters] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => (0,utils/* matchQuery */._x)(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}\n\n\n//# sourceMappingURL=queryCache.mjs.map\n\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs\nvar lib_mutation = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs\");\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/mutationCache.mjs\n\n\n\n\n\n// CLASS\nclass MutationCache extends subscribable/* Subscribable */.l {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new lib_mutation/* Mutation */.m({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => (0,utils/* matchMutation */.X7)(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => (0,utils/* matchMutation */.X7)(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    var _this$resuming;\n\n    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {\n      const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n      return notifyManager/* notifyManager.batch */.V.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(utils/* noop */.ZT)), Promise.resolve()));\n    }).then(() => {\n      this.resuming = undefined;\n    });\n    return this.resuming;\n  }\n\n}\n\n\n//# sourceMappingURL=mutationCache.mjs.map\n\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs\nvar focusManager = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n// EXTERNAL MODULE: ../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\nvar onlineManager = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\");\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\nfunction infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject('Missing queryFn'));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n\n  return;\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n\n  return;\n}\n\n\n//# sourceMappingURL=infiniteQueryBehavior.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs\n\n\n\n\n\n\n\n\n\n// CLASS\nclass QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.logger = config.logger || logger/* defaultLogger */._;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n    this.mountCount = 0;\n\n    if (false) {}\n  }\n\n  mount() {\n    this.mountCount++;\n    if (this.mountCount !== 1) return;\n    this.unsubscribeFocus = focusManager/* focusManager.subscribe */.j.subscribe(() => {\n      if (focusManager/* focusManager.isFocused */.j.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager/* onlineManager.subscribe */.N.subscribe(() => {\n      if (onlineManager/* onlineManager.isOnline */.N.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    this.mountCount--;\n    if (this.mountCount !== 0) return;\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    this.unsubscribeFocus = undefined;\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n    this.unsubscribeOnline = undefined;\n  }\n\n  isFetching(arg1, arg2) {\n    const [filters] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  ensureQueryData(arg1, arg2, arg3) {\n    const parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);\n    const cachedData = this.getQueryData(parsedOptions.queryKey);\n    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);\n  }\n\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = (0,utils/* functionalUpdate */.SE)(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = (0,utils/* parseQueryArgs */._v)(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return notifyManager/* notifyManager.batch */.V.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  removeQueries(arg1, arg2) {\n    const [filters] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2);\n    const queryCache = this.queryCache;\n    notifyManager/* notifyManager.batch */.V.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return notifyManager/* notifyManager.batch */.V.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = notifyManager/* notifyManager.batch */.V.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n  }\n\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3);\n    return notifyManager/* notifyManager.batch */.V.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3);\n    const promises = notifyManager/* notifyManager.batch */.V.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(utils/* noop */.ZT);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(utils/* noop */.ZT);\n    }\n\n    return promise;\n  }\n\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n  }\n\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => (0,utils/* hashQueryKey */.yF)(queryKey) === (0,utils/* hashQueryKey */.yF)(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => (0,utils/* partialMatchKey */.to)(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (false) {}\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => (0,utils/* hashQueryKey */.yF)(mutationKey) === (0,utils/* hashQueryKey */.yF)(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => (0,utils/* partialMatchKey */.to)(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (false) {}\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = (0,utils/* hashQueryKeyByOptions */.Rm)(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}\n\n\n//# sourceMappingURL=queryClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/removable.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"F\": () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__/* .isValidTimeout */ .PN)(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : _utils_mjs__WEBPACK_IMPORTED_MODULE_0__/* .isServer */ .sk ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=removable.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9yZW1vdmFibGUubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3JlbW92YWJsZS5tanM/OWZjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1ZhbGlkVGltZW91dCwgaXNTZXJ2ZXIgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5cbmNsYXNzIFJlbW92YWJsZSB7XG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5jbGVhckdjVGltZW91dCgpO1xuICB9XG5cbiAgc2NoZWR1bGVHYygpIHtcbiAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG5cbiAgICBpZiAoaXNWYWxpZFRpbWVvdXQodGhpcy5jYWNoZVRpbWUpKSB7XG4gICAgICB0aGlzLmdjVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLm9wdGlvbmFsUmVtb3ZlKCk7XG4gICAgICB9LCB0aGlzLmNhY2hlVGltZSk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlQ2FjaGVUaW1lKG5ld0NhY2hlVGltZSkge1xuICAgIC8vIERlZmF1bHQgdG8gNSBtaW51dGVzIChJbmZpbml0eSBmb3Igc2VydmVyLXNpZGUpIGlmIG5vIGNhY2hlIHRpbWUgaXMgc2V0XG4gICAgdGhpcy5jYWNoZVRpbWUgPSBNYXRoLm1heCh0aGlzLmNhY2hlVGltZSB8fCAwLCBuZXdDYWNoZVRpbWUgIT0gbnVsbCA/IG5ld0NhY2hlVGltZSA6IGlzU2VydmVyID8gSW5maW5pdHkgOiA1ICogNjAgKiAxMDAwKTtcbiAgfVxuXG4gIGNsZWFyR2NUaW1lb3V0KCkge1xuICAgIGlmICh0aGlzLmdjVGltZW91dCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuZ2NUaW1lb3V0KTtcbiAgICAgIHRoaXMuZ2NUaW1lb3V0ID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuXG59XG5cbmV4cG9ydCB7IFJlbW92YWJsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZhYmxlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/removable.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DV\": () => (/* binding */ isCancelledError),\n/* harmony export */   \"Kw\": () => (/* binding */ canFetch),\n/* harmony export */   \"Mz\": () => (/* binding */ createRetryer)\n/* harmony export */ });\n/* unused harmony export CancelledError */\n/* harmony import */ var _focusManager_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n/* harmony import */ var _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__/* .onlineManager.isOnline */ .N.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !_focusManager_mjs__WEBPACK_IMPORTED_MODULE_1__/* .focusManager.isFocused */ .j.isFocused() || config.networkMode !== 'always' && !_onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__/* .onlineManager.isOnline */ .N.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__/* .sleep */ .Gh)(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\n\n//# sourceMappingURL=retryer.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9yZXRyeWVyLm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9yZXRyeWVyLm1qcz9kYzg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvY3VzTWFuYWdlciB9IGZyb20gJy4vZm9jdXNNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBvbmxpbmVNYW5hZ2VyIH0gZnJvbSAnLi9vbmxpbmVNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuZnVuY3Rpb24gZGVmYXVsdFJldHJ5RGVsYXkoZmFpbHVyZUNvdW50KSB7XG4gIHJldHVybiBNYXRoLm1pbigxMDAwICogMiAqKiBmYWlsdXJlQ291bnQsIDMwMDAwKTtcbn1cblxuZnVuY3Rpb24gY2FuRmV0Y2gobmV0d29ya01vZGUpIHtcbiAgcmV0dXJuIChuZXR3b3JrTW9kZSAhPSBudWxsID8gbmV0d29ya01vZGUgOiAnb25saW5lJykgPT09ICdvbmxpbmUnID8gb25saW5lTWFuYWdlci5pc09ubGluZSgpIDogdHJ1ZTtcbn1cbmNsYXNzIENhbmNlbGxlZEVycm9yIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMucmV2ZXJ0ID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5yZXZlcnQ7XG4gICAgdGhpcy5zaWxlbnQgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnNpbGVudDtcbiAgfVxuXG59XG5mdW5jdGlvbiBpc0NhbmNlbGxlZEVycm9yKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIENhbmNlbGxlZEVycm9yO1xufVxuZnVuY3Rpb24gY3JlYXRlUmV0cnllcihjb25maWcpIHtcbiAgbGV0IGlzUmV0cnlDYW5jZWxsZWQgPSBmYWxzZTtcbiAgbGV0IGZhaWx1cmVDb3VudCA9IDA7XG4gIGxldCBpc1Jlc29sdmVkID0gZmFsc2U7XG4gIGxldCBjb250aW51ZUZuO1xuICBsZXQgcHJvbWlzZVJlc29sdmU7XG4gIGxldCBwcm9taXNlUmVqZWN0O1xuICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoKG91dGVyUmVzb2x2ZSwgb3V0ZXJSZWplY3QpID0+IHtcbiAgICBwcm9taXNlUmVzb2x2ZSA9IG91dGVyUmVzb2x2ZTtcbiAgICBwcm9taXNlUmVqZWN0ID0gb3V0ZXJSZWplY3Q7XG4gIH0pO1xuXG4gIGNvbnN0IGNhbmNlbCA9IGNhbmNlbE9wdGlvbnMgPT4ge1xuICAgIGlmICghaXNSZXNvbHZlZCkge1xuICAgICAgcmVqZWN0KG5ldyBDYW5jZWxsZWRFcnJvcihjYW5jZWxPcHRpb25zKSk7XG4gICAgICBjb25maWcuYWJvcnQgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5hYm9ydCgpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBjYW5jZWxSZXRyeSA9ICgpID0+IHtcbiAgICBpc1JldHJ5Q2FuY2VsbGVkID0gdHJ1ZTtcbiAgfTtcblxuICBjb25zdCBjb250aW51ZVJldHJ5ID0gKCkgPT4ge1xuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSBmYWxzZTtcbiAgfTtcblxuICBjb25zdCBzaG91bGRQYXVzZSA9ICgpID0+ICFmb2N1c01hbmFnZXIuaXNGb2N1c2VkKCkgfHwgY29uZmlnLm5ldHdvcmtNb2RlICE9PSAnYWx3YXlzJyAmJiAhb25saW5lTWFuYWdlci5pc09ubGluZSgpO1xuXG4gIGNvbnN0IHJlc29sdmUgPSB2YWx1ZSA9PiB7XG4gICAgaWYgKCFpc1Jlc29sdmVkKSB7XG4gICAgICBpc1Jlc29sdmVkID0gdHJ1ZTtcbiAgICAgIGNvbmZpZy5vblN1Y2Nlc3MgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vblN1Y2Nlc3ModmFsdWUpO1xuICAgICAgY29udGludWVGbiA9PSBudWxsID8gdm9pZCAwIDogY29udGludWVGbigpO1xuICAgICAgcHJvbWlzZVJlc29sdmUodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCByZWplY3QgPSB2YWx1ZSA9PiB7XG4gICAgaWYgKCFpc1Jlc29sdmVkKSB7XG4gICAgICBpc1Jlc29sdmVkID0gdHJ1ZTtcbiAgICAgIGNvbmZpZy5vbkVycm9yID09IG51bGwgPyB2b2lkIDAgOiBjb25maWcub25FcnJvcih2YWx1ZSk7XG4gICAgICBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICBwcm9taXNlUmVqZWN0KHZhbHVlKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgcGF1c2UgPSAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGNvbnRpbnVlUmVzb2x2ZSA9PiB7XG4gICAgICBjb250aW51ZUZuID0gdmFsdWUgPT4ge1xuICAgICAgICBjb25zdCBjYW5Db250aW51ZSA9IGlzUmVzb2x2ZWQgfHwgIXNob3VsZFBhdXNlKCk7XG5cbiAgICAgICAgaWYgKGNhbkNvbnRpbnVlKSB7XG4gICAgICAgICAgY29udGludWVSZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjYW5Db250aW51ZTtcbiAgICAgIH07XG5cbiAgICAgIGNvbmZpZy5vblBhdXNlID09IG51bGwgPyB2b2lkIDAgOiBjb25maWcub25QYXVzZSgpO1xuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgY29udGludWVGbiA9IHVuZGVmaW5lZDtcblxuICAgICAgaWYgKCFpc1Jlc29sdmVkKSB7XG4gICAgICAgIGNvbmZpZy5vbkNvbnRpbnVlID09IG51bGwgPyB2b2lkIDAgOiBjb25maWcub25Db250aW51ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9OyAvLyBDcmVhdGUgbG9vcCBmdW5jdGlvblxuXG5cbiAgY29uc3QgcnVuID0gKCkgPT4ge1xuICAgIC8vIERvIG5vdGhpbmcgaWYgYWxyZWFkeSByZXNvbHZlZFxuICAgIGlmIChpc1Jlc29sdmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IHByb21pc2VPclZhbHVlOyAvLyBFeGVjdXRlIHF1ZXJ5XG5cbiAgICB0cnkge1xuICAgICAgcHJvbWlzZU9yVmFsdWUgPSBjb25maWcuZm4oKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcHJvbWlzZU9yVmFsdWUgPSBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuXG4gICAgUHJvbWlzZS5yZXNvbHZlKHByb21pc2VPclZhbHVlKS50aGVuKHJlc29sdmUpLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIHZhciBfY29uZmlnJHJldHJ5LCBfY29uZmlnJHJldHJ5RGVsYXk7XG5cbiAgICAgIC8vIFN0b3AgaWYgdGhlIGZldGNoIGlzIGFscmVhZHkgcmVzb2x2ZWRcbiAgICAgIGlmIChpc1Jlc29sdmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gLy8gRG8gd2UgbmVlZCB0byByZXRyeSB0aGUgcmVxdWVzdD9cblxuXG4gICAgICBjb25zdCByZXRyeSA9IChfY29uZmlnJHJldHJ5ID0gY29uZmlnLnJldHJ5KSAhPSBudWxsID8gX2NvbmZpZyRyZXRyeSA6IDM7XG4gICAgICBjb25zdCByZXRyeURlbGF5ID0gKF9jb25maWckcmV0cnlEZWxheSA9IGNvbmZpZy5yZXRyeURlbGF5KSAhPSBudWxsID8gX2NvbmZpZyRyZXRyeURlbGF5IDogZGVmYXVsdFJldHJ5RGVsYXk7XG4gICAgICBjb25zdCBkZWxheSA9IHR5cGVvZiByZXRyeURlbGF5ID09PSAnZnVuY3Rpb24nID8gcmV0cnlEZWxheShmYWlsdXJlQ291bnQsIGVycm9yKSA6IHJldHJ5RGVsYXk7XG4gICAgICBjb25zdCBzaG91bGRSZXRyeSA9IHJldHJ5ID09PSB0cnVlIHx8IHR5cGVvZiByZXRyeSA9PT0gJ251bWJlcicgJiYgZmFpbHVyZUNvdW50IDwgcmV0cnkgfHwgdHlwZW9mIHJldHJ5ID09PSAnZnVuY3Rpb24nICYmIHJldHJ5KGZhaWx1cmVDb3VudCwgZXJyb3IpO1xuXG4gICAgICBpZiAoaXNSZXRyeUNhbmNlbGxlZCB8fCAhc2hvdWxkUmV0cnkpIHtcbiAgICAgICAgLy8gV2UgYXJlIGRvbmUgaWYgdGhlIHF1ZXJ5IGRvZXMgbm90IG5lZWQgdG8gYmUgcmV0cmllZFxuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZhaWx1cmVDb3VudCsrOyAvLyBOb3RpZnkgb24gZmFpbFxuXG4gICAgICBjb25maWcub25GYWlsID09IG51bGwgPyB2b2lkIDAgOiBjb25maWcub25GYWlsKGZhaWx1cmVDb3VudCwgZXJyb3IpOyAvLyBEZWxheVxuXG4gICAgICBzbGVlcChkZWxheSkgLy8gUGF1c2UgaWYgdGhlIGRvY3VtZW50IGlzIG5vdCB2aXNpYmxlIG9yIHdoZW4gdGhlIGRldmljZSBpcyBvZmZsaW5lXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGlmIChzaG91bGRQYXVzZSgpKSB7XG4gICAgICAgICAgcmV0dXJuIHBhdXNlKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm47XG4gICAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKGlzUmV0cnlDYW5jZWxsZWQpIHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJ1bigpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTsgLy8gU3RhcnQgbG9vcFxuXG5cbiAgaWYgKGNhbkZldGNoKGNvbmZpZy5uZXR3b3JrTW9kZSkpIHtcbiAgICBydW4oKTtcbiAgfSBlbHNlIHtcbiAgICBwYXVzZSgpLnRoZW4ocnVuKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcHJvbWlzZSxcbiAgICBjYW5jZWwsXG4gICAgY29udGludWU6ICgpID0+IHtcbiAgICAgIGNvbnN0IGRpZENvbnRpbnVlID0gY29udGludWVGbiA9PSBudWxsID8gdm9pZCAwIDogY29udGludWVGbigpO1xuICAgICAgcmV0dXJuIGRpZENvbnRpbnVlID8gcHJvbWlzZSA6IFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH0sXG4gICAgY2FuY2VsUmV0cnksXG4gICAgY29udGludWVSZXRyeVxuICB9O1xufVxuXG5leHBvcnQgeyBDYW5jZWxsZWRFcnJvciwgY2FuRmV0Y2gsIGNyZWF0ZVJldHJ5ZXIsIGlzQ2FuY2VsbGVkRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJldHJ5ZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"l\": () => (/* binding */ Subscribable)\n/* harmony export */ });\nclass Subscribable {\n  constructor() {\n    this.listeners = new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    const identity = {\n      listener\n    };\n    this.listeners.add(identity);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(identity);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\n\n//# sourceMappingURL=subscribable.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9zdWJzY3JpYmFibGUubWpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3N1YnNjcmliYWJsZS5tanM/MmJjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmxpc3RlbmVycyA9IG5ldyBTZXQoKTtcbiAgICB0aGlzLnN1YnNjcmliZSA9IHRoaXMuc3Vic2NyaWJlLmJpbmQodGhpcyk7XG4gIH1cblxuICBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBjb25zdCBpZGVudGl0eSA9IHtcbiAgICAgIGxpc3RlbmVyXG4gICAgfTtcbiAgICB0aGlzLmxpc3RlbmVycy5hZGQoaWRlbnRpdHkpO1xuICAgIHRoaXMub25TdWJzY3JpYmUoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZGVsZXRlKGlkZW50aXR5KTtcbiAgICAgIHRoaXMub25VbnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH1cblxuICBoYXNMaXN0ZW5lcnMoKSB7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnNpemUgPiAwO1xuICB9XG5cbiAgb25TdWJzY3JpYmUoKSB7Ly8gRG8gbm90aGluZ1xuICB9XG5cbiAgb25VbnN1YnNjcmliZSgpIHsvLyBEbyBub3RoaW5nXG4gIH1cblxufVxuXG5leHBvcnQgeyBTdWJzY3JpYmFibGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YnNjcmliYWJsZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs\n");

/***/ }),

/***/ "../../../node_modules/@tanstack/query-core/build/lib/utils.mjs":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"A4\": () => (/* binding */ scheduleMicrotask),\n/* harmony export */   \"G9\": () => (/* binding */ getAbortController),\n/* harmony export */   \"Gh\": () => (/* binding */ sleep),\n/* harmony export */   \"I6\": () => (/* binding */ parseFilterArgs),\n/* harmony export */   \"Kp\": () => (/* binding */ timeUntilStale),\n/* harmony export */   \"PN\": () => (/* binding */ isValidTimeout),\n/* harmony export */   \"Rm\": () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   \"SE\": () => (/* binding */ functionalUpdate),\n/* harmony export */   \"X7\": () => (/* binding */ matchMutation),\n/* harmony export */   \"ZT\": () => (/* binding */ noop),\n/* harmony export */   \"_v\": () => (/* binding */ parseQueryArgs),\n/* harmony export */   \"_x\": () => (/* binding */ matchQuery),\n/* harmony export */   \"oE\": () => (/* binding */ replaceData),\n/* harmony export */   \"sk\": () => (/* binding */ isServer),\n/* harmony export */   \"to\": () => (/* binding */ partialMatchKey),\n/* harmony export */   \"yF\": () => (/* binding */ hashQueryKey)\n/* harmony export */ });\n/* unused harmony exports difference, isError, isPlainArray, isPlainObject, isQueryKey, parseMutationArgs, parseMutationFilterArgs, partialDeepEqual, replaceAt, replaceEqualDeep, shallowEqualObjects */\n// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi91dGlscy5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3V0aWxzLm1qcz8wODg5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRZUEVTXG4vLyBVVElMU1xuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyB8fCAnRGVubycgaW4gd2luZG93O1xuZnVuY3Rpb24gbm9vcCgpIHtcbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGZ1bmN0aW9uYWxVcGRhdGUodXBkYXRlciwgaW5wdXQpIHtcbiAgcmV0dXJuIHR5cGVvZiB1cGRhdGVyID09PSAnZnVuY3Rpb24nID8gdXBkYXRlcihpbnB1dCkgOiB1cGRhdGVyO1xufVxuZnVuY3Rpb24gaXNWYWxpZFRpbWVvdXQodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgPj0gMCAmJiB2YWx1ZSAhPT0gSW5maW5pdHk7XG59XG5mdW5jdGlvbiBkaWZmZXJlbmNlKGFycmF5MSwgYXJyYXkyKSB7XG4gIHJldHVybiBhcnJheTEuZmlsdGVyKHggPT4gIWFycmF5Mi5pbmNsdWRlcyh4KSk7XG59XG5mdW5jdGlvbiByZXBsYWNlQXQoYXJyYXksIGluZGV4LCB2YWx1ZSkge1xuICBjb25zdCBjb3B5ID0gYXJyYXkuc2xpY2UoMCk7XG4gIGNvcHlbaW5kZXhdID0gdmFsdWU7XG4gIHJldHVybiBjb3B5O1xufVxuZnVuY3Rpb24gdGltZVVudGlsU3RhbGUodXBkYXRlZEF0LCBzdGFsZVRpbWUpIHtcbiAgcmV0dXJuIE1hdGgubWF4KHVwZGF0ZWRBdCArIChzdGFsZVRpbWUgfHwgMCkgLSBEYXRlLm5vdygpLCAwKTtcbn1cbmZ1bmN0aW9uIHBhcnNlUXVlcnlBcmdzKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgaWYgKCFpc1F1ZXJ5S2V5KGFyZzEpKSB7XG4gICAgcmV0dXJuIGFyZzE7XG4gIH1cblxuICBpZiAodHlwZW9mIGFyZzIgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4geyAuLi5hcmczLFxuICAgICAgcXVlcnlLZXk6IGFyZzEsXG4gICAgICBxdWVyeUZuOiBhcmcyXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7IC4uLmFyZzIsXG4gICAgcXVlcnlLZXk6IGFyZzFcbiAgfTtcbn1cbmZ1bmN0aW9uIHBhcnNlTXV0YXRpb25BcmdzKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgaWYgKGlzUXVlcnlLZXkoYXJnMSkpIHtcbiAgICBpZiAodHlwZW9mIGFyZzIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB7IC4uLmFyZzMsXG4gICAgICAgIG11dGF0aW9uS2V5OiBhcmcxLFxuICAgICAgICBtdXRhdGlvbkZuOiBhcmcyXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB7IC4uLmFyZzIsXG4gICAgICBtdXRhdGlvbktleTogYXJnMVxuICAgIH07XG4gIH1cblxuICBpZiAodHlwZW9mIGFyZzEgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4geyAuLi5hcmcyLFxuICAgICAgbXV0YXRpb25GbjogYXJnMVxuICAgIH07XG4gIH1cblxuICByZXR1cm4geyAuLi5hcmcxXG4gIH07XG59XG5mdW5jdGlvbiBwYXJzZUZpbHRlckFyZ3MoYXJnMSwgYXJnMiwgYXJnMykge1xuICByZXR1cm4gaXNRdWVyeUtleShhcmcxKSA/IFt7IC4uLmFyZzIsXG4gICAgcXVlcnlLZXk6IGFyZzFcbiAgfSwgYXJnM10gOiBbYXJnMSB8fCB7fSwgYXJnMl07XG59XG5mdW5jdGlvbiBwYXJzZU11dGF0aW9uRmlsdGVyQXJncyhhcmcxLCBhcmcyLCBhcmczKSB7XG4gIHJldHVybiBpc1F1ZXJ5S2V5KGFyZzEpID8gW3sgLi4uYXJnMixcbiAgICBtdXRhdGlvbktleTogYXJnMVxuICB9LCBhcmczXSA6IFthcmcxIHx8IHt9LCBhcmcyXTtcbn1cbmZ1bmN0aW9uIG1hdGNoUXVlcnkoZmlsdGVycywgcXVlcnkpIHtcbiAgY29uc3Qge1xuICAgIHR5cGUgPSAnYWxsJyxcbiAgICBleGFjdCxcbiAgICBmZXRjaFN0YXR1cyxcbiAgICBwcmVkaWNhdGUsXG4gICAgcXVlcnlLZXksXG4gICAgc3RhbGVcbiAgfSA9IGZpbHRlcnM7XG5cbiAgaWYgKGlzUXVlcnlLZXkocXVlcnlLZXkpKSB7XG4gICAgaWYgKGV4YWN0KSB7XG4gICAgICBpZiAocXVlcnkucXVlcnlIYXNoICE9PSBoYXNoUXVlcnlLZXlCeU9wdGlvbnMocXVlcnlLZXksIHF1ZXJ5Lm9wdGlvbnMpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFwYXJ0aWFsTWF0Y2hLZXkocXVlcnkucXVlcnlLZXksIHF1ZXJ5S2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlICE9PSAnYWxsJykge1xuICAgIGNvbnN0IGlzQWN0aXZlID0gcXVlcnkuaXNBY3RpdmUoKTtcblxuICAgIGlmICh0eXBlID09PSAnYWN0aXZlJyAmJiAhaXNBY3RpdmUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gJ2luYWN0aXZlJyAmJiBpc0FjdGl2ZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2Ygc3RhbGUgPT09ICdib29sZWFuJyAmJiBxdWVyeS5pc1N0YWxlKCkgIT09IHN0YWxlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBmZXRjaFN0YXR1cyAhPT0gJ3VuZGVmaW5lZCcgJiYgZmV0Y2hTdGF0dXMgIT09IHF1ZXJ5LnN0YXRlLmZldGNoU3RhdHVzKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHByZWRpY2F0ZSAmJiAhcHJlZGljYXRlKHF1ZXJ5KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gbWF0Y2hNdXRhdGlvbihmaWx0ZXJzLCBtdXRhdGlvbikge1xuICBjb25zdCB7XG4gICAgZXhhY3QsXG4gICAgZmV0Y2hpbmcsXG4gICAgcHJlZGljYXRlLFxuICAgIG11dGF0aW9uS2V5XG4gIH0gPSBmaWx0ZXJzO1xuXG4gIGlmIChpc1F1ZXJ5S2V5KG11dGF0aW9uS2V5KSkge1xuICAgIGlmICghbXV0YXRpb24ub3B0aW9ucy5tdXRhdGlvbktleSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChleGFjdCkge1xuICAgICAgaWYgKGhhc2hRdWVyeUtleShtdXRhdGlvbi5vcHRpb25zLm11dGF0aW9uS2V5KSAhPT0gaGFzaFF1ZXJ5S2V5KG11dGF0aW9uS2V5KSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghcGFydGlhbE1hdGNoS2V5KG11dGF0aW9uLm9wdGlvbnMubXV0YXRpb25LZXksIG11dGF0aW9uS2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2YgZmV0Y2hpbmcgPT09ICdib29sZWFuJyAmJiBtdXRhdGlvbi5zdGF0ZS5zdGF0dXMgPT09ICdsb2FkaW5nJyAhPT0gZmV0Y2hpbmcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAocHJlZGljYXRlICYmICFwcmVkaWNhdGUobXV0YXRpb24pKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBoYXNoUXVlcnlLZXlCeU9wdGlvbnMocXVlcnlLZXksIG9wdGlvbnMpIHtcbiAgY29uc3QgaGFzaEZuID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucXVlcnlLZXlIYXNoRm4pIHx8IGhhc2hRdWVyeUtleTtcbiAgcmV0dXJuIGhhc2hGbihxdWVyeUtleSk7XG59XG4vKipcbiAqIERlZmF1bHQgcXVlcnkga2V5cyBoYXNoIGZ1bmN0aW9uLlxuICogSGFzaGVzIHRoZSB2YWx1ZSBpbnRvIGEgc3RhYmxlIGhhc2guXG4gKi9cblxuZnVuY3Rpb24gaGFzaFF1ZXJ5S2V5KHF1ZXJ5S2V5KSB7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeShxdWVyeUtleSwgKF8sIHZhbCkgPT4gaXNQbGFpbk9iamVjdCh2YWwpID8gT2JqZWN0LmtleXModmFsKS5zb3J0KCkucmVkdWNlKChyZXN1bHQsIGtleSkgPT4ge1xuICAgIHJlc3VsdFtrZXldID0gdmFsW2tleV07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSwge30pIDogdmFsKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGtleSBgYmAgcGFydGlhbGx5IG1hdGNoZXMgd2l0aCBrZXkgYGFgLlxuICovXG5cbmZ1bmN0aW9uIHBhcnRpYWxNYXRjaEtleShhLCBiKSB7XG4gIHJldHVybiBwYXJ0aWFsRGVlcEVxdWFsKGEsIGIpO1xufVxuLyoqXG4gKiBDaGVja3MgaWYgYGJgIHBhcnRpYWxseSBtYXRjaGVzIHdpdGggYGFgLlxuICovXG5cbmZ1bmN0aW9uIHBhcnRpYWxEZWVwRXF1YWwoYSwgYikge1xuICBpZiAoYSA9PT0gYikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhICE9PSB0eXBlb2YgYikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChhICYmIGIgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnICYmIHR5cGVvZiBiID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiAhT2JqZWN0LmtleXMoYikuc29tZShrZXkgPT4gIXBhcnRpYWxEZWVwRXF1YWwoYVtrZXldLCBiW2tleV0pKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIGBhYCBpZiBgYmAgaXMgZGVlcGx5IGVxdWFsLlxuICogSWYgbm90LCBpdCB3aWxsIHJlcGxhY2UgYW55IGRlZXBseSBlcXVhbCBjaGlsZHJlbiBvZiBgYmAgd2l0aCB0aG9zZSBvZiBgYWAuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIGZvciBzdHJ1Y3R1cmFsIHNoYXJpbmcgYmV0d2VlbiBKU09OIHZhbHVlcyBmb3IgZXhhbXBsZS5cbiAqL1xuXG5mdW5jdGlvbiByZXBsYWNlRXF1YWxEZWVwKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIGNvbnN0IGFycmF5ID0gaXNQbGFpbkFycmF5KGEpICYmIGlzUGxhaW5BcnJheShiKTtcblxuICBpZiAoYXJyYXkgfHwgaXNQbGFpbk9iamVjdChhKSAmJiBpc1BsYWluT2JqZWN0KGIpKSB7XG4gICAgY29uc3QgYVNpemUgPSBhcnJheSA/IGEubGVuZ3RoIDogT2JqZWN0LmtleXMoYSkubGVuZ3RoO1xuICAgIGNvbnN0IGJJdGVtcyA9IGFycmF5ID8gYiA6IE9iamVjdC5rZXlzKGIpO1xuICAgIGNvbnN0IGJTaXplID0gYkl0ZW1zLmxlbmd0aDtcbiAgICBjb25zdCBjb3B5ID0gYXJyYXkgPyBbXSA6IHt9O1xuICAgIGxldCBlcXVhbEl0ZW1zID0gMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYlNpemU7IGkrKykge1xuICAgICAgY29uc3Qga2V5ID0gYXJyYXkgPyBpIDogYkl0ZW1zW2ldO1xuICAgICAgY29weVtrZXldID0gcmVwbGFjZUVxdWFsRGVlcChhW2tleV0sIGJba2V5XSk7XG5cbiAgICAgIGlmIChjb3B5W2tleV0gPT09IGFba2V5XSkge1xuICAgICAgICBlcXVhbEl0ZW1zKys7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGFTaXplID09PSBiU2l6ZSAmJiBlcXVhbEl0ZW1zID09PSBhU2l6ZSA/IGEgOiBjb3B5O1xuICB9XG5cbiAgcmV0dXJuIGI7XG59XG4vKipcbiAqIFNoYWxsb3cgY29tcGFyZSBvYmplY3RzLiBPbmx5IHdvcmtzIHdpdGggb2JqZWN0cyB0aGF0IGFsd2F5cyBoYXZlIHRoZSBzYW1lIHByb3BlcnRpZXMuXG4gKi9cblxuZnVuY3Rpb24gc2hhbGxvd0VxdWFsT2JqZWN0cyhhLCBiKSB7XG4gIGlmIChhICYmICFiIHx8IGIgJiYgIWEpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKGNvbnN0IGtleSBpbiBhKSB7XG4gICAgaWYgKGFba2V5XSAhPT0gYltrZXldKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBpc1BsYWluQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gT2JqZWN0LmtleXModmFsdWUpLmxlbmd0aDtcbn0gLy8gQ29waWVkIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9qb25zY2hsaW5rZXJ0L2lzLXBsYWluLW9iamVjdFxuXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KG8pIHtcbiAgaWYgKCFoYXNPYmplY3RQcm90b3R5cGUobykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gLy8gSWYgaGFzIG1vZGlmaWVkIGNvbnN0cnVjdG9yXG5cblxuICBjb25zdCBjdG9yID0gby5jb25zdHJ1Y3RvcjtcblxuICBpZiAodHlwZW9mIGN0b3IgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gLy8gSWYgaGFzIG1vZGlmaWVkIHByb3RvdHlwZVxuXG5cbiAgY29uc3QgcHJvdCA9IGN0b3IucHJvdG90eXBlO1xuXG4gIGlmICghaGFzT2JqZWN0UHJvdG90eXBlKHByb3QpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IC8vIElmIGNvbnN0cnVjdG9yIGRvZXMgbm90IGhhdmUgYW4gT2JqZWN0LXNwZWNpZmljIG1ldGhvZFxuXG5cbiAgaWYgKCFwcm90Lmhhc093blByb3BlcnR5KCdpc1Byb3RvdHlwZU9mJykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gLy8gTW9zdCBsaWtlbHkgYSBwbGFpbiBPYmplY3RcblxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBoYXNPYmplY3RQcm90b3R5cGUobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pID09PSAnW29iamVjdCBPYmplY3RdJztcbn1cblxuZnVuY3Rpb24gaXNRdWVyeUtleSh2YWx1ZSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG5mdW5jdGlvbiBpc0Vycm9yKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIEVycm9yO1xufVxuZnVuY3Rpb24gc2xlZXAodGltZW91dCkge1xuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgc2V0VGltZW91dChyZXNvbHZlLCB0aW1lb3V0KTtcbiAgfSk7XG59XG4vKipcbiAqIFNjaGVkdWxlcyBhIG1pY3JvdGFzay5cbiAqIFRoaXMgY2FuIGJlIHVzZWZ1bCB0byBzY2hlZHVsZSBzdGF0ZSB1cGRhdGVzIGFmdGVyIHJlbmRlcmluZy5cbiAqL1xuXG5mdW5jdGlvbiBzY2hlZHVsZU1pY3JvdGFzayhjYWxsYmFjaykge1xuICBzbGVlcCgwKS50aGVuKGNhbGxiYWNrKTtcbn1cbmZ1bmN0aW9uIGdldEFib3J0Q29udHJvbGxlcigpIHtcbiAgaWYgKHR5cGVvZiBBYm9ydENvbnRyb2xsZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICB9XG5cbiAgcmV0dXJuO1xufVxuZnVuY3Rpb24gcmVwbGFjZURhdGEocHJldkRhdGEsIGRhdGEsIG9wdGlvbnMpIHtcbiAgLy8gVXNlIHByZXYgZGF0YSBpZiBhbiBpc0RhdGFFcXVhbCBmdW5jdGlvbiBpcyBkZWZpbmVkIGFuZCByZXR1cm5zIGB0cnVlYFxuICBpZiAob3B0aW9ucy5pc0RhdGFFcXVhbCAhPSBudWxsICYmIG9wdGlvbnMuaXNEYXRhRXF1YWwocHJldkRhdGEsIGRhdGEpKSB7XG4gICAgcmV0dXJuIHByZXZEYXRhO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLnN0cnVjdHVyYWxTaGFyaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMuc3RydWN0dXJhbFNoYXJpbmcocHJldkRhdGEsIGRhdGEpO1xuICB9IGVsc2UgaWYgKG9wdGlvbnMuc3RydWN0dXJhbFNoYXJpbmcgIT09IGZhbHNlKSB7XG4gICAgLy8gU3RydWN0dXJhbGx5IHNoYXJlIGRhdGEgYmV0d2VlbiBwcmV2IGFuZCBuZXcgZGF0YSBpZiBuZWVkZWRcbiAgICByZXR1cm4gcmVwbGFjZUVxdWFsRGVlcChwcmV2RGF0YSwgZGF0YSk7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxuZXhwb3J0IHsgZGlmZmVyZW5jZSwgZnVuY3Rpb25hbFVwZGF0ZSwgZ2V0QWJvcnRDb250cm9sbGVyLCBoYXNoUXVlcnlLZXksIGhhc2hRdWVyeUtleUJ5T3B0aW9ucywgaXNFcnJvciwgaXNQbGFpbkFycmF5LCBpc1BsYWluT2JqZWN0LCBpc1F1ZXJ5S2V5LCBpc1NlcnZlciwgaXNWYWxpZFRpbWVvdXQsIG1hdGNoTXV0YXRpb24sIG1hdGNoUXVlcnksIG5vb3AsIHBhcnNlRmlsdGVyQXJncywgcGFyc2VNdXRhdGlvbkFyZ3MsIHBhcnNlTXV0YXRpb25GaWx0ZXJBcmdzLCBwYXJzZVF1ZXJ5QXJncywgcGFydGlhbERlZXBFcXVhbCwgcGFydGlhbE1hdGNoS2V5LCByZXBsYWNlQXQsIHJlcGxhY2VEYXRhLCByZXBsYWNlRXF1YWxEZWVwLCBzY2hlZHVsZU1pY3JvdGFzaywgc2hhbGxvd0VxdWFsT2JqZWN0cywgc2xlZXAsIHRpbWVVbnRpbFN0YWxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./pages/on-ramp/index.ts");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});