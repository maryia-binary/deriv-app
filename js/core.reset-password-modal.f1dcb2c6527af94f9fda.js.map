{"version":3,"file":"js/core.reset-password-modal.f1dcb2c6527af94f9fda.js","mappings":"wtCAOA,IAAMA,EAAc,SAAH,GACb,MACS,qBAFgB,EAANC,OAIP,gBAAC,EAAAC,KAAI,CAACC,GAAG,IAAIC,OAAO,OAAOC,UAAU,2BACjC,gBAAC,EAAAC,SAAQ,CAACC,kBAAkB,oCAI7B,EAEnB,EAkCA,MClDA,GDkDeC,EAAAA,EAAAA,KAAQ,gBAAGC,EAAM,EAANA,OAAQC,EAAE,EAAFA,GAAE,MAAQ,CACxCC,WAAYD,EAAGC,WACfC,UAAWF,EAAGE,UACdC,WAAYH,EAAGG,WACfC,aAAcL,EAAOK,aACrBC,OAAQN,EAAOM,OAClB,GAND,EAhC6B,SAAH,GAAoE,IAA9DD,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAAQJ,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAU,EAAVA,WACnB,IAArBG,EAAAA,UAAe,GAAM,GAA/CC,EAAU,KAAEC,EAAU,KAEvBjB,EADa,IAAIkB,iBAAgBC,EAAAA,EAAAA,eAAcC,QAC3BC,IAAI,UAExBC,EAAY,WACdL,GAAW,GAC2C,SAAlDM,OAAOC,aAAaC,QAAQ,oBAC5BC,EAAAA,EAAAA,kBAAgB,GAAOC,EAAAA,EAAAA,gBAAe,EAAO,IAErD,EAUA,OARAZ,EAAAA,WAAgB,WACRF,EACAC,IAASc,MAAK,kBAAMN,GAAW,IAE/BA,GAER,GAAG,CAACT,EAAcC,IAGd,gBAAC,EAAAe,OAAM,CAACb,WAAYA,EAAYN,WAAYA,EAAYC,UAAWA,EAAWC,WAAYA,GACtF,uBAAKR,UAAU,sCACX,gBAACL,EAAW,CAACC,OAAQA,IACrB,gBAAC,EAAAC,KAAI,CAAC6B,MAAM,SAAS5B,GAAG,IAAI6B,KAAK,MAAM3B,UAAU,2BAC7C,gBAAC,EAAAC,SAAQ,CAACC,kBAAkB,kDAKhD,G","sources":["webpack:///./App/Containers/RedirectToLoginModal/redirect-to-login-modal.jsx","webpack:///./App/Containers/RedirectToLoginModal/index.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { connect } from 'Stores/connect';\nimport { Dialog, Text } from '@deriv/components';\nimport { Localize, getLanguage } from '@deriv/translations';\nimport { redirectToLogin } from '@deriv/shared';\n\nconst ModalHeader = ({ header }) => {\n    switch (header) {\n        case 'password_changed':\n            return (\n                <Text as='p' weight='bold' className='reset-password__heading'>\n                    <Localize i18n_default_text='Your password has been changed' />\n                </Text>\n            );\n        default:\n            return '';\n    }\n};\n\nconst RedirectToLoginModal = ({ is_logged_in, logout, disableApp, enableApp, is_loading }) => {\n    const [is_visible, setVisible] = React.useState(false);\n    const url_params = new URLSearchParams(useLocation().search);\n    const header = url_params.get('header');\n\n    const showModal = () => {\n        setVisible(true);\n        if (window.localStorage.getItem('is_redirecting') !== 'true') {\n            redirectToLogin(false, getLanguage(), false, 3000);\n        }\n    };\n\n    React.useEffect(() => {\n        if (is_logged_in) {\n            logout().then(() => showModal());\n        } else {\n            showModal();\n        }\n    }, [is_logged_in, logout]);\n\n    return (\n        <Dialog is_visible={is_visible} disableApp={disableApp} enableApp={enableApp} is_loading={is_loading}>\n            <div className='reset-password__password-selection'>\n                <ModalHeader header={header} />\n                <Text align='center' as='p' size='xxs' className='reset-password__subtext'>\n                    <Localize i18n_default_text='We will now redirect you to the login page.' />\n                </Text>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default connect(({ client, ui }) => ({\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_loading: ui.is_loading,\n    is_logged_in: client.is_logged_in,\n    logout: client.logout,\n}))(RedirectToLoginModal);\n","import RedirectToLoginModal from './redirect-to-login-modal.jsx';\n\nexport default RedirectToLoginModal;\n"],"names":["ModalHeader","header","Text","as","weight","className","Localize","i18n_default_text","connect","client","ui","disableApp","enableApp","is_loading","is_logged_in","logout","React","is_visible","setVisible","URLSearchParams","useLocation","search","get","showModal","window","localStorage","getItem","redirectToLogin","getLanguage","then","Dialog","align","size"],"sourceRoot":""}