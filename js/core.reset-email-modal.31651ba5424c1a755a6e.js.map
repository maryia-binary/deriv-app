{"version":3,"file":"js/core.reset-email-modal.31651ba5424c1a755a6e.js","mappings":"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","sources":["webpack:///../../account/dist/account/js/sent-email-modal.js","webpack:///./App/Containers/ConfirmEmailModal/confirm-email-modal.jsx","webpack:///./App/Containers/ResetEmailModal/reset-email-modal.jsx","webpack:///./App/Containers/ResetEmailModal/index.js"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"@deriv/components\",\"@deriv/shared\",\"@deriv/translations\",\"react\"],t):\"object\"==typeof exports?exports[\"@deriv/account\"]=t(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):e[\"@deriv/account\"]=t(e[\"@deriv/components\"],e[\"@deriv/shared\"],e[\"@deriv/translations\"],e.react)}(self,((e,t,a,i)=>(()=>{\"use strict\";var l={\"@deriv/components\":t=>{t.exports=e},\"@deriv/shared\":e=>{e.exports=t},\"@deriv/translations\":e=>{e.exports=a},react:e=>{e.exports=i}},o={};function n(e){var t=o[e];if(void 0!==t)return t.exports;var a=o[e]={exports:{}};return l[e](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r={};return(()=>{n.d(r,{default:()=>o});var e=n(\"react\"),t=n.n(e),a=n(\"@deriv/translations\"),i=n(\"@deriv/components\"),l=n(\"@deriv/shared\");const o=function(e){var o=e.identifier_title,n=e.is_modal_when_mobile,r=void 0!==n&&n,s=e.is_open,c=e.has_live_chat,d=void 0!==c&&c,m=e.onClickSendEmail,p=e.onClose,_=d?t().createElement(a.Localize,{i18n_default_text:\"Still didn't get the email? Please contact us via <0>live chat.</0>\",components:[t().createElement(\"span\",{className:\"send-email-template__footer-live-chat\",key:0,onClick:function(){var e;p(),null===(e=window.LiveChatWidget)||void 0===e||e.call(\"maximize\")}},t().createElement(i.Popover,{className:\"send-email-template__footer-live-chat__link\",classNameBubble:\"help-centre__tooltip\",alignment:\"top\",message:(0,a.localize)(\"Live chat\"),zIndex:\"9999\"}))]}):null,u=t().createElement(i.SendEmailTemplate,{className:\"sent-email\",subtitle:function(){var e=\"\";switch(o){case l.CFD_PLATFORMS.DXTRADE:e=t().createElement(a.Localize,{i18n_default_text:\"Please click on the link in the email to change your <0>{{platform_name_dxtrade}}</0> password.\",components:[t().createElement(\"span\",{className:\"send-email-template__subtitle-platform\",key:0})],values:{platform_name_dxtrade:(0,l.getPlatformSettings)(\"dxtrade\").name}});break;case l.CFD_PLATFORMS.MT5:e=(0,a.localize)(\"Please click on the link in the email to change your Deriv MT5 password.\");break;case\"Google\":case\"Facebook\":e=(0,a.localize)(\"Check your {{ identifier_title }} account email and click the link in the email to proceed.\",{identifier_title:o});break;case\"Change_Email\":e=(0,a.localize)(\"Check your email and click the link in the email to proceed.\");break;default:e=(0,a.localize)(\"Please click on the link in the email to reset your password.\")}return e}(),title:(0,a.localize)(\"Weâ€™ve sent you an email\"),lbl_no_receive:(0,a.localize)(\"Didn't receive the email?\"),txt_resend:(0,a.localize)(\"Resend email\"),txt_resend_in:(0,a.localize)(\"Resend email in\"),onClickSendEmail:m,live_chat:_},[{key:\"email_spam\",icon:\"IcEmailSpam\",content:(0,a.localize)(\"The email is in your spam folder (Sometimes things get lost there).\")},{key:\"wrong_email\",icon:\"IcEmail\",content:(0,a.localize)(\"You accidentally gave us another email address (Usually a work or a personal one instead of the one you meant).\")},{key:\"wrong_typo\",icon:\"IcEmailTypo\",content:(0,a.localize)(\"The email address you entered had a mistake or typo (happens to the best of us).\")},{key:\"email_firewall\",icon:\"IcEmailFirewall\",content:(0,a.localize)(\"We canâ€™t deliver the email to this address (Usually because of firewalls or filtering).\")}].map((function(e){return t().createElement(\"div\",{className:\"sent-email__content\",key:e.key},t().createElement(i.Icon,{icon:e.icon,size:32}),t().createElement(i.Text,{size:\"xxs\",as:\"p\"},e.content))})));return(0,l.isMobile)()&&!r?t().createElement(i.MobileDialog,{portal_element_id:\"modal_root\",title:(0,a.localize)(\"Weâ€™ve sent you an email\"),wrapper_classname:\"mt5-email-sent\",visible:s,onClose:p,has_content_scroll:!0},u):t().createElement(i.Modal,{className:\"sent-email__modal\",is_open:s,has_close_icon:!0,should_header_stick_body:!0,title:\"\",toggleModal:p,width:\"440px\"},t().createElement(i.Div100vhContainer,{className:\"account__scrollbars_container-wrapper\",is_disabled:(0,l.isDesktop)(),height_offset:\"80px\"},t().createElement(i.Modal.Body,null,t().createElement(\"div\",{onClick:p,className:\"send-email-template__close\",\"data-testid\":\"dt_send_email_template_close\"},t().createElement(i.Icon,{icon:\"IcCross\"})),u)))}})(),r=r.default})()));\n//# sourceMappingURL=sent-email-modal.js.map","import React from 'react';\nimport { Button, Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { SentEmailModal } from '@deriv/account';\nimport { WS } from 'Services';\nimport PropTypes from 'prop-types';\n\nexport const ConfirmEmailModal = ({\n    changed_email,\n    is_open,\n    onClose,\n    prev_email,\n    setErrorMessage,\n    verification_code,\n    is_social_signup,\n}) => {\n    const [email_request, setEmailRequest] = React.useState(null);\n    const [is_send_email_modal_open, setIsSendEmailModalOpen] = React.useState(false);\n    const [is_modal_open, setIsModalOpen] = React.useState(is_open);\n\n    const handleSubmit = () => {\n        const api_request = {\n            change_email: 'verify',\n            new_email: changed_email,\n            verification_code,\n            ...(is_social_signup && { social_signup: true }),\n        };\n\n        setEmailRequest(prev => ({ ...prev, ...api_request }));\n\n        WS.changeEmail(api_request).then(response => {\n            if (response.error) {\n                onClose();\n                setErrorMessage(response.error.message);\n            } else {\n                setIsSendEmailModalOpen(true);\n            }\n            setIsModalOpen(false);\n        });\n    };\n\n    const resendEmail = () => {\n        WS.changeEmail(email_request);\n    };\n\n    if (is_send_email_modal_open) {\n        return (\n            <SentEmailModal\n                is_open={is_send_email_modal_open}\n                onClose={() => setIsSendEmailModalOpen(false)}\n                identifier_title={'Change_Email'}\n                onClickSendEmail={resendEmail}\n                has_live_chat={true}\n                is_modal_when_mobile={true}\n            />\n        );\n    }\n    return (\n        <Modal\n            is_open={is_modal_open}\n            should_header_stick_body\n            title={<Localize i18n_default_text='Are you sure?' />}\n            toggleModal={onClose}\n            width='440px'\n            is_closed_on_cancel={false}\n            has_close_icon={false}\n        >\n            <React.Fragment>\n                <div className='email-confirmation'>\n                    <Text as='p' color='prominent' size='xs' align='left'>\n                        <Localize\n                            i18n_default_text='Are you sure you want to update email <0>{{prev_email}}</0> to <1>{{changed_email}}</1>?'\n                            values={{ prev_email, changed_email }}\n                            components={[\n                                <strong key={0} />,\n                                <strong key={1} className='email-confirmation__currentEmail' />,\n                            ]}\n                        />\n                    </Text>\n                </div>\n                <Modal.Footer>\n                    <Button onClick={onClose} has_effect text={localize('Cancel')} secondary large />\n                    <Button\n                        className='email-change_button'\n                        has_effect\n                        onClick={() => {\n                            handleSubmit();\n                        }}\n                        primary\n                        large\n                    >\n                        <Localize i18n_default_text='Confirm' />\n                    </Button>\n                </Modal.Footer>\n            </React.Fragment>\n        </Modal>\n    );\n};\n\nConfirmEmailModal.propTypes = {\n    changed_email: PropTypes.string,\n    is_open: PropTypes.bool,\n    onClose: PropTypes.func,\n    prev_email: PropTypes.string,\n    setErrorMessage: PropTypes.func,\n    verification_code: PropTypes.string,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Formik, Form } from 'formik';\nimport { Button, Dialog, Text, Input } from '@deriv/components';\nimport { validEmail, getErrorMessages } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { ConfirmEmailModal } from '../ConfirmEmailModal/confirm-email-modal.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst ResetEmailModal = observer(() => {\n    const { ui, client } = useStore();\n    const { disableApp, enableApp, is_loading, is_reset_email_modal_visible: is_visible, toggleResetEmailModal } = ui;\n    const { is_social_signup, email } = client;\n    const verification_code = client.verification_code.request_email;\n    const [is_confirm_email_modal_open, setIsConfirmResetEmailModal] = React.useState(false);\n    const [email_error_msg, setEmailErrorMsg] = React.useState(null);\n    const [new_email, setNewEmail] = React.useState(null);\n\n    const handleSubmit = values => {\n        setNewEmail(values.email);\n        setIsConfirmResetEmailModal(true);\n    };\n\n    const validateReset = values => {\n        const errors = {};\n\n        if (!values.email) {\n            errors.email = localize('The email input should not be empty.');\n        } else if (!validEmail(values.email)) {\n            errors.email = getErrorMessages().email();\n        }\n\n        return errors;\n    };\n\n    const reset_initial_values = { email: '' };\n\n    if (is_confirm_email_modal_open) {\n        return (\n            <ConfirmEmailModal\n                changed_email={new_email}\n                is_open={is_confirm_email_modal_open}\n                onClose={() => setIsConfirmResetEmailModal(false)}\n                prev_email={email}\n                setErrorMessage={setEmailErrorMsg}\n                verification_code={verification_code}\n                is_social_signup={is_social_signup}\n            />\n        );\n    }\n\n    return (\n        <Formik\n            initialValues={reset_initial_values}\n            initialStatus={{ reset_complete: false, error_msg: '' }}\n            validate={validateReset}\n            onSubmit={handleSubmit}\n        >\n            {({ errors, values, touched, isSubmitting, handleChange, setFieldTouched, status }) => (\n                <Dialog\n                    is_visible={is_visible}\n                    disableApp={disableApp}\n                    enableApp={enableApp}\n                    is_loading={is_loading}\n                    dismissable={status.error_msg}\n                    onConfirm={() => toggleResetEmailModal(false)}\n                    is_closed_on_cancel={false}\n                >\n                    <div className='reset-email'>\n                        <Form>\n                            <React.Fragment>\n                                {status.reset_complete ? (\n                                    <div className='reset-email__email-selection'>\n                                        <Text as='p' weight='bold' className='reset-email__heading'>\n                                            <Localize i18n_default_text='Your password has been changed' />\n                                        </Text>\n                                        <Text align='center' as='p' size='xxs' className='reset-email__subtext'>\n                                            <Localize i18n_default_text='We will now redirect you to the login page.' />\n                                        </Text>\n                                    </div>\n                                ) : (\n                                    <div className='reset-email__email-selection'>\n                                        <Text as='p' align='left' weight='bold' className='reset-email__heading'>\n                                            <Localize i18n_default_text='Enter a new email address' />\n                                        </Text>\n                                        <Text\n                                            as='p'\n                                            color='prominent'\n                                            size='xs'\n                                            align='left'\n                                            className='reset-email__descripton'\n                                        >\n                                            <Localize i18n_default_text=\"You'll log in to your Deriv account with this email address.\" />\n                                        </Text>\n                                        <fieldset className='reset-email__fieldset'>\n                                            <Input\n                                                data-lpignore='true'\n                                                type='text'\n                                                name='email'\n                                                id={'email'}\n                                                placeholder={localize('Email address')}\n                                                value={values.email}\n                                                required\n                                                disabled={false}\n                                                error={(touched.email && errors.email) || email_error_msg}\n                                                onChange={e => {\n                                                    setEmailErrorMsg('');\n                                                    setFieldTouched('email', true);\n                                                    handleChange(e);\n                                                }}\n                                            />\n                                        </fieldset>\n                                        <Button\n                                            className={classNames('reset-email__btn', {\n                                                'reset-email__btn--disabled':\n                                                    !values.email || errors.email || isSubmitting,\n                                            })}\n                                            type='submit'\n                                            is_disabled={!values.email || !!errors.email || isSubmitting}\n                                            primary\n                                            large\n                                        >\n                                            <Localize i18n_default_text='Confirm' />\n                                        </Button>\n                                    </div>\n                                )}\n                            </React.Fragment>\n                        </Form>\n                    </div>\n                </Dialog>\n            )}\n        </Formik>\n    );\n});\n\nexport default ResetEmailModal;\n","import ResetEmailModal from './reset-email-modal.jsx';\n\nexport default ResetEmailModal;\n"],"names":["e","t","a","i","self","module","exports","l","react","o","n","__esModule","default","d","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","r","identifier_title","is_modal_when_mobile","s","is_open","c","has_live_chat","m","onClickSendEmail","p","onClose","_","createElement","Localize","i18n_default_text","components","className","key","onClick","window","LiveChatWidget","Popover","classNameBubble","alignment","message","localize","zIndex","u","SendEmailTemplate","subtitle","CFD_PLATFORMS","DXTRADE","values","platform_name_dxtrade","getPlatformSettings","name","MT5","title","lbl_no_receive","txt_resend","txt_resend_in","live_chat","icon","content","map","Icon","size","Text","as","isMobile","MobileDialog","portal_element_id","wrapper_classname","visible","has_content_scroll","Modal","has_close_icon","should_header_stick_body","toggleModal","width","Div100vhContainer","is_disabled","isDesktop","height_offset","Body","prev_email","setErrorMessage","verification_code","is_social_signup","React","email_request","is_send_email_modal_open","setIsSendEmailModalOpen","is_modal_open","changed_email","handleSubmit","social_signup","setEmailRequest","WS","api_request","response","error","resendEmail","ConfirmEmailModal","propTypes","PropTypes","observer","useStore","ui","client","disableApp","enableApp","is_loading","is_visible","is_reset_email_modal_visible","toggleResetEmailModal","email","request_email","is_confirm_email_modal_open","setIsConfirmResetEmailModal","email_error_msg","setEmailErrorMsg","new_email","setNewEmail","Formik","initialValues","initialStatus","reset_complete","error_msg","validate","errors","validEmail","getErrorMessages","onSubmit","touched","isSubmitting","handleChange","setFieldTouched","status","Dialog","dismissable","onConfirm","is_closed_on_cancel","Form","weight","align","color","Input","type","id","placeholder","value","required","disabled","onChange","Button","classNames","primary","large"],"sourceRoot":""}