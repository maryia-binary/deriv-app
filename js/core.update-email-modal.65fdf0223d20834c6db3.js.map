{"version":3,"file":"js/core.update-email-modal.65fdf0223d20834c6db3.js","mappings":"4uCAQA,IAAMA,EAAmB,SAAH,GAOhB,IANFC,EAAU,EAAVA,WACAC,EAAsB,EAAtBA,uBACAC,EAAY,EAAZA,aACAC,EAAS,EAATA,UACAC,EAAiB,EAAjBA,kBACAC,EAAY,EAAZA,aAEmE,IAArBC,EAAAA,UAAe,GAAM,GAA5DC,EAAgB,KAAEC,EAAiB,KAC8B,IAApBF,EAAAA,SAAe,MAAK,GAAjEG,EAAkB,KAAEC,EAAqB,KAa1CC,EAAc,CAChBC,aAAc,SACdT,UAAAA,EACAC,kBAAAA,GAGES,EAAkB,WACpBC,EAAAA,GAAAA,YAAeH,GAAaI,MAAK,SAAAC,GAC7BR,GAAkB,GACdQ,EAASC,QACTP,EAAsBM,EAASC,MAAMC,SACrChB,IAER,GACJ,EAaA,OAXAI,EAAAA,WAAgB,WACRD,EACAS,EAAAA,GAAAA,KAAQ,aAAaC,MAAK,WACtBF,GACJ,IAGJA,GAEJ,GAAG,IAGC,gBAAC,EAAAM,MAAK,CACFC,QAASpB,EACTqB,gBAAgB,EAChBC,YAAarB,EACbsB,MAAM,QACNC,UAAU,SAETjB,EACG,uBAAKkB,UAAU,wBACThB,GACE,gBAAC,EAAAiB,KAAI,CAACD,UAAU,kCAAkCE,KAAI,kBAAqBC,KAAM,MAErF,gBAAC,EAAAC,KAAI,CAACJ,UAAU,mCAAmCK,OAAO,OAAOF,KAAK,KAClE,gBAAC,EAAAG,SAAQ,CAACC,kBAAoBvB,EAAkC,SAAb,cAEvD,gBAAC,EAAAoB,KAAI,CAACJ,UAAU,yCAAyCG,KAAK,MAC1D,gBAAC,EAAAG,SAAQ,CACLC,kBACKvB,GACK,+EAGVwB,WAAY,CAAC,sBAAIC,IAAK,QAG9B,gBAAC,EAAAf,MAAA,OAAY,CAACM,UAAU,+BACpB,gBAAC,EAAAU,OAAM,CAACC,QAjEN,WAClBnC,GAAuB,GACnBI,EACAH,IAAea,MAAK,YAChBsB,EAAAA,EAAAA,kBAAgB,GAAOC,EAAAA,EAAAA,gBAAe,EAC1C,KAEAD,EAAAA,EAAAA,kBAAgB,GAAOC,EAAAA,EAAAA,gBAAe,EAE9C,EAwDoDC,YAAU,EAACC,MAAMC,EAAAA,EAAAA,UAAS,UAAWC,SAAO,EAACC,OAAK,MAI1F,gBAAC,EAAAC,QAAO,CAACC,eAAe,IAIxC,EAEA9C,EAAiB+C,WAAa,CAC1B7C,uBAAwB8C,IAAAA,KACxB/C,WAAY+C,IAAAA,KACZ7C,aAAc6C,IAAAA,KACd5C,UAAW4C,IAAAA,OACX3C,kBAAmB2C,IAAAA,OACnB1C,aAAc0C,IAAAA,MAGlB,MCrGA,GDqGeC,EAAAA,EAAAA,KAAQ,gBAAGC,EAAE,EAAFA,GAAIC,EAAM,EAANA,OAAM,MAAQ,CACxChD,aAAcgD,EAAOC,OACrBnD,WAAYiD,EAAGG,8BACfnD,uBAAwBgD,EAAGhD,uBAC3BE,UAAW+C,EAAO/C,UAAUkD,oBAC5BjD,kBAAmB8C,EAAO9C,kBAAkBiD,oBAC5ChD,aAAc6C,EAAO7C,aACxB,GAPD,CAOIN,E","sources":["webpack:///./App/Containers/UpdateEmailModal/update-email-modal.jsx","webpack:///./App/Containers/UpdateEmailModal/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'Stores/connect';\nimport { Button, Modal, Text, Icon, Loading } from '@deriv/components';\nimport { localize, Localize, getLanguage } from '@deriv/translations';\nimport { redirectToLogin } from '@deriv/shared';\nimport { WS } from 'Services';\n\nconst UpdateEmailModal = ({\n    is_visible,\n    toggleUpdateEmailModal,\n    logoutClient,\n    new_email,\n    verification_code,\n    is_logged_in,\n}) => {\n    const [is_email_updated, setIsEmailUpdated] = React.useState(false);\n    const [update_email_error, setUpdateEmailMessage] = React.useState(null);\n\n    const onClickButton = () => {\n        toggleUpdateEmailModal(false);\n        if (is_logged_in) {\n            logoutClient().then(() => {\n                redirectToLogin(false, getLanguage(), false);\n            });\n        } else {\n            redirectToLogin(false, getLanguage(), false);\n        }\n    };\n\n    const api_request = {\n        change_email: 'update',\n        new_email,\n        verification_code,\n    };\n\n    const sendUpdateEmail = () => {\n        WS.changeEmail(api_request).then(response => {\n            setIsEmailUpdated(true);\n            if (response.error) {\n                setUpdateEmailMessage(response.error.message);\n                logoutClient();\n            }\n        });\n    };\n\n    React.useEffect(() => {\n        if (is_logged_in) {\n            WS.wait('authorize').then(() => {\n                sendUpdateEmail();\n            });\n            return;\n        }\n        sendUpdateEmail();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Modal\n            is_open={is_visible}\n            has_close_icon={false}\n            toggleModal={toggleUpdateEmailModal}\n            width='440px'\n            minHeight='400px'\n        >\n            {is_email_updated ? (\n                <div className='change-email-update'>\n                    {!update_email_error && (\n                        <Icon className='change-email-update__modal-icon' icon={`IcEmailVerified`} size={128} />\n                    )}\n                    <Text className='change-email-update__modal-title' weight='bold' size='s'>\n                        <Localize i18n_default_text={!update_email_error ? 'Success!' : 'Failed'} />\n                    </Text>\n                    <Text className='change-email-update__modal-description' size='xs'>\n                        <Localize\n                            i18n_default_text={\n                                !update_email_error\n                                    ? 'Your email address has changed.<0 />Now, log in with your new email address.'\n                                    : update_email_error\n                            }\n                            components={[<br key={0} />]}\n                        />\n                    </Text>\n                    <Modal.Footer className='change-email-update__footer'>\n                        <Button onClick={onClickButton} has_effect text={localize('Log in')} primary large />\n                    </Modal.Footer>\n                </div>\n            ) : (\n                <Loading is_fullscreen={false} />\n            )}\n        </Modal>\n    );\n};\n\nUpdateEmailModal.prototypes = {\n    toggleUpdateEmailModal: PropTypes.func,\n    is_visible: PropTypes.bool,\n    logoutClient: PropTypes.func,\n    new_email: PropTypes.string,\n    verification_code: PropTypes.string,\n    is_logged_in: PropTypes.bool,\n};\n\nexport default connect(({ ui, client }) => ({\n    logoutClient: client.logout,\n    is_visible: ui.is_update_email_modal_visible,\n    toggleUpdateEmailModal: ui.toggleUpdateEmailModal,\n    new_email: client.new_email.system_email_change,\n    verification_code: client.verification_code.system_email_change,\n    is_logged_in: client.is_logged_in,\n}))(UpdateEmailModal);\n","import UpdateEmailModal from './update-email-modal.jsx';\n\nexport default UpdateEmailModal;\n"],"names":["UpdateEmailModal","is_visible","toggleUpdateEmailModal","logoutClient","new_email","verification_code","is_logged_in","React","is_email_updated","setIsEmailUpdated","update_email_error","setUpdateEmailMessage","api_request","change_email","sendUpdateEmail","WS","then","response","error","message","Modal","is_open","has_close_icon","toggleModal","width","minHeight","className","Icon","icon","size","Text","weight","Localize","i18n_default_text","components","key","Button","onClick","redirectToLogin","getLanguage","has_effect","text","localize","primary","large","Loading","is_fullscreen","prototypes","PropTypes","connect","ui","client","logout","is_update_email_modal_visible","system_email_change"],"sourceRoot":""}