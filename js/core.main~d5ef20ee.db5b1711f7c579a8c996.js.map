{"version":3,"file":"js/core.main~d5ef20ee.db5b1711f7c579a8c996.js","mappings":"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","sources":["webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./App/Components/Elements/Errors/index.js","webpack:///./App/Components/Elements/LiveChat/use-livechat.ts","webpack:///./App/Components/Elements/LiveChat/live-chat-initializer.js","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Layout/Header/account-info-wrapper.tsx","webpack:///./App/Containers/AccountSwitcher/account-switcher-account-list.jsx","webpack:///./App/Containers/AccountSwitcher/account-switcher-account-wrapper.jsx","webpack:///./App/Containers/AccountSwitcher/helpers/account-helper.js","webpack:///./App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./App/Containers/AccountSwitcher/index.js","webpack:///./App/Containers/AccountSwitcher/account-switcher-mobile.jsx","webpack:///./App/Components/Layout/Header/account-info-icon.tsx","webpack:///./App/Components/Layout/Header/display-account-type.tsx","webpack:///./App/Components/Layout/Header/account-info.jsx","webpack:///./App/Components/Routes/helpers.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Routes/language-link.tsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./App/Components/Routes/index.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./App/Containers/Redirect/index.js","webpack:///./Modules/Endpoint/Endpoint.jsx","webpack:///./Modules/Endpoint/index.js","webpack:///./App/Constants/routes-config.js","webpack:///./App/Containers/RealAccountSignup/helpers/constants.js","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-status-icons.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-banner.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-promo.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-order.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./App/Components/Elements/NotificationMessage/index.js","webpack:///./App/Containers/trade-notifications.tsx","webpack:///./App/Containers/app-notification-messages.jsx","webpack:///./Constants/cfd-text.js","webpack:///./Constants/form-error-messages.js","webpack:///./Modules/BinaryBotIFrame/BinaryBotIFrame.jsx","webpack:///./Modules/BinaryBotIFrame/index.js","webpack:///./Modules/SmartTraderIFrame/SmartTraderIFrame.jsx","webpack:///./Modules/SmartTraderIFrame/index.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./App/Components/Elements/CookieBanner/cookie-banner.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/go-to-deriv.jsx","webpack:///./App/Components/Layout/Footer/endpoint-note.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/SettingsModal/settings-language.jsx","webpack:///./App/Components/Layout/Footer/toggle-language-settings.tsx","webpack:///./App/Components/Layout/Footer/help-centre.jsx","webpack:///./App/Components/Layout/Footer/responsible-trading.jsx","webpack:///./App/Components/Layout/Footer/account-limits.jsx","webpack:///./Assets/SvgComponents/footer/mga.svg","webpack:///./App/Components/Layout/Footer/regulatory-information.jsx","webpack:///./App/Components/Layout/Footer/index.js","webpack:///./App/Components/Elements/LiveChat/live-chat.tsx","webpack:///./App/Components/Elements/LiveChat/index.ts","webpack:///./App/Components/Elements/WhatsApp/whatsapp.tsx","webpack:///./App/Components/Elements/WhatsApp/index.ts","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Containers/Layout/default-footer.jsx","webpack:///./Assets/SvgComponents/footer/ic-footer-light-theme.svg","webpack:///./Assets/SvgComponents/footer/ic-footer-dark-theme.svg","webpack:///./App/Containers/Layout/trading-hub-footer.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Elements/Notifications/empty-notification.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-clear-all-footer.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-list.tsx","webpack:///./App/Containers/NotificationsDialog/notification-list-wrapper.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-dialog.tsx","webpack:///./App/Containers/NotificationsDialog/index.ts","webpack:///./App/Components/Layout/Header/toggle-notifications.jsx","webpack:///./App/Components/Layout/Header/platform-dropdown.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Components/Layout/Header/wallets/wallet-badge.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-item.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-list.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-mobile.tsx","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-info.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-item.jsx","webpack:///./App/Components/Layout/Header/wallets/account-info-wallets.tsx","webpack:///./App/Components/Layout/Header/wallets/account-actions-wallets.tsx","webpack:///./App/Containers/new-version-notification.jsx","webpack:///./App/Containers/RealAccountSignup/accept-risk-form.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup-loader.jsx","webpack:///./App/Containers/RealAccountSignup/account-wizard.jsx","webpack:///./App/Containers/RealAccountSignup/add-crypto-currency.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.js","webpack:///./App/Containers/RealAccountSignup/add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/change-account-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/signup-error-content.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-message.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx","webpack:///./App/Containers/RealAccountSignup/status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup.jsx","webpack:///./App/Containers/RealAccountSignup/index.js","webpack:///./App/Containers/SetAccountCurrencyModal/set-currency-modal.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/index.js","webpack:///./App/Components/Layout/Header/menu-link.tsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/menu-title.tsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/mobile-language-menu.tsx","webpack:///./App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./App/Constants/platform-config.ts","webpack:///./App/Containers/Layout/header/header-account-actions.tsx","webpack:///./App/Containers/Layout/header/default-header.tsx","webpack:///./App/Containers/Layout/header/traders-hub-home-button.tsx","webpack:///./App/Containers/Layout/header/dtrader-header.tsx","webpack:///./Assets/SvgComponents/header/deriv-rebranding-logo.svg","webpack:///./App/Containers/CurrencySelectionModal/currency/index.tsx","webpack:///./App/Containers/CurrencySelectionModal/curreny-selection-modal.tsx","webpack:///./App/Containers/CurrencySelectionModal/index.ts","webpack:///./App/Containers/Layout/header/show-notifications.tsx","webpack:///./App/Containers/Layout/header/traders-hub-onboarding.tsx","webpack:///./App/Containers/Layout/header/default-mobile-links.tsx","webpack:///./App/Containers/Layout/header/traders-hub-header.tsx","webpack:///./App/Components/Layout/Header/wallets/accounts-info-loader-wallets.tsx","webpack:///./App/Containers/Layout/header/dtrader-header-wallets.tsx","webpack:///./App/Containers/Layout/header/header.tsx","webpack:///./App/Containers/Layout/header/index.ts","webpack:///./App/Components/Elements/Modals/deriv-real-account-required-modal.jsx","webpack:///./App/Components/Elements/Modals/mt5-account-needed-modal.jsx","webpack:///./App/Components/Elements/Modals/RedirectNotice/redirect-notice-modal.jsx","webpack:///./App/Components/Elements/Modals/RedirectNotice/index.js","webpack:///./App/Containers/Modals/completed-assessment-modal.jsx","webpack:///./App/Containers/Modals/ready-to-verify-modal/ready-to-verify-modal.tsx","webpack:///./App/Containers/Modals/ready-to-verify-modal/index.ts","webpack:///./App/Containers/Modals/cooldown-warning-modal.jsx","webpack:///./App/Containers/Modals/mt5-notification/mt5-notification-description.tsx","webpack:///./App/Containers/Modals/mt5-notification/mt5-notification.tsx","webpack:///./App/Containers/Modals/mt5-notification/index.ts","webpack:///./App/Containers/Modals/need-real-account-for-cashier-modal/need-real-account-for-cashier-modal.tsx","webpack:///./App/Containers/Modals/need-real-account-for-cashier-modal/index.ts","webpack:///./App/Containers/Modals/ready-to-deposit-modal/ready-to-deposit-modal.tsx","webpack:///./App/Containers/Modals/ready-to-deposit-modal/index.ts","webpack:///./App/Containers/Modals/risk-accept-test-warning-modal.jsx","webpack:///./App/Containers/Modals/trading-experience-modal.jsx","webpack:///./App/Containers/Modals/trading-assessment-existing-user.jsx","webpack:///./App/Containers/VerificationModal/verification-modal-content.tsx","webpack:///./App/Containers/VerificationModal/verification-modal.tsx","webpack:///./App/Containers/VerificationModal/index.ts","webpack:///./App/Containers/Modals/app-modals.jsx","webpack:///./App/Containers/Modals/index.js","webpack:///./App/Containers/PlatformContainer/PlatformContainer.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./App/Containers/app-toast-messages.jsx","webpack:///./App/Devtools.tsx","webpack:///./App/AppContent.tsx","webpack:///./App/app.jsx","webpack:///./Services/network-monitor.js","webpack:///./Stores/Helpers/client.js","webpack:///./Stores/Helpers/device.js","webpack:///./Stores/base-store.js","webpack:///./Stores/client-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/notification-store.js","webpack:///./Stores/ui-store.js","webpack:///./Constants/ui.js","webpack:///./Stores/active-symbols-store.js","webpack:///./Stores/chart-barrier-store.js","webpack:///./Stores/Helpers/limit-orders.js","webpack:///./Stores/portfolio-store.js","webpack:///./Stores/Helpers/logic.js","webpack:///./Components/markers/marker-line.jsx","webpack:///./Components/markers/marker-spot.jsx","webpack:///./Components/markers/marker-spot-label.jsx","webpack:///./Stores/Constants/markers.js","webpack:///./Stores/Helpers/chart-marker-helpers.js","webpack:///./Stores/Helpers/chart-markers.js","webpack:///./Stores/contract-store.js","webpack:///./Stores/contract-replay-store.js","webpack:///./Stores/contract-trade-store.js","webpack:///./Stores/traders-hub-store.js","webpack:///./Stores/index.js","webpack:///./App/initStore.js","webpack:///./Modules/Page404/Components/Page404.jsx","webpack:///./Modules/Page404/index.js","webpack:///./Services/logout.js","webpack:///./Services/socket-general.js","webpack:///./Services/ws-methods.js","webpack:///./Stores/Helpers/client-notifications.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PageErrorContainer } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick = null,\n    should_clear_error_on_click,\n    setError,\n    redirect_to = routes.trade,\n    should_show_refresh = true,\n    should_redirect = true,\n}) => {\n    const history = useHistory();\n\n        React.useEffect(() => {\n            if (!history) return undefined;\n            return history.listen(() => {\n                if (typeof setError === 'function') {\n                    setError(false, null);\n                }\n            });\n        }, [history, setError]);\n\n    const refresh_message = should_show_refresh ? localize('Please refresh this page to continue.') : '';\n\n    return (\n        <PageErrorContainer\n            error_header={header ?? ''}\n            error_messages={message ? [message, refresh_message] : []}\n            redirect_urls={[redirect_to]}\n            redirect_labels={(redirect_label === false && []) || [redirect_label || localize('Refresh')]}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n            should_clear_error_on_click={should_clear_error_on_click}\n            setError={setError}\n            should_redirect={should_redirect}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    header: PropTypes.string,\n    message: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    redirectOnClick: PropTypes.func || PropTypes.object,\n    redirect_label: PropTypes.string,\n    setError: PropTypes.func,\n    should_clear_error_on_click: PropTypes.bool,\n    should_redirect: PropTypes.bool,\n    redirect_to: PropTypes.string,\n    should_show_refresh: PropTypes.bool,\n};\n\nexport default ErrorComponent;\n","import ErrorComponent from './error-component.jsx';\n\nexport default ErrorComponent;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { liveChatInitialization } from './live-chat-initializer';\nimport Cookies from 'js-cookie';\nimport { deriv_urls } from '@deriv/shared';\nimport { useIsMounted } from 'usehooks-ts';\n\n// Todo: Should break this into smaller hooks or utility functions.\nconst useLiveChat = (has_cookie_account = false, active_loginid?: string) => {\n    const [isReady, setIsReady] = useState(false);\n    const [reload, setReload] = useState(false);\n    const history = useHistory();\n    const isMounted = useIsMounted();\n    const widget = window.LiveChatWidget;\n\n    const liveChatDeletion = () =>\n        new Promise<void>(resolve => {\n            if (window.LiveChatWidget) {\n                window.LiveChatWidget.on('ready', () => {\n                    try {\n                        if (window.LiveChatWidget?.get('customer_data').status !== 'chatting') {\n                            window.LiveChatWidget?.call('destroy');\n                            resolve();\n                        }\n                    } catch (e) {\n                        resolve();\n                    }\n                });\n            } else {\n                resolve();\n            }\n        });\n\n    const onHistoryChange = useCallback(() => {\n        liveChatDeletion().then(() => {\n            liveChatInitialization().then(() => {\n                if (isMounted()) {\n                    setReload(true);\n                    setIsReady(true);\n                }\n            });\n        });\n    }, [isMounted]);\n\n    const liveChatSetup = (is_logged_in: boolean) => {\n        if (window.LiveChatWidget) {\n            window.LiveChatWidget.init();\n            window.LiveChatWidget?.on('ready', () => {\n                let client_first_name = '';\n                let client_last_name = '';\n                const domain = /^(.)*deriv\\.(com|me|be)$/gi.test(window.location.hostname)\n                    ? deriv_urls.DERIV_HOST_NAME\n                    : 'binary.sx';\n                const client_information = Cookies.getJSON('client_information', {\n                    domain,\n                });\n                const utm_data = Cookies.getJSON('utm_data', { domain });\n\n                const { utm_source, utm_medium, utm_campaign } = utm_data || {};\n\n                const { loginid, email, landing_company_shortcode, currency, residence, first_name, last_name } =\n                    client_information || {};\n\n                client_first_name = first_name ?? ' ';\n                client_last_name = last_name ?? ' ';\n\n                /* the session variables are sent to CS team dashboard to notify user has logged in\n                and also acts as custom variables to trigger targeted engagement */\n                const session_variables = {\n                    is_logged_in: !!is_logged_in,\n                    loginid: loginid ?? ' ',\n                    landing_company_shortcode: landing_company_shortcode ?? ' ',\n                    currency: currency ?? ' ',\n                    residence: residence ?? ' ',\n                    email: email ?? ' ',\n                    utm_source: utm_source ?? ' ',\n                    utm_medium: utm_medium ?? ' ',\n                    utm_campaign: utm_campaign ?? ' ',\n                };\n                window.LiveChatWidget?.call('set_session_variables', session_variables);\n\n                if (is_logged_in) {\n                    // client logged in\n                    // prepfill name and email\n                    window.LiveChatWidget?.call('set_customer_email', session_variables.email);\n                    window.LiveChatWidget?.call('set_customer_name', `${client_first_name} ${client_last_name}`);\n\n                    // prefill name and email fields after chat has ended\n                    if (window.LC_API?.on_chat_ended) {\n                        window.LC_API.on_chat_ended = () => {\n                            window.LiveChatWidget?.call('set_customer_email', session_variables.email);\n                            window.LiveChatWidget?.call(\n                                'set_customer_name',\n                                `${client_first_name} ${client_last_name}`\n                            );\n                        };\n                    }\n                } else {\n                    // client not logged in\n                    // clear name and email fields\n                    window.LiveChatWidget?.call('set_customer_email', ' ');\n                    window.LiveChatWidget?.call('set_customer_name', ' ');\n                    // clear name and email fields after chat has ended\n                    if (window.LC_API?.on_chat_ended) {\n                        window.LC_API.on_chat_ended = () => {\n                            window.LiveChatWidget?.call('set_customer_email', ' ');\n                            window.LiveChatWidget?.call('set_customer_name', ' ');\n                        };\n                    }\n                }\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (isReady && !widget) {\n            onHistoryChange();\n        }\n    }, [widget, isReady, onHistoryChange]);\n\n    useEffect(() => {\n        history.listen(onHistoryChange);\n        window.LiveChatWidget?.on('ready', () => {\n            if (isMounted()) setIsReady(true);\n        });\n    }, [history, isMounted, onHistoryChange]);\n\n    useEffect(() => {\n        if (reload) {\n            liveChatSetup(has_cookie_account);\n            setReload(false);\n        }\n    }, [reload, has_cookie_account]);\n\n    useEffect(() => liveChatSetup(has_cookie_account), [has_cookie_account, active_loginid]);\n\n    return {\n        isReady,\n        widget: window.LiveChatWidget,\n        LC_API: window.LC_API,\n    };\n};\n\nexport default useLiveChat;\n","import { livechat_license_id } from '@deriv/shared';\n\n// Initialization code provided by Livechat\nexport const liveChatInitialization = () =>\n    new Promise(resolve => {\n        window.__lc = window.__lc || {}; // eslint-disable-line no-underscore-dangle\n        window.__lc.license = livechat_license_id; // eslint-disable-line no-underscore-dangle\n        (function (n, t, c) {\n            // eslint-disable-next-line no-shadow\n            function i(n) {\n                // eslint-disable-next-line no-underscore-dangle\n                return e._h ? e._h.apply(null, n) : e._q.push(n);\n            }\n            // eslint-disable-next-line\n            var e = {\n                _q: [],\n                _h: null,\n                _v: '2.0',\n                on() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['on', c.call(arguments)]);\n                },\n                once() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['once', c.call(arguments)]);\n                },\n                off() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['off', c.call(arguments)]);\n                },\n                get() {\n                    if (!e._h) throw new Error(\"[LiveChatWidget] You can't use getters before load.\"); // eslint-disable-line no-underscore-dangle\n                    // eslint-disable-next-line prefer-rest-params\n                    return i(['get', c.call(arguments)]);\n                },\n                call() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['call', c.call(arguments)]);\n                },\n                init() {\n                    // eslint-disable-next-line\n                    var n = t.createElement('script');\n                    // eslint-disable-next-line no-unused-expressions\n                    (n.async = !0), // eslint-disable-line no-sequences\n                        (n.type = 'text/javascript'),\n                        (n.src = 'https://cdn.livechatinc.com/tracking.js'),\n                        t.head.appendChild(n);\n                },\n            };\n            // eslint-disable-next-line no-unused-expressions\n            !n.__lc.asyncInit && e.init(); // eslint-disable-line no-underscore-dangle\n            n.LiveChatWidget = n.LiveChatWidget || e;\n        })(window, document, [].slice); //eslint-disable-line\n        resolve();\n    });\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\nexport const max_display_notifications_mobile = 1;\n\nexport const icon_types = {\n    danger: 'IcAlertDanger',\n    info: 'IcAlertInfo',\n    success: 'IcAlertSuccess',\n    warning: 'IcAlertWarning',\n    contract_sold: 'IcAlertInfo',\n    announce: 'IcAlertAnnounce',\n};\n\nexport const types = {\n    announce: 'notification--announce',\n    danger: 'notification--danger',\n    info: 'notification--info',\n    success: 'notification--success',\n    warning: 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        promotions: 1,\n        news: 2,\n        contract_sold: 3,\n        danger: 4,\n        warning: 5,\n        info: 6,\n        success: 7,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n\nexport const sortNotificationsMobile = (() => {\n    const notification_order_mobile = {\n        contract_sold: 1,\n        promotions: 2,\n        danger: 3,\n        news: 4,\n        warning: 5,\n        info: 6,\n        success: 7,\n    };\n\n    return (a, b) => notification_order_mobile[a.type] - notification_order_mobile[b.type];\n})();\n","import React from 'react';\nimport { Popover } from '@deriv/components';\nimport { isBot } from '@deriv/shared';\n\ntype TAccountInfoWrapper = {\n    is_disabled?: boolean;\n    is_mobile?: boolean;\n    disabled_message?: string;\n};\n\nconst AccountInfoWrapper = ({\n    is_disabled,\n    is_mobile,\n    disabled_message,\n    children,\n}: React.PropsWithChildren<TAccountInfoWrapper>) =>\n    is_disabled && disabled_message ? (\n        <Popover alignment={isBot() && is_mobile ? 'bottom' : 'left'} message={disabled_message} zIndex='99999'>\n            {children}\n        </Popover>\n    ) : (\n        <React.Fragment>{children}</React.Fragment>\n    );\n\nexport default AccountInfoWrapper;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Money, Button, Text } from '@deriv/components';\nimport { formatMoney, getCurrencyName, getCFDAccountDisplay, getCurrencyDisplayCode, isBot } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\n\nconst AccountList = ({\n    balance,\n    currency,\n    currency_icon,\n    country_standpoint,\n    display_type,\n    has_balance,\n    has_error,\n    has_reset_balance,\n    is_dark_mode_on,\n    is_disabled,\n    is_virtual,\n    is_eu,\n    loginid,\n    market_type,\n    redirectAccount,\n    onClickResetVirtualBalance,\n    selected_loginid,\n    server,\n    shortcode,\n    sub_account_type,\n    platform,\n    should_show_server_name,\n}) => {\n    const currency_badge = currency ? currency_icon : 'IcCurrencyUnknown';\n    return (\n        <React.Fragment>\n            <div\n                id={`dt_${loginid}`}\n                className={classNames('acc-switcher__account', {\n                    'acc-switcher__account--selected': loginid === selected_loginid,\n                    'acc-switcher__account--disabled': is_disabled,\n                })}\n                onClick={() => {\n                    if (!is_disabled) redirectAccount();\n                }}\n            >\n                <span className='acc-switcher__id'>\n                    <Icon\n                        icon={is_virtual ? 'IcCurrencyVirtual' : currency_badge}\n                        className={'acc-switcher__id-icon'}\n                        size={24}\n                    />\n                    <span>\n                        {display_type === 'currency' ? (\n                            <CurrencyDisplay\n                                country_standpoint={country_standpoint}\n                                currency={currency}\n                                loginid={loginid}\n                                is_virtual={is_virtual}\n                            />\n                        ) : (\n                            <AccountDisplay\n                                is_eu={is_eu}\n                                market_type={market_type}\n                                server={server}\n                                sub_account_type={sub_account_type}\n                                has_error={has_error}\n                                platform={platform}\n                                is_dark_mode_on={is_dark_mode_on}\n                                shortcode={shortcode}\n                                should_show_server_name={should_show_server_name}\n                            />\n                        )}\n                        <div\n                            className={classNames('acc-switcher__loginid-text', {\n                                'acc-switcher__loginid-text--disabled': has_error,\n                            })}\n                        >\n                            {loginid}\n                        </div>\n                    </span>\n                    {has_reset_balance ? (\n                        <Button\n                            is_disabled={is_disabled}\n                            onClick={e => {\n                                e.stopPropagation();\n                                onClickResetVirtualBalance();\n                            }}\n                            className='acc-switcher__reset-account-btn'\n                            secondary\n                            small\n                        >\n                            {localize('Reset balance')}\n                        </Button>\n                    ) : (\n                        has_balance && (\n                            <Text\n                                size='xs'\n                                color='prominent'\n                                styles={{ fontWeight: 'inherit' }}\n                                className='acc-switcher__balance'\n                            >\n                                {currency && (\n                                    <Money\n                                        currency={getCurrencyDisplayCode(currency)}\n                                        amount={formatMoney(currency, balance, true)}\n                                        should_format={false}\n                                        show_currency\n                                    />\n                                )}\n                            </Text>\n                        )\n                    )}\n                </span>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CurrencyDisplay = ({ country_standpoint, currency, loginid, is_virtual }) => {\n    const user_is_from_this_country_list = Object.values(country_standpoint).includes(true);\n    const account_type = loginid.replace(/\\d/g, '');\n\n    if (user_is_from_this_country_list) {\n        if (account_type === 'MLT') {\n            return <Localize i18n_default_text='Options' />;\n        } else if (account_type === 'MX') {\n            if (country_standpoint.is_united_kingdom) {\n                return <Localize i18n_default_text='Gaming' />;\n            }\n            if (country_standpoint.is_isle_of_man) {\n                return getCurrencyName(currency);\n            }\n            return <Localize i18n_default_text='Synthetic' />;\n        } else if (account_type === 'MF') {\n            return <Localize i18n_default_text='Multipliers' />;\n        }\n    }\n\n    if (is_virtual) {\n        return <Localize i18n_default_text='Demo' />;\n    }\n\n    if (!currency) {\n        return <Localize i18n_default_text='No currency assigned' />;\n    }\n\n    return getCurrencyName(currency);\n};\n\nconst AccountDisplay = ({\n    has_error,\n    market_type,\n    sub_account_type,\n    platform,\n    server,\n    is_dark_mode_on,\n    is_eu,\n    shortcode,\n    should_show_server_name,\n}) => {\n    const account_title = getCFDAccountDisplay({ market_type, sub_account_type, platform, is_eu, shortcode });\n    // TODO: Remove once account with error has market_type and sub_account_type in details response\n    const getServerName = React.useCallback(account => {\n        if (account) {\n            const server_region = account.server_info?.geolocation?.region;\n            if (server_region) {\n                return `${server_region} ${\n                    account?.server_info?.geolocation?.sequence === 1 ? '' : account?.server_info?.geolocation?.sequence\n                }`;\n            }\n        }\n        return '';\n    }, []);\n    if (has_error)\n        return (\n            <div>\n                <Text color='disabled' size='xs'>\n                    <Localize i18n_default_text='Unavailable' />\n                </Text>\n                {server?.server_info?.geolocation &&\n                    should_show_server_name &&\n                    market_type === 'synthetic' &&\n                    shortcode === 'svg' && (\n                        <Text color='less-prominent' size='xxs' className='badge-server badge-server--disabled'>\n                            {getServerName(server)}\n                        </Text>\n                    )}\n            </div>\n        );\n\n    const { is_pathname_bot } = isBot();\n    return (\n        <div>\n            {/* TODO: Remove below condition once deriv x changes are completed */}\n            {platform === 'dxtrade' && account_title === localize('Derived') ? localize('Synthetic') : account_title}\n            {server?.server_info?.geolocation &&\n                should_show_server_name &&\n                market_type === 'synthetic' &&\n                shortcode === 'svg' && (\n                    <Text\n                        color={is_dark_mode_on ? 'general' : 'colored-background'}\n                        size='xxs'\n                        className={classNames('badge-server', {\n                            'badge-server-bot': is_pathname_bot,\n                        })}\n                    >\n                        {getServerName(server)}\n                    </Text>\n                )}\n        </div>\n    );\n};\n\nexport default AccountList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentExpander } from '@deriv/components';\n\nconst AccountWrapper = ({ children, header, is_visible, toggleVisibility }) => (\n    <ContentExpander\n        className='acc-switcher'\n        title={header}\n        is_expanded={is_visible}\n        onToggle={toggleVisibility}\n        is_title_spaced\n    >\n        {children}\n    </ContentExpander>\n);\n\nAccountWrapper.propTypes = {\n    children: PropTypes.node,\n    header: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    is_visible: PropTypes.bool,\n    toggleVisibility: PropTypes.func,\n};\n\nexport default AccountWrapper;\n","import { isCryptocurrency, getCFDAccountKey, getCFDAccount, getCFDAccountDisplay, CFD_PLATFORMS } from '@deriv/shared';\n\nexport const getSortedAccountList = (account_list, accounts) => {\n    // sort accounts as follows:\n    // top is fiat, then crypto (each alphabetically by currency), then demo\n    return [...account_list].sort((a, b) => {\n        const a_currency = accounts[a.loginid].currency;\n        const b_currency = accounts[b.loginid].currency;\n        const a_is_crypto = isCryptocurrency(a_currency);\n        const b_is_crypto = isCryptocurrency(b_currency);\n        const a_is_fiat = !a_is_crypto;\n        const b_is_fiat = !b_is_crypto;\n        if (a.is_virtual || b.is_virtual) {\n            return a.is_virtual ? 1 : -1;\n        } else if ((a_is_crypto && b_is_crypto) || (a_is_fiat && b_is_fiat)) {\n            return a_currency < b_currency ? -1 : 1;\n        } else if (a_is_fiat && b_is_crypto) {\n            return -1;\n        }\n        return 1;\n    });\n};\n\nexport const getSortedCFDList = account_list => {\n    // for DXTrade, MT5, synthetic, financial, financial stp\n    return [...account_list].sort((a, b) => {\n        const a_is_demo = isDemo(a);\n        const b_is_demo = isDemo(b);\n\n        if (a_is_demo && !b_is_demo) {\n            return 1;\n        }\n        if (b_is_demo && !a_is_demo) {\n            return -1;\n        }\n        if (a.market_type === 'gaming' || a.market_type === 'synthetic') {\n            return -1;\n        }\n        if (a.sub_account_type === 'financial') {\n            return b.market_type === 'gaming' || b.market_type === 'synthetic' ? 1 : -1;\n        }\n        return 1;\n    });\n};\n\nexport const isDemo = account => account.account_type === 'demo';\n\nexport const getCFDConfig = (\n    market_type,\n    landing_company,\n    existing_cfd_accounts,\n    mt5_trading_servers,\n    platform,\n    is_eu,\n    trading_platform_available_accounts,\n    getIsEligibleForMoreAccounts\n) => {\n    const cfd_config = [];\n\n    if (landing_company) {\n        Object.keys(landing_company).forEach(company => {\n            let has_account = existing_cfd_accounts.find(account => {\n                const account_market_type = account.market_type === 'synthetic' ? 'gaming' : account.market_type;\n                if (platform === CFD_PLATFORMS.DXTRADE) {\n                    return account_market_type === market_type;\n                }\n                return account.sub_account_type === company && account_market_type === market_type;\n            });\n            if (has_account && platform === CFD_PLATFORMS.MT5 && is_eu) {\n                const number_market_type_available = mt5_trading_servers.filter(s => {\n                    const server_market_type = s.market_type === 'synthetic' ? 'gaming' : s.market_type;\n                    return market_type === server_market_type && !s.disabled;\n                }).length;\n                if (number_market_type_available && has_account.account_type === 'real') {\n                    has_account = false;\n                }\n            }\n            if (!has_account && (is_eu || platform === CFD_PLATFORMS.DXTRADE)) {\n                const type = getCFDAccountKey({ market_type, sub_account_type: company, platform });\n                if (type) {\n                    cfd_config.push({\n                        icon: getCFDAccount({ market_type, sub_account_type: company, platform, is_eu }),\n                        title: getCFDAccountDisplay({\n                            market_type,\n                            sub_account_type: company,\n                            platform,\n                            is_eu,\n                        }),\n                        type,\n                    });\n                }\n            }\n        });\n    }\n    if (!is_eu && platform === CFD_PLATFORMS.MT5) {\n        // show remaining Synthetic and/or Financial while a client can still open more real accounts or more demo svg\n        ['synthetic', 'financial'].forEach(account_type => {\n            if ((account_type === 'synthetic' ? 'gaming' : 'financial') === market_type) {\n                if (getIsEligibleForMoreAccounts(account_type)) {\n                    cfd_config.push({\n                        icon: getCFDAccount({ market_type, sub_account_type: 'financial', platform, is_eu }),\n                        title: getCFDAccountDisplay({\n                            market_type,\n                            sub_account_type: 'financial',\n                            platform,\n                            is_eu,\n                        }),\n                        type: account_type,\n                    });\n                }\n            }\n        });\n    }\n\n    return cfd_config;\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    Button,\n    DesktopWrapper,\n    MobileWrapper,\n    Div100vhContainer,\n    Icon,\n    Money,\n    Tabs,\n    ThemedScrollbars,\n    Text,\n    useOnClickOutside,\n    Loading,\n} from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { routes, formatMoney, ContentFlag, getStaticUrl } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { getAccountTitle } from 'App/Containers/RealAccountSignup/helpers/constants';\nimport AccountList from './account-switcher-account-list.jsx';\nimport AccountWrapper from './account-switcher-account-wrapper.jsx';\nimport { getSortedAccountList, getSortedCFDList, isDemo } from './helpers';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { Analytics } from '@deriv/analytics';\n\nconst AccountSwitcher = observer(({ history, is_mobile, is_visible }) => {\n    const { client, ui, traders_hub } = useStore();\n    const {\n        available_crypto_currencies,\n        loginid: account_loginid,\n        accounts,\n        account_type,\n        account_list,\n        residence: client_residence,\n        country_standpoint,\n        currency,\n        is_eu,\n        is_landing_company_loaded,\n        is_low_risk,\n        is_high_risk,\n        is_logged_in,\n        is_virtual,\n        has_fiat,\n        landing_company_shortcode,\n        mt5_login_list,\n        obj_total_balance,\n        switchAccount,\n        resetVirtualBalance,\n        has_active_real_account,\n        logout: logoutClient,\n        upgradeable_landing_companies,\n        real_account_creation_unlock_date,\n        has_any_real_account,\n        virtual_account_loginid,\n    } = client;\n    const { show_eu_related_content, content_flag, selectRegion, setTogglePlatformType } = traders_hub;\n    const {\n        is_dark_mode_on,\n        is_positions_drawer_on,\n        openRealAccountSignup,\n        toggleAccountsDialog,\n        togglePositionsDrawer,\n        toggleSetCurrencyModal,\n        should_show_real_accounts_list,\n        setShouldShowCooldownModal,\n    } = ui;\n    const [active_tab_index, setActiveTabIndex] = React.useState(!is_virtual || should_show_real_accounts_list ? 0 : 1);\n    const [is_deriv_demo_visible, setDerivDemoVisible] = React.useState(true);\n    const [is_deriv_real_visible, setDerivRealVisible] = React.useState(true);\n    const [is_non_eu_regulator_visible, setNonEuRegulatorVisible] = React.useState(true);\n    const [is_eu_regulator_visible, setEuRegulatorVisible] = React.useState(true);\n\n    const wrapper_ref = React.useRef();\n    const scroll_ref = React.useRef(null);\n\n    const account_total_balance_currency = obj_total_balance.currency;\n\n    const vrtc_loginid = account_list.find(account => account.is_virtual)?.loginid;\n    const vrtc_currency = accounts[vrtc_loginid] ? accounts[vrtc_loginid].currency : 'USD';\n\n    const toggleVisibility = section => {\n        switch (section) {\n            case 'demo_deriv':\n                return setDerivDemoVisible(!is_deriv_demo_visible);\n            case 'real_deriv':\n                return setDerivRealVisible(!is_deriv_real_visible);\n            case 'non-eu-regulator':\n                return setNonEuRegulatorVisible(!is_non_eu_regulator_visible);\n            case 'eu-regulator':\n                return setEuRegulatorVisible(!is_eu_regulator_visible);\n            default:\n                return false;\n        }\n    };\n\n    const handleLogout = async () => {\n        closeAccountsDialog();\n        if (is_positions_drawer_on) {\n            togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        history.push(routes.index);\n        await logoutClient().then(() => (window.location.href = getStaticUrl('/')));\n    };\n\n    const closeAccountsDialog = () => {\n        toggleAccountsDialog(false);\n    };\n\n    const validateClickOutside = event => is_visible && !event.target.classList.contains('acc-info');\n\n    useOnClickOutside(wrapper_ref, closeAccountsDialog, validateClickOutside);\n\n    const setAccountCurrency = () => {\n        closeAccountsDialog();\n        toggleSetCurrencyModal();\n    };\n\n    const doSwitch = async loginid => {\n        closeAccountsDialog();\n        if (account_loginid === loginid) return;\n        await switchAccount(loginid);\n        Analytics.setAttributes({ account_type: loginid.substring(0, 2) });\n    };\n\n    const resetBalance = async () => {\n        closeAccountsDialog();\n        resetVirtualBalance();\n    };\n\n    // Real accounts is always the first tab index based on design\n    const isRealAccountTab = active_tab_index === 0;\n    const isDemoAccountTab = active_tab_index === 1;\n\n    const getRealMT5 = () => {\n        if (is_landing_company_loaded) {\n            const low_risk_non_eu = content_flag === ContentFlag.LOW_RISK_CR_NON_EU;\n            if (low_risk_non_eu) {\n                return getSortedCFDList(mt5_login_list).filter(\n                    account => !isDemo(account) && account.landing_company_short !== 'maltainvest'\n                );\n            }\n            return getSortedCFDList(mt5_login_list).filter(account => !isDemo(account));\n        }\n        return [];\n    };\n\n    const canOpenMulti = () => {\n        if (available_crypto_currencies.length < 1 && !has_fiat) return true;\n        return !is_virtual;\n    };\n\n    const is_regulated_able_to_change_currency =\n        show_eu_related_content &&\n        (landing_company_shortcode === 'malta' ||\n            (landing_company_shortcode === 'iom' && upgradeable_landing_companies.length !== 0));\n\n    // SVG clients can't upgrade.\n    const getRemainingRealAccounts = () => {\n        if (\n            show_eu_related_content ||\n            is_virtual ||\n            !canOpenMulti() ||\n            is_regulated_able_to_change_currency ||\n            is_low_risk\n        ) {\n            return upgradeable_landing_companies;\n        }\n        return [];\n    };\n\n    const hasSetCurrency = useHasSetCurrency();\n\n    const getTotalDemoAssets = () => {\n        const vrtc_balance = accounts[vrtc_loginid] ? accounts[vrtc_loginid].balance : 0;\n\n        return vrtc_balance;\n    };\n\n    const getTotalRealAssets = () => {\n        const traders_hub_total = obj_total_balance.amount_real;\n        return traders_hub_total;\n    };\n\n    if (!is_logged_in) return false;\n\n    const canResetBalance = account => {\n        const account_init_balance = 10000;\n        return account?.is_virtual && account?.balance !== account_init_balance;\n    };\n\n    const checkMultipleSvgAcc = () => {\n        const all_svg_acc = [];\n        getRealMT5().map(acc => {\n            if (acc.landing_company_short === 'svg' && acc.market_type === 'synthetic') {\n                if (all_svg_acc.length) {\n                    all_svg_acc.forEach(svg_acc => {\n                        if (svg_acc.server !== acc.server) all_svg_acc.push(acc);\n                        return all_svg_acc;\n                    });\n                } else {\n                    all_svg_acc.push(acc);\n                }\n            }\n        });\n        return all_svg_acc.length > 1;\n    };\n\n    const have_more_accounts = type =>\n        getSortedAccountList(account_list, accounts).filter(\n            account => !account.is_virtual && account.loginid.startsWith(type)\n        ).length > 1;\n\n    // all: 1 in mt5_status response means that server is suspended\n    const has_cr_account = account_list.find(acc => acc.loginid?.startsWith('CR'))?.loginid;\n\n    const demo_account = (\n        <div className='acc-switcher__list-wrapper'>\n            {vrtc_loginid && (\n                <AccountWrapper\n                    header={localize('Deriv account')}\n                    is_visible={is_deriv_demo_visible}\n                    toggleVisibility={() => {\n                        toggleVisibility('demo_deriv');\n                    }}\n                >\n                    <div className='acc-switcher__accounts'>\n                        {getSortedAccountList(account_list, accounts)\n                            .filter(account => account.is_virtual)\n                            .map(account => (\n                                <AccountList\n                                    is_dark_mode_on={is_dark_mode_on}\n                                    key={account.loginid}\n                                    balance={accounts[account.loginid].balance}\n                                    currency={accounts[account.loginid].currency}\n                                    currency_icon={`IcCurrency-${account.icon}`}\n                                    country_standpoint={country_standpoint}\n                                    display_type={'currency'}\n                                    has_balance={'balance' in accounts[account.loginid]}\n                                    has_reset_balance={canResetBalance(accounts[account_loginid])}\n                                    is_disabled={account.is_disabled}\n                                    is_virtual={account.is_virtual}\n                                    loginid={account.loginid}\n                                    redirectAccount={account.is_disabled ? undefined : () => doSwitch(account.loginid)}\n                                    onClickResetVirtualBalance={resetBalance}\n                                    selected_loginid={account_loginid}\n                                />\n                            ))}\n                    </div>\n                </AccountWrapper>\n            )}\n        </div>\n    );\n\n    const real_accounts = (\n        <div ref={scroll_ref} className='acc-switcher__list-wrapper'>\n            <React.Fragment>\n                {!is_eu || is_low_risk ? (\n                    <React.Fragment>\n                        <AccountWrapper\n                            className='acc-switcher__title'\n                            header={\n                                is_low_risk\n                                    ? localize(`Non-EU Deriv ${have_more_accounts('CR') ? 'accounts' : 'account'}`)\n                                    : localize(`Deriv ${have_more_accounts('CR') ? 'accounts' : 'account'}`)\n                            }\n                            is_visible={is_non_eu_regulator_visible}\n                            toggleVisibility={() => {\n                                toggleVisibility('real_deriv');\n                            }}\n                        >\n                            <div className='acc-switcher__accounts'>\n                                {getSortedAccountList(account_list, accounts)\n                                    .filter(account => !account.is_virtual && account.loginid.startsWith('CR'))\n                                    .map(account => {\n                                        return (\n                                            <AccountList\n                                                account_type={account_type}\n                                                is_dark_mode_on={is_dark_mode_on}\n                                                key={account.loginid}\n                                                balance={accounts[account.loginid].balance}\n                                                currency={accounts[account.loginid].currency}\n                                                currency_icon={`IcCurrency-${account.icon}`}\n                                                country_standpoint={country_standpoint}\n                                                display_type={'currency'}\n                                                has_balance={'balance' in accounts[account.loginid]}\n                                                is_disabled={account.is_disabled}\n                                                is_virtual={account.is_virtual}\n                                                is_eu={is_eu}\n                                                loginid={account.loginid}\n                                                redirectAccount={\n                                                    account.is_disabled ? undefined : () => doSwitch(account.loginid)\n                                                }\n                                                selected_loginid={account_loginid}\n                                                should_show_server_name={checkMultipleSvgAcc()}\n                                            />\n                                        );\n                                    })}\n                            </div>\n                            {!has_cr_account &&\n                                getRemainingRealAccounts()\n                                    .filter(account => account === 'svg')\n                                    .map((account, index) => (\n                                        <div key={index} className='acc-switcher__new-account'>\n                                            <Icon icon='IcDeriv' size={24} />\n                                            <Text size='xs' color='general' className='acc-switcher__new-account-text'>\n                                                {getAccountTitle(\n                                                    account,\n                                                    { account_residence: client_residence },\n                                                    country_standpoint\n                                                )}\n                                            </Text>\n                                            <Button\n                                                id='dt_core_account-switcher_add-new-account'\n                                                onClick={() => {\n                                                    if (real_account_creation_unlock_date) {\n                                                        closeAccountsDialog();\n                                                        setShouldShowCooldownModal(true);\n                                                    } else {\n                                                        selectRegion('Non-EU');\n                                                        openRealAccountSignup('svg');\n                                                    }\n                                                }}\n                                                className='acc-switcher__new-account-btn'\n                                                secondary\n                                                small\n                                            >\n                                                {localize('Add')}\n                                            </Button>\n                                        </div>\n                                    ))}\n                        </AccountWrapper>\n                        <div className='acc-switcher__separator' />\n                    </React.Fragment>\n                ) : null}\n                {!is_high_risk || is_eu ? (\n                    <AccountWrapper\n                        header={\n                            is_low_risk\n                                ? localize(`EU Deriv ${have_more_accounts('MF') ? 'accounts' : 'account'}`)\n                                : localize(`Deriv ${have_more_accounts('MF') ? 'accounts' : 'account'}`)\n                        }\n                        is_visible={is_eu_regulator_visible}\n                        toggleVisibility={() => {\n                            toggleVisibility('real_deriv');\n                        }}\n                    >\n                        <div className='acc-switcher__accounts'>\n                            {getSortedAccountList(account_list, accounts)\n                                .filter(account => !account.is_virtual && account.loginid.startsWith('MF'))\n                                .map(account => {\n                                    return (\n                                        <AccountList\n                                            account_type={account_type}\n                                            is_dark_mode_on={is_dark_mode_on}\n                                            key={account.loginid}\n                                            balance={accounts[account.loginid].balance}\n                                            currency={accounts[account.loginid].currency}\n                                            currency_icon={`IcCurrency-${account.icon}`}\n                                            country_standpoint={country_standpoint}\n                                            display_type={'currency'}\n                                            has_balance={'balance' in accounts[account.loginid]}\n                                            is_disabled={account.is_disabled}\n                                            is_virtual={account.is_virtual}\n                                            is_eu={is_eu}\n                                            loginid={account.loginid}\n                                            redirectAccount={\n                                                account.is_disabled ? undefined : () => doSwitch(account.loginid)\n                                            }\n                                            selected_loginid={account_loginid}\n                                            should_show_server_name={checkMultipleSvgAcc()}\n                                        />\n                                    );\n                                })}\n                        </div>\n                        {getRemainingRealAccounts()\n                            .filter(account => account === 'maltainvest')\n                            .map((account, index) => {\n                                return (\n                                    <div key={index} className='acc-switcher__new-account'>\n                                        <Icon icon='IcDeriv' size={24} />\n                                        <Text size='xs' color='general' className='acc-switcher__new-account-text'>\n                                            {getAccountTitle(\n                                                account,\n                                                { account_residence: client_residence },\n                                                country_standpoint\n                                            )}\n                                        </Text>\n                                        <Button\n                                            id='dt_core_account-switcher_add-new-account'\n                                            onClick={() => {\n                                                if (real_account_creation_unlock_date) {\n                                                    closeAccountsDialog();\n                                                    setShouldShowCooldownModal(true);\n                                                } else {\n                                                    selectRegion('EU');\n                                                    openRealAccountSignup('maltainvest');\n                                                }\n                                            }}\n                                            className='acc-switcher__new-account-btn'\n                                            secondary\n                                            small\n                                        >\n                                            {localize('Add')}\n                                        </Button>\n                                    </div>\n                                );\n                            })}\n                    </AccountWrapper>\n                ) : null}\n            </React.Fragment>\n        </div>\n    );\n\n    const first_real_login_id = account_list?.find(account => /^(CR|MF)/.test(account.loginid))?.loginid;\n\n    const TradersHubRedirect = () => {\n        const TradersHubLink = () => {\n            const handleRedirect = async () => {\n                if (!is_virtual && isDemoAccountTab) {\n                    await switchAccount(virtual_account_loginid);\n                } else if (is_virtual && isRealAccountTab) {\n                    await switchAccount(first_real_login_id);\n                }\n                toggleAccountsDialog(false);\n                history.push(routes.traders_hub);\n                setTogglePlatformType('cfd');\n            };\n\n            return (\n                <React.Fragment>\n                    <div className='acc-switcher__traders-hub'>\n                        <BinaryLink onClick={handleRedirect} className='acc-switcher__traders-hub--link'>\n                            <Text size='xs' align='center' className='acc-switcher__traders-hub--text'>\n                                <Localize i18n_default_text=\"Looking for CFD accounts? Go to Trader's Hub\" />\n                            </Text>\n                        </BinaryLink>\n                    </div>\n                    <div className='acc-switcher__separator' />\n                </React.Fragment>\n            );\n        };\n\n        if ((isRealAccountTab && has_any_real_account) || isDemoAccountTab) {\n            return <TradersHubLink />;\n        }\n\n        return null;\n    };\n\n    return (\n        <div className='acc-switcher__list' ref={wrapper_ref} data-testid='acc-switcher'>\n            {is_landing_company_loaded ? (\n                <React.Fragment>\n                    <Tabs\n                        active_index={active_tab_index}\n                        className='acc-switcher__list-tabs'\n                        onTabItemClick={index => setActiveTabIndex(index)}\n                        top\n                    >\n                        {/* TODO: De-couple and refactor demo and real accounts groups\n                        into a single reusable AccountListItem component */}\n                        <div label={localize('Real')} id='real_account_tab'>\n                            <DesktopWrapper>\n                                <ThemedScrollbars height='354px'>{real_accounts}</ThemedScrollbars>\n                            </DesktopWrapper>\n                            <MobileWrapper>\n                                <Div100vhContainer\n                                    className='acc-switcher__list-container'\n                                    max_autoheight_offset='234px'\n                                >\n                                    {real_accounts}\n                                </Div100vhContainer>\n                            </MobileWrapper>\n                        </div>\n                        <div label={localize('Demo')} id='dt_core_account-switcher_demo-tab'>\n                            <DesktopWrapper>\n                                <ThemedScrollbars height='354px'>{demo_account}</ThemedScrollbars>\n                            </DesktopWrapper>\n                            <MobileWrapper>\n                                <Div100vhContainer\n                                    className='acc-switcher__list-container'\n                                    max_autoheight_offset='234px'\n                                >\n                                    {demo_account}\n                                </Div100vhContainer>\n                            </MobileWrapper>\n                        </div>\n                    </Tabs>\n                    <div\n                        className={classNames('acc-switcher__separator', {\n                            'acc-switcher__separator--auto-margin': is_mobile,\n                        })}\n                    />\n                    <div className='acc-switcher__total'>\n                        <Text line_height='s' size='xs' weight='bold' color='prominent'>\n                            <Localize i18n_default_text='Total assets' />\n                        </Text>\n                        <Text size='xs' color='prominent' className='acc-switcher__balance'>\n                            <Money\n                                currency={isRealAccountTab ? account_total_balance_currency : vrtc_currency}\n                                amount={formatMoney(\n                                    isRealAccountTab ? account_total_balance_currency : vrtc_currency,\n                                    isRealAccountTab ? getTotalRealAssets() : getTotalDemoAssets(),\n                                    true\n                                )}\n                                show_currency\n                                should_format={false}\n                            />\n                        </Text>\n                    </div>\n                    <Text color='less-prominent' line_height='xs' size='xxxs' className='acc-switcher__total-subtitle'>\n                        {localize('Total assets in your Deriv accounts.')}\n                    </Text>\n                    <div className='acc-switcher__separator' />\n\n                    <TradersHubRedirect />\n\n                    <div className='acc-switcher__footer'>\n                        {isRealAccountTab && has_active_real_account && !is_virtual && (\n                            <Button\n                                className='acc-switcher__btn--traders_hub'\n                                secondary\n                                onClick={\n                                    has_any_real_account && (!hasSetCurrency || !currency)\n                                        ? setAccountCurrency\n                                        : () => openRealAccountSignup('manage')\n                                }\n                            >\n                                {localize('Manage accounts')}\n                            </Button>\n                        )}\n                        <div id='dt_logout_button' className='acc-switcher__logout' onClick={handleLogout}>\n                            <Text color='prominent' size='xs' align='left' className='acc-switcher__logout-text'>\n                                {localize('Log out')}\n                            </Text>\n                            <Icon\n                                icon='IcLogout'\n                                className='acc-switcher__logout-icon drawer__icon'\n                                onClick={handleLogout}\n                            />\n                        </div>\n                    </div>\n                </React.Fragment>\n            ) : (\n                <Loading is_fullscreen={false} />\n            )}\n        </div>\n    );\n});\n\nAccountSwitcher.propTypes = {\n    is_visible: PropTypes.bool,\n    history: PropTypes.object,\n};\n\nexport default withRouter(AccountSwitcher);\n","import AccountSwitcher from './account-switcher';\n\nexport default AccountSwitcher;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Div100vhContainer, Modal } from '@deriv/components';\nimport AccountSwitcher from 'App/Containers/AccountSwitcher';\n\nconst AccountSwitcherMobile = props => {\n    const { disableApp, enableApp, is_visible, is_upgrade_enabled, toggle } = props;\n    return (\n        <Modal\n            id='dt_account_switcher_modal'\n            className='accounts-switcher'\n            enableApp={enableApp}\n            is_open={is_visible}\n            is_vertical_top\n            disableApp={disableApp}\n            has_close_icon={false}\n            toggleModal={toggle}\n            height='auto'\n            width='calc(100vw - 32px)'\n        >\n            <Div100vhContainer\n                className={classNames('acc-switcher__wrapper', 'acc-switcher__wrapper--is-mobile')}\n                max_autoheight_offset='48px'\n            >\n                <AccountSwitcher is_mobile is_visible={true} toggle={toggle} is_upgrade_enabled={is_upgrade_enabled} />\n            </Div100vhContainer>\n        </Modal>\n    );\n};\n\nAccountSwitcherMobile.propTypes = {\n    children: PropTypes.any,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_visible: PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    title: PropTypes.string,\n    toggle: PropTypes.func,\n    visible: PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default AccountSwitcherMobile;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TAccountInfoIcon = {\n    is_virtual?: boolean;\n    currency?: string;\n};\n\nconst AccountInfoIcon = ({ is_virtual, currency }: TAccountInfoIcon) => (\n    <Icon\n        data_testid='dt_icon'\n        icon={`IcCurrency-${is_virtual ? 'virtual' : currency ?? 'Unknown'}`}\n        className={`acc-info__id-icon acc-info__id-icon--${is_virtual ? 'virtual' : currency}`}\n        size={24}\n    />\n);\n\nexport default AccountInfoIcon;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\n\ntype TDisplayAccountType = {\n    account_type: string;\n    country_standpoint: {\n        is_isle_of_man?: boolean;\n        is_united_kingdom?: boolean;\n        is_belgium?: boolean;\n    };\n    is_eu: boolean;\n};\n\nconst DisplayAccountType = ({ account_type, country_standpoint, is_eu }: TDisplayAccountType) => {\n    if (account_type === 'financial') {\n        return <Localize i18n_default_text='Multipliers' />;\n    } else if (account_type === 'gaming') {\n        if (country_standpoint.is_isle_of_man) return null;\n        if (country_standpoint.is_united_kingdom) {\n            return <Localize i18n_default_text='Gaming' />;\n        }\n        if (is_eu || country_standpoint.is_belgium) {\n            return <Localize i18n_default_text='Options' />;\n        }\n        return <Localize i18n_default_text='Derived' />;\n    }\n    return null;\n};\n\nexport default DisplayAccountType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { DesktopWrapper, Icon, MobileWrapper, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport AccountSwitcher from 'App/Containers/AccountSwitcher';\nimport AccountSwitcherMobile from 'App/Containers/AccountSwitcher/account-switcher-mobile';\nimport AccountInfoWrapper from './account-info-wrapper';\nimport AccountInfoIcon from './account-info-icon';\nimport DisplayAccountType from './display-account-type';\n\nconst AccountInfo = ({\n    acc_switcher_disabled_message,\n    account_type = '',\n    balance,\n    currency,\n    country_standpoint,\n    disableApp,\n    enableApp,\n    is_dialog_on,\n    is_eu,\n    is_virtual,\n    toggleDialog,\n    is_disabled,\n    is_mobile,\n}) => {\n    const currency_lower = currency?.toLowerCase();\n\n    return (\n        <div className='acc-info__wrapper'>\n            <div className='acc-info__separator' />\n            <AccountInfoWrapper\n                is_disabled={is_disabled}\n                disabled_message={acc_switcher_disabled_message}\n                is_mobile={is_mobile}\n            >\n                <div\n                    data-testid='dt_acc_info'\n                    id='dt_core_account-info_acc-info'\n                    className={classNames('acc-info', {\n                        'acc-info--show': is_dialog_on,\n                        'acc-info--is-virtual': is_virtual,\n                        'acc-info--is-disabled': is_disabled,\n                    })}\n                    onClick={is_disabled ? undefined : () => toggleDialog()}\n                >\n                    <span className='acc-info__id'>\n                        <DesktopWrapper>\n                            <AccountInfoIcon is_virtual={is_virtual} currency={currency_lower} />\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            {(is_virtual || currency) && (\n                                <AccountInfoIcon is_virtual={is_virtual} currency={currency_lower} />\n                            )}\n                        </MobileWrapper>\n                    </span>\n                    {(typeof balance !== 'undefined' || !currency) && (\n                        <div className='acc-info__account-type-and-balance'>\n                            <p\n                                data-testid='dt_balance'\n                                className={classNames('acc-info__balance', {\n                                    'acc-info__balance--no-currency': !currency && !is_virtual,\n                                })}\n                            >\n                                {!currency ? (\n                                    <Localize i18n_default_text='No currency assigned' />\n                                ) : (\n                                    `${balance} ${getCurrencyDisplayCode(currency)}`\n                                )}\n                            </p>\n                            <Text size='xxxs' line_height='s'>\n                                <DisplayAccountType\n                                    account_type={account_type}\n                                    country_standpoint={country_standpoint}\n                                    is_eu={is_eu}\n                                />\n                            </Text>\n                        </div>\n                    )}\n                    {is_disabled ? (\n                        <Icon data_testid='dt_lock_icon' icon='IcLock' />\n                    ) : (\n                        <Icon\n                            data_testid='dt_select_arrow'\n                            icon='IcChevronDownBold'\n                            className='acc-info__select-arrow'\n                        />\n                    )}\n                </div>\n            </AccountInfoWrapper>\n            <MobileWrapper>\n                <AccountSwitcherMobile\n                    is_visible={is_dialog_on}\n                    disableApp={disableApp}\n                    enableApp={enableApp}\n                    toggle={toggleDialog}\n                />\n            </MobileWrapper>\n            <DesktopWrapper>\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={200}\n                    classNames={{\n                        enter: 'acc-switcher__wrapper--enter',\n                        enterDone: 'acc-switcher__wrapper--enter-done',\n                        exit: 'acc-switcher__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='acc-switcher__wrapper'>\n                        <AccountSwitcher is_visible={is_dialog_on} toggle={toggleDialog} />\n                    </div>\n                </CSSTransition>\n            </DesktopWrapper>\n        </div>\n    );\n};\n\nAccountInfo.propTypes = {\n    acc_switcher_disabled_message: PropTypes.string,\n    account_type: PropTypes.string,\n    balance: PropTypes.string,\n    currency: PropTypes.string,\n    country_standpoint: PropTypes.object,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_dialog_on: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    is_eu: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    is_mobile: PropTypes.bool,\n    loginid: PropTypes.string,\n    toggleDialog: PropTypes.func,\n};\n\nexport default AccountInfo;\n","import { matchPath } from 'react-router';\nimport { routes } from '@deriv/shared';\n\nexport const normalizePath = path => (/^\\//.test(path) ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) => !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = contract_id => getPath(routes.contract, { contract_id });\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PlatformContext } from '@deriv/shared';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\nimport { observer, useStore } from '@deriv/stores';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = observer(({ active_class, to, children, href, ...props }) => {\n    const platform_context = React.useContext(PlatformContext);\n    const { common } = useStore();\n    const { has_error, error } = common;\n    const setError = error.setError;\n    const is_appstore = platform_context?.is_appstore;\n    const path = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig({ is_appstore }));\n\n    if (!route && to) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return to && !href ? (\n        <span\n            data-testid='dt_span'\n            className={classNames({\n                [`${active_class}__link-wrapper`]: !!active_class,\n            })}\n            onClick={() => {\n                if (has_error) setError(false, null);\n            }}\n        >\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n        </span>\n    ) : (\n        <a data-testid='dt_link' {...props}>\n            {children}\n        </a>\n    );\n});\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    href: PropTypes.string,\n    to: PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon } from '@deriv/components';\nimport { getAllowedLanguages } from '@deriv/translations';\n\nexport type TLanguageLink = {\n    icon_classname?: string;\n    is_clickable?: boolean;\n    lang: string;\n    toggleModal?: () => void;\n};\n\nconst LanguageLink = observer(({ icon_classname, is_clickable = false, lang, toggleModal }: TLanguageLink) => {\n    const { common } = useStore();\n    const { changeSelectedLanguage, current_language } = common;\n    const is_active = current_language === lang;\n\n    const link: React.ReactNode = (\n        <React.Fragment>\n            <Icon\n                icon={`IcFlag${lang.replace('_', '-')}`}\n                className={classNames(\n                    'settings-language__language-link-flag',\n                    'settings-language__language-flag',\n                    icon_classname\n                )}\n            />\n            <span\n                className={classNames('settings-language__language-name', {\n                    'settings-language__language-name--active': is_active,\n                })}\n            >\n                {getAllowedLanguages()[lang]}\n            </span>\n        </React.Fragment>\n    );\n    return (\n        <React.Fragment>\n            {!is_clickable ? (\n                <div\n                    id={`dt_settings_${lang}_button`}\n                    className={classNames('settings-language__language-link', {\n                        'settings-language__language-link--active': is_active,\n                    })}\n                >\n                    {link}\n                </div>\n            ) : (\n                <span\n                    data-testid='dt_settings_language_button'\n                    id={`dt_settings_${lang}_button`}\n                    key={lang}\n                    onClick={() => {\n                        changeSelectedLanguage(lang);\n                        toggleModal?.();\n                    }}\n                    className={classNames('settings-language__language-link', {\n                        'settings-language__language-link--active': is_active,\n                    })}\n                >\n                    {link}\n                </span>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default LanguageLink;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    removeBranchName,\n    routes,\n    isEmptyObject,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport Page404 from 'Modules/Page404';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RouteWithSubRoutes = observer(route => {\n    const { common } = useStore();\n    const { checkAppId } = common;\n    const validateRoute = pathname => {\n        if (pathname.startsWith('/cashier') && !pathname.includes('p2p') && !!route.routes) {\n            return route.path === pathname || !!route?.routes.find(({ path }) => pathname === path);\n        } else if (pathname.includes('p2p') && !!route.routes) {\n            const cashier_subroutes = route?.routes.find(({ path }) => path === '/cashier/p2p');\n            const p2p_subroutes =\n                pathname === '/cashier/p2p'\n                    ? routes.p2p_buy_sell\n                    : cashier_subroutes?.routes.find(({ path }) => pathname === path);\n\n            return route.path === pathname || !!p2p_subroutes;\n        }\n        return true;\n    };\n\n    const renderFactory = props => {\n        let result = null;\n        const pathname = removeBranchName(location.pathname).replace(/\\/$/, '');\n        const is_valid_route = validateRoute(pathname);\n\n        // check if by re-rendering content should Platform app_id  change or not,\n        if (is_valid_route) {\n            checkAppId();\n        }\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (is_valid_route && route.is_authenticated && !route.is_logged_in && !route.is_logging_in) {\n            if (window.localStorage.getItem('is_redirecting') === 'true') {\n                window.localStorage.removeItem('is_redirecting');\n                redirectToLogin(route.is_logged_in, getLanguage(), true, 3000);\n            } else {\n                redirectToLogin(route.is_logged_in, getLanguage());\n            }\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    {is_valid_route ? (\n                        <route.component {...props} routes={route.routes} passthrough={route.passthrough} />\n                    ) : (\n                        <Page404 />\n                    )}\n                </React.Fragment>\n            );\n        }\n\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n});\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch, Prompt, useLocation } from 'react-router-dom';\nimport { Loading } from '@deriv/components';\nimport { PlatformContext } from '@deriv/shared';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst BinaryRoutes = observer(props => {\n    const { ui, gtm, client } = useStore();\n    const { promptFn, prompt_when } = ui;\n    const { pushDataLayer } = gtm;\n    const { is_eu } = client;\n    const location = useLocation();\n    const { is_appstore } = React.useContext(PlatformContext);\n    React.useEffect(() => {\n        pushDataLayer({ event: 'page_load' });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [location]);\n\n    const is_eu_country = is_eu;\n\n    return (\n        <React.Suspense fallback={<Loading />}>\n            <Prompt when={prompt_when} message={promptFn} />\n            <Switch>\n                {getRoutesConfig({ is_appstore, is_eu_country }).map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))}\n            </Switch>\n        </React.Suspense>\n    );\n});\n\nexport default BinaryRoutes;\n","import BinaryLink from './binary-link.jsx';\nimport LanguageLink from './language-link';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\nimport BinaryRoutes from './binary-routes.jsx';\n\nexport * from './helpers';\nexport { BinaryLink, LanguageLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { loginUrl, routes, redirectToLogin, SessionStore, PlatformContext } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { getLanguage } from '@deriv/translations';\nimport { WS } from 'Services';\nimport { Analytics } from '@deriv/analytics';\n\nconst Redirect = observer(() => {\n    const history = useHistory();\n    const { client, ui } = useStore();\n\n    const { currency, is_logged_in, is_logging_in, setNewEmail, setVerificationCode, verification_code } = client;\n\n    const {\n        openRealAccountSignup,\n        setResetTradingPasswordModalOpen,\n        toggleAccountSignupModal,\n        toggleResetPasswordModal,\n        toggleResetEmailModal,\n        toggleUpdateEmailModal,\n        is_mobile,\n    } = ui;\n\n    const url_query_string = window.location.search;\n    const url_params = new URLSearchParams(url_query_string);\n    let redirected_to_route = false;\n    const action_param = url_params.get('action');\n    const code_param = url_params.get('code') || verification_code[action_param];\n    const ext_platform_url = url_params.get('ext_platform_url');\n    const is_next_wallet = localStorage.getObject('FeatureFlagsStore')?.data?.next_wallet;\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    const redirectToExternalPlatform = url => {\n        history.push(`${routes.root}?ext_platform_url=${url}`);\n        redirected_to_route = true;\n    };\n    setVerificationCode(code_param, action_param);\n    setNewEmail(url_params.get('email'), action_param);\n\n    switch (action_param) {\n        case 'signup': {\n            if (!is_appstore) {\n                Analytics.trackEvent('ce_virtual_signup_form', {\n                    action: 'email_confirmed',\n                    form_name: is_mobile ? 'virtual_signup_web_mobile_default' : 'virtual_signup_web_desktop_default',\n                    email: url_params.get('email'),\n                });\n            }\n            SessionStore.set('signup_query_param', url_query_string);\n            history.push({\n                pathname: routes.onboarding,\n                search: url_query_string,\n            });\n            SessionStore.remove('redirect_url');\n            redirected_to_route = true;\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'reset_password': {\n            toggleResetPasswordModal(true);\n            break;\n        }\n        case 'request_email': {\n            toggleResetEmailModal(true);\n            break;\n        }\n        case 'social_email_change': {\n            toggleResetPasswordModal(true);\n            break;\n        }\n        case 'system_email_change': {\n            toggleUpdateEmailModal(true);\n            break;\n        }\n        case 'trading_platform_mt5_password_reset':\n        case 'trading_platform_dxtrade_password_reset': {\n            const reset_code_key = `${action_param}_code`;\n            if (!is_logging_in && !is_logged_in) {\n                if (verification_code[action_param]) {\n                    sessionStorage.setItem(reset_code_key, verification_code[action_param]);\n                }\n                redirectToLogin(is_logged_in, getLanguage());\n                redirected_to_route = true;\n                break;\n            }\n            if (!verification_code[action_param]) {\n                const reset_code = sessionStorage.getItem(reset_code_key);\n                setVerificationCode(reset_code, action_param);\n                sessionStorage.removeItem(reset_code_key);\n            }\n            const redirect_to = url_params.get('redirect_to');\n\n            if (redirect_to) {\n                let pathname = '';\n                let hash = '';\n                switch (redirect_to) {\n                    case '1':\n                        pathname = routes.traders_hub;\n                        break;\n                    case '10':\n                        pathname = routes.traders_hub;\n                        hash = 'real';\n                        break;\n                    case '11':\n                        pathname = routes.traders_hub;\n                        hash = 'demo';\n                        break;\n                    case '2':\n                        pathname = routes.traders_hub;\n                        break;\n                    case '20':\n                        pathname = routes.traders_hub;\n                        hash = 'real';\n                        break;\n                    case '21':\n                        pathname = routes.traders_hub;\n                        hash = 'demo';\n                        break;\n                    case '3':\n                        pathname = routes.passwords;\n                        break;\n                    default:\n                        break;\n                }\n\n                if (pathname) {\n                    history.push({\n                        pathname,\n                        hash,\n                        search: url_query_string,\n                    });\n                    redirected_to_route = true;\n                }\n            }\n\n            setResetTradingPasswordModalOpen(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            if (is_next_wallet) {\n                // passes verification_code through query param as we do not want to use localstorage/session storage\n                // though can't use \"verification_code\" as name param\n                // as there is general logic within client-store\n                // which removes anything which resembles code=XYZ\n                history.push(`${routes.wallets_withdrawal}?verification=${verification_code?.payment_withdraw}`);\n            } else {\n                history.push(routes.cashier_withdrawal);\n            }\n            redirected_to_route = true;\n            break;\n        }\n        case 'payment_agent_withdraw': {\n            history.push(routes.cashier_pa);\n            redirected_to_route = true;\n            break;\n        }\n        case 'add_account': {\n            WS.wait('get_account_status').then(() => {\n                if (!currency) return openRealAccountSignup('set_currency');\n                return openRealAccountSignup('svg');\n            });\n            if (ext_platform_url) redirectToExternalPlatform(ext_platform_url);\n            break;\n        }\n        case 'add_account_multiplier': {\n            WS.wait('get_account_status').then(() => {\n                if (!currency) return openRealAccountSignup('set_currency');\n                return openRealAccountSignup('maltainvest');\n            });\n            if (ext_platform_url) redirectToExternalPlatform(ext_platform_url);\n            break;\n        }\n        case 'manage_account': {\n            WS.wait('get_account_status').then(() => {\n                return openRealAccountSignup('manage');\n            });\n            if (ext_platform_url) redirectToExternalPlatform(ext_platform_url);\n            break;\n        }\n        case 'verification': {\n            // Removing this will break mobile DP2P app. Do not remove.\n            sessionStorage.setItem('redirect_url', routes.p2p_verification);\n            const new_href = loginUrl({\n                language: getLanguage(),\n            });\n            window.location.href = new_href;\n            break;\n        }\n        case 'trading_platform_investor_password_reset': {\n            localStorage.setItem('cfd_reset_password_code', code_param);\n            const is_demo = localStorage.getItem('cfd_reset_password_intent')?.includes('demo');\n            history.push(`${routes.traders_hub}#${is_demo ? 'demo' : 'real'}#reset-password`);\n            redirected_to_route = true;\n            break;\n        }\n        case 'p2p_order_confirm': {\n            history.push({\n                pathname: routes.cashier_p2p,\n                search: url_query_string,\n            });\n            redirected_to_route = true;\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    if (!redirected_to_route && history.location.pathname !== routes.root) {\n        history.push({\n            pathname: routes.root,\n            search: url_query_string,\n        });\n    }\n\n    return null;\n});\n\nRedirect.propTypes = {\n    history: PropTypes.object,\n};\n\nexport default withRouter(Redirect);\n","import Redirect from './redirect.jsx';\n\nexport default Redirect;\n","import React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { Button, Input, Checkbox, Text } from '@deriv/components';\nimport {\n    getDebugServiceWorker,\n    getAppId,\n    getSocketURL,\n    PlatformContext,\n    isMobile,\n    website_domain,\n    TRADE_FEATURE_FLAGS,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\nconst FeatureFlagsSection = observer(() => {\n    const { feature_flags } = useStore();\n    const HIDDEN_FEATURE_FLAGS = ['wallet'];\n\n    const visible_feature_flags = Object.entries(feature_flags.data ?? {})?.reduce(\n        (flags, [key, value]) => {\n            const is_production = location.hostname === website_domain;\n            if ((!is_production || !TRADE_FEATURE_FLAGS.includes(key)) && !HIDDEN_FEATURE_FLAGS.includes(key)) {\n                flags[key] = value;\n            }\n            return flags;\n        },\n        {} // hiding flags for trade types in production\n    );\n    if (!feature_flags.data) return null;\n\n    return (\n        <div style={{ marginTop: '4rem' }}>\n            <Text as='h1' weight='bold' color='prominent'>\n                Feature flags\n            </Text>\n            {Object.keys(visible_feature_flags).map(flag => (\n                <div key={flag} style={{ marginTop: '1.6rem' }}>\n                    <Checkbox\n                        label={flag}\n                        value={visible_feature_flags[flag]}\n                        onChange={e => feature_flags.update(old => ({ ...old, [flag]: e.target.checked }))}\n                    />\n                </div>\n            ))}\n        </div>\n    );\n});\n\nconst InputField = props => {\n    return (\n        <Field name={props.name}>\n            {({ field, form: { errors, touched } }) => (\n                <React.Fragment>\n                    <Input\n                        type='text'\n                        autoComplete='off'\n                        maxLength='30'\n                        error={touched[field.name] && errors[field.name]}\n                        {...field}\n                        {...props}\n                    />\n                </React.Fragment>\n            )}\n        </Field>\n    );\n};\n\n// doesn't need localization as it's for internal use\nconst Endpoint = () => {\n    const platform_store = React.useContext(PlatformContext);\n\n    return (\n        <Formik\n            initialValues={{\n                app_id: getAppId(),\n                server: getSocketURL(),\n                is_appstore_enabled: platform_store.is_appstore,\n                is_debug_service_worker_enabled: !!getDebugServiceWorker(),\n            }}\n            validate={values => {\n                const errors = {};\n\n                if (!values.app_id) {\n                    errors.app_id = 'App ID is required.';\n                } else if (!/^\\d+$/.test(values.app_id)) {\n                    errors.app_id = 'Please enter a valid app ID.';\n                }\n\n                if (!values.server) {\n                    errors.server = 'Server is required.';\n                }\n\n                return errors;\n            }}\n            onSubmit={values => {\n                localStorage.setItem('config.app_id', values.app_id);\n                localStorage.setItem('config.server_url', values.server);\n                localStorage.setItem(platform_store.DERIV_APPSTORE_KEY, values.is_appstore_enabled);\n                localStorage.setItem('debug_service_worker', values.is_debug_service_worker_enabled ? 1 : 0);\n                platform_store.setIsAppStore(values.is_appstore_enabled);\n                sessionStorage.removeItem('config.platform');\n                location.reload();\n            }}\n        >\n            {({ errors, isSubmitting, touched, values, handleChange, setFieldTouched }) => (\n                <Form style={{ width: '30vw', minWidth: '300px', margin: isMobile() ? 'auto' : '20vh auto' }}>\n                    <div\n                        style={{\n                            marginBottom: '1.6rem',\n                        }}\n                    >\n                        <Text as='h1' weight='bold' color='prominent'>\n                            Change API endpoint\n                        </Text>\n                    </div>\n\n                    <InputField name='server' label='Server' hint='e.g. frontend.derivws.com' />\n                    <InputField\n                        name='app_id'\n                        label='OAuth App ID'\n                        hint={\n                            <React.Fragment>\n                                Register an{' '}\n                                <a\n                                    href='https://developers.binary.com/applications/'\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    app ID\n                                </a>{' '}\n                                to use the above server for logging in.\n                            </React.Fragment>\n                        }\n                    />\n                    <Field name='is_appstore_enabled'>\n                        {({ field }) => (\n                            <div style={{ marginTop: '4.5rem', marginBottom: '1.6rem' }}>\n                                <Checkbox\n                                    {...field}\n                                    label='Enable Appstore'\n                                    value={values.is_appstore_enabled}\n                                    onChange={e => {\n                                        handleChange(e);\n                                        setFieldTouched('is_appstore_enabled', true);\n                                    }}\n                                />\n                            </div>\n                        )}\n                    </Field>\n                    <Field name='is_debug_service_worker_enabled'>\n                        {({ field }) => (\n                            <div style={{ marginTop: '4.5rem', marginBottom: '1.6rem' }}>\n                                <Checkbox\n                                    {...field}\n                                    label='Enable Service Worker registration for this URL'\n                                    value={values.is_debug_service_worker_enabled}\n                                    onChange={e => {\n                                        handleChange(e);\n                                        setFieldTouched('is_debug_service_worker_enabled', true);\n                                    }}\n                                />\n                            </div>\n                        )}\n                    </Field>\n                    <Button\n                        type='submit'\n                        is_disabled={\n                            !!(\n                                (!touched.server &&\n                                    !touched.app_id &&\n                                    !touched.is_appstore_enabled &&\n                                    !touched.is_debug_service_worker_enabled) ||\n                                !values.server ||\n                                !values.app_id ||\n                                errors.server ||\n                                errors.app_id ||\n                                isSubmitting\n                            )\n                        }\n                        text='Submit'\n                        primary\n                    />\n                    <span style={{ marginLeft: '1.6rem' }} />\n                    <Button\n                        type='button'\n                        onClick={() => {\n                            localStorage.removeItem('config.app_id');\n                            localStorage.removeItem('config.server_url');\n                            location.reload();\n                        }}\n                        text='Reset to original settings'\n                        secondary\n                    />\n                    <FeatureFlagsSection />\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default Endpoint;\n","import Endpoint from './Endpoint.jsx';\n\nexport default Endpoint;\n","import React from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { makeLazyLoader, routes, moduleLoader } from '@deriv/shared';\nimport { Loading } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport Redirect from 'App/Containers/Redirect';\nimport Endpoint from 'Modules/Endpoint';\nimport CFDCompareAccounts from '@deriv/cfd/src/Containers/cfd-compare-accounts';\n\n// Error Routes\nconst Page404 = React.lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst Trader = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"trader\" */ '@deriv/trader');\n    })\n);\n\nconst Reports = React.lazy(() => {\n    // eslint-disable-next-line import/no-unresolved\n    return import(/* webpackChunkName: \"reports\" */ '@deriv/reports');\n});\n\nconst CFD = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"cfd\" */ '@deriv/cfd');\n    })\n);\n\nconst Account = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"account\" */ '@deriv/account');\n    })\n);\n\nconst Cashier = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"cashier\" */ '@deriv/cashier');\n    })\n);\n\nconst Bot = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"bot-web-ui-app\" */ '@deriv/bot-web-ui');\n    })\n);\n\nconst AppStore = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"appstore\" */ '@deriv/appstore');\n    })\n);\n\nconst Wallets = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"wallets\" */ '@deriv/wallets');\n    })\n);\n\nconst TradersHub = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"tradershub\" */ '@deriv/tradershub');\n    })\n);\n\nconst P2P = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"p2p\" */ '@deriv/p2p');\n    })\n);\n\nconst P2P_V2 = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"p2p-v2\" */ '@deriv/p2p-v2');\n    })\n);\nconst getModules = () => {\n    const modules = [\n        {\n            path: routes.bot,\n            component: Bot,\n            // Don't use `Localize` component since native html tag like `option` cannot render them\n            getTitle: () => localize('Bot'),\n        },\n        {\n            path: routes.reports,\n            component: Reports,\n            getTitle: () => localize('Reports'),\n            icon_component: 'IcReports',\n            is_authenticated: true,\n            routes: [\n                {\n                    path: routes.positions,\n                    component: Reports,\n                    getTitle: () => localize('Open positions'),\n                    icon_component: 'IcOpenPositions',\n                    default: true,\n                },\n                {\n                    path: routes.profit,\n                    component: Reports,\n                    getTitle: () => localize('Trade table'),\n                    icon_component: 'IcProfitTable',\n                },\n                {\n                    path: routes.statement,\n                    component: Reports,\n                    getTitle: () => localize('Statement'),\n                    icon_component: 'IcStatement',\n                },\n            ],\n        },\n        {\n            path: routes.dxtrade,\n            component: props => <CFD {...props} platform='dxtrade' />,\n            getTitle: () => localize('Deriv X'),\n        },\n        {\n            path: routes.compare_cfds,\n            component: CFDCompareAccounts,\n            getTitle: () => localize('Compare CFD accounts'),\n        },\n        {\n            path: routes.mt5,\n            component: props => <CFD {...props} platform='mt5' />,\n            getTitle: () => localize('MT5'),\n        },\n        {\n            path: routes.account_closed,\n            component: Account,\n            getTitle: () => localize('Account deactivated'),\n        },\n        {\n            path: routes.account,\n            component: Account,\n            getTitle: () => localize('Account Settings'),\n            icon_component: 'IcUserOutline',\n            is_authenticated: true,\n            routes: [\n                {\n                    getTitle: () => localize('Profile'),\n                    icon: 'IcUserOutline',\n                    subroutes: [\n                        {\n                            path: routes.personal_details,\n                            component: Account,\n                            getTitle: () => localize('Personal details'),\n                            default: true,\n                        },\n\n                        {\n                            path: routes.languages,\n                            component: Account,\n                            getTitle: () => localize('Languages'),\n                        },\n                    ],\n                },\n                {\n                    getTitle: () => localize('Assessments'),\n                    icon: 'IcAssessment',\n                    subroutes: [\n                        {\n                            path: routes.trading_assessment,\n                            component: Account,\n                            getTitle: () => localize('Trading assessment'),\n                        },\n                        {\n                            path: routes.financial_assessment,\n                            component: Account,\n                            getTitle: () => localize('Financial assessment'),\n                        },\n                    ],\n                },\n                {\n                    getTitle: () => localize('Verification'),\n                    icon: 'IcVerification',\n                    subroutes: [\n                        {\n                            path: routes.proof_of_identity,\n                            component: Account,\n                            getTitle: () => localize('Proof of identity'),\n                        },\n                        {\n                            path: routes.proof_of_address,\n                            component: Account,\n                            getTitle: () => localize('Proof of address'),\n                        },\n                        {\n                            path: routes.proof_of_ownership,\n                            component: Account,\n                            getTitle: () => localize('Proof of ownership'),\n                        },\n                        {\n                            path: routes.proof_of_income,\n                            component: Account,\n                            getTitle: () => localize('Proof of income'),\n                        },\n                    ],\n                },\n                {\n                    getTitle: () => localize('Security and safety'),\n                    icon: 'IcSecurity',\n                    subroutes: [\n                        {\n                            path: routes.passwords,\n                            component: Account,\n                            getTitle: () => localize('Email and passwords'),\n                        },\n                        {\n                            path: routes.self_exclusion,\n                            component: Account,\n                            getTitle: () => localize('Self exclusion'),\n                        },\n                        {\n                            path: routes.account_limits,\n                            component: Account,\n                            getTitle: () => localize('Account limits'),\n                        },\n                        {\n                            path: routes.login_history,\n                            component: Account,\n                            getTitle: () => localize('Login history'),\n                        },\n                        {\n                            path: routes.api_token,\n                            component: Account,\n                            getTitle: () => localize('API token'),\n                        },\n                        {\n                            path: routes.connected_apps,\n                            component: Account,\n                            getTitle: () => localize('Connected apps'),\n                        },\n                        {\n                            path: routes.two_factor_authentication,\n                            component: Account,\n                            getTitle: () => localize('Two-factor authentication'),\n                        },\n                        {\n                            path: routes.closing_account,\n                            component: Account,\n                            getTitle: () => localize('Close your account'),\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            path: routes.traders_hub,\n            component: AppStore,\n            is_authenticated: true,\n            getTitle: () => localize(\"Trader's Hub\"),\n        },\n        {\n            path: routes.wallets,\n            component: Wallets,\n            is_authenticated: true,\n            getTitle: () => localize('Wallets'),\n        },\n        {\n            path: routes.cashier_p2p_v2,\n            component: P2P_V2,\n            getTitle: () => localize('P2P-V2'),\n            is_authenticated: true,\n        },\n        {\n            path: routes.traders_hub_v2,\n            component: TradersHub,\n            is_authenticated: true,\n            getTitle: () => localize('Trader’s Hub V2'),\n        },\n        {\n            path: routes.onboarding,\n            component: AppStore,\n            is_authenticated: false,\n            getTitle: () => localize('Appstore'),\n            routes: [\n                {\n                    path: routes.traders_hub,\n                    component: AppStore,\n                    getTitle: () => localize(\"Trader's Hub\"),\n                },\n                {\n                    path: routes.onboarding,\n                    component: AppStore,\n                    is_authenticated: false,\n                    getTitle: () => localize('Onboarding'),\n                },\n            ],\n        },\n        {\n            path: routes.cashier,\n            component: Cashier,\n            is_modal: true,\n            is_authenticated: true,\n            getTitle: () => localize('Cashier'),\n            icon_component: 'IcCashier',\n            routes: [\n                {\n                    path: routes.cashier_deposit,\n                    component: Cashier,\n                    getTitle: () => localize('Deposit'),\n                    icon_component: 'IcCashierAdd',\n                    default: true,\n                },\n                {\n                    path: routes.cashier_withdrawal,\n                    component: Cashier,\n                    getTitle: () => localize('Withdrawal'),\n                    icon_component: 'IcCashierMinus',\n                },\n                {\n                    path: routes.cashier_pa,\n                    component: Cashier,\n                    getTitle: () => localize('Payment agents'),\n                    icon_component: 'IcPaymentAgent',\n                },\n                {\n                    path: routes.cashier_acc_transfer,\n                    component: Cashier,\n                    getTitle: () => localize('Transfer'),\n                    icon_component: 'IcAccountTransfer',\n                },\n                {\n                    path: routes.cashier_pa_transfer,\n                    component: Cashier,\n                    getTitle: () => localize('Transfer to client'),\n                    icon_component: 'IcAccountTransfer',\n                },\n                {\n                    path: routes.cashier_p2p,\n                    component: Cashier,\n                    getTitle: () => localize('Deriv P2P'),\n                    icon_component: 'IcDp2p',\n                    routes: [\n                        {\n                            path: routes.p2p_buy_sell,\n                            component: P2P,\n                            getTitle: () => localize('Buy / Sell'),\n                            default: true,\n                        },\n                        {\n                            path: routes.p2p_advertiser_page,\n                            component: P2P,\n                            getTitle: () => localize(\"Advertiser's page\"),\n                        },\n                        {\n                            path: routes.p2p_orders,\n                            component: P2P,\n                            getTitle: () => localize('Orders'),\n                        },\n                        {\n                            path: routes.p2p_my_ads,\n                            component: P2P,\n                            getTitle: () => localize('My ads'),\n                        },\n                        {\n                            path: routes.p2p_my_profile,\n                            component: P2P,\n                            getTitle: () => localize('My profile'),\n                        },\n                        {\n                            path: routes.p2p_verification,\n                            component: P2P,\n                            getTitle: () => localize('P2P verification'),\n                        },\n                    ],\n                },\n                {\n                    id: 'gtm-onramp-tab',\n                    path: routes.cashier_onramp,\n                    component: Cashier,\n                    getTitle: () => localize('Fiat onramp'),\n                    icon_component: 'IcCashierOnRamp',\n                },\n                {\n                    path: routes.cashier_transactions_crypto,\n                    component: Cashier,\n                    is_invisible: true,\n                },\n            ],\n        },\n        {\n            path: routes.root,\n            component: Trader,\n            getTitle: () => localize('Trader'),\n            routes: [\n                {\n                    path: routes.contract,\n                    component: Trader,\n                    getTitle: () => localize('Contract Details'),\n                    is_authenticated: true,\n                },\n                { path: routes.error404, component: Trader, getTitle: () => localize('Error 404') },\n            ],\n        },\n    ];\n\n    return modules;\n};\n\nconst lazyLoadComplaintsPolicy = makeLazyLoader(\n    () => moduleLoader(() => import(/* webpackChunkName: \"complaints-policy\" */ 'Modules/ComplaintsPolicy')),\n    () => <Loading />\n);\n\n// Order matters\n// TODO: search tag: test-route-parent-info -> Enable test for getting route parent info when there are nested routes\nconst initRoutesConfig = ({ is_appstore, is_eu_country }) => [\n    { path: routes.index, component: RouterRedirect, getTitle: () => '', to: routes.root },\n    { path: routes.endpoint, component: Endpoint, getTitle: () => 'Endpoint' }, // doesn't need localization as it's for internal use\n    { path: routes.redirect, component: Redirect, getTitle: () => localize('Redirect') },\n    {\n        path: routes.complaints_policy,\n        component: lazyLoadComplaintsPolicy(),\n        getTitle: () => localize('Complaints policy'),\n        icon_component: 'IcComplaintsPolicy',\n        is_authenticated: true,\n    },\n    ...getModules({ is_appstore, is_eu_country }),\n];\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\n// is_deriv_crypto = true as default to prevent route ui blinking\nconst getRoutesConfig = ({ is_appstore = true, is_eu_country }) => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig({ is_appstore, is_eu_country });\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import { localize } from '@deriv/translations';\n\n/**\n * Experian result is defined by client's information validity.\n * Defines the possible types of actions needed to take on experian result response.\n *\n * Possible values are:\n *   - Success: Client can trade\n *   - Warn: POI/POA Validity partially failed, trade in demo possible\n *   - Danger: POI/POA validation failed. Trade is locked until this resolved.\n *   - Pending: POI/POA is in pending state.\n * @enum {EXPERIAN}\n */\nexport const EXPERIAN = {\n    SUCCESS: 1,\n    WARN: 0,\n    DANGER: -1,\n    PENDING: -2,\n};\n\n/**\n * Return account title for the given landing company\n * - Example:\n * getAccountTitle('malta') => 'Real Derived'\n *\n * @param {string} landing_company_shortcode\n * @param {object} options\n * @return {string} localized title\n */\nexport const getAccountTitle = (landing_company_shortcode, { account_residence = '' } = {}, country_standpoint) => {\n    // TODO: [deriv-eu] merge if statement and switch together once more residence cases are found.\n    if (account_residence === 'im') {\n        return localize('Deriv account');\n    }\n\n    switch (landing_company_shortcode) {\n        case 'svg':\n            return localize('Options & Multipliers');\n        case 'iom':\n            if (country_standpoint.is_united_kingdom) {\n                return localize('Deriv Gaming');\n            }\n            return localize('Derived');\n        case 'malta':\n            if (\n                country_standpoint.is_united_kingdom ||\n                country_standpoint.is_rest_of_eu ||\n                country_standpoint.is_belgium\n            ) {\n                return localize('Options');\n            }\n            return localize('Derived');\n        case 'maltainvest':\n            return localize('Multipliers');\n        default:\n            return localize('Deriv');\n    }\n};\n\n/**\n * @param {string} landing_company_shortcode\n * @param {boolean} is_fully_authenticated\n * @param {boolean} is_age_verified\n * @param {boolean} is_isle_of_man_residence\n * @param {boolean} is_belgium_residence,\n *\n * @return {EXPERIAN.WARN|EXPERIAN.SUCCESS|EXPERIAN.DANGER}\n */\nexport const getExperianResult = status => {\n    const {\n        landing_company_shortcode = '',\n        is_fully_authenticated = false,\n        is_age_verified = false,\n        is_isle_of_man_residence = false,\n        is_belgium_residence = false,\n    } = status;\n    const getIOMStatus = () => {\n        if (is_fully_authenticated) return EXPERIAN.SUCCESS;\n        if (is_age_verified) return EXPERIAN.WARN;\n\n        return EXPERIAN.DANGER;\n    };\n\n    if (landing_company_shortcode === 'svg' || is_isle_of_man_residence || is_belgium_residence)\n        return EXPERIAN.SUCCESS;\n    if (landing_company_shortcode === 'iom') return getIOMStatus({ is_fully_authenticated, is_age_verified });\n\n    return EXPERIAN.SUCCESS;\n};\n\nexport const screen_height_sm_threshold = 930;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button className={className} type='button' onClick={onClick} aria-label={localize('Close')} />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { icon_types } from './constants';\n\nconst NotificationStatusIcons = ({ type, class_suffix }) => {\n    // we cannot lazyload danger icon for notification message as its also meant for offline status notification\n    // if danger icon is not lazyloaded and user loses internet connection, it will crash with missing chunk error\n    if (type && type === 'danger') {\n        return (\n            <Icon\n                icon='IcAlertDanger'\n                className={classNames('inline-icon', 'notification__icon-type', {\n                    [`notification__icon-type--${class_suffix}`]: class_suffix,\n                })}\n            />\n        );\n    }\n    return (\n        <React.Fragment>\n            {!!type && (\n                <Icon\n                    icon={icon_types[type]}\n                    className={classNames('notification__icon-type', {\n                        [`notification__icon-type--${class_suffix}`]: class_suffix,\n                    })}\n                    color={type === 'success' ? 'green' : undefined}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nNotificationStatusIcons.propTypes = {\n    class_suffix: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport default NotificationStatusIcons;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { isMobile } from '@deriv/shared';\nimport { Button, Icon, Text } from '@deriv/components';\n\nconst NotificationBanner = ({\n    className,\n    header,\n    message,\n    primary_btn,\n    secondary_btn,\n    img_src,\n    img_alt,\n    onClose,\n    icon,\n}) => (\n    <div\n        className={classNames('notification-banner', {\n            [`notification-banner__${className}`]: className,\n        })}\n        data-testid='dt_notification_banner'\n    >\n        <div className='notification-banner--left'>\n            <Text as='h4' size={isMobile() ? 'xs' : 's'} weight='bold' className='notification-banner__title'>\n                {header}\n            </Text>\n            <Text as='p' size={isMobile() ? 'xxs' : 'xs'} className='notification-banner__description' line_height='xs'>\n                {message}\n            </Text>\n            {!!primary_btn && (\n                <div className='notification-banner__btn-wrapper'>\n                    <Button className='notification-banner__btn' primary small onClick={primary_btn.onClick}>\n                        {primary_btn.text}\n                    </Button>\n                </div>\n            )}\n            {!!secondary_btn && (\n                <div className='notification-banner__btn-wrapper'>\n                    <Button className='notification-banner__btn' secondary small onClick={secondary_btn.onClick}>\n                        {secondary_btn.text}\n                    </Button>\n                </div>\n            )}\n        </div>\n        <div className='notification-banner--right'>\n            <div className='notification-banner__bg' />\n            <img className='notification-banner__img' src={img_src} alt={img_alt} />\n            <Icon className='notification-banner__close-icon' icon={icon ?? 'IcCloseLight'} onClick={onClose} />\n        </div>\n    </div>\n);\n\nNotificationBanner.propTypes = {\n    className: PropTypes.string,\n    secondary_btn: PropTypes.object,\n    header: PropTypes.string,\n    img_alt: PropTypes.string,\n    img_src: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    primary_btn: PropTypes.shape({\n        text: PropTypes.string,\n        onClick: PropTypes.func,\n    }),\n    icon: PropTypes.string,\n};\n\nexport default NotificationBanner;\n","import React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\n\nconst NotificationPromo = ({ cta_btn, img_alt, img_src, message, onClose }) => {\n    return (\n        <div data-testid='dt_notification_promo' className='notification-promo'>\n            <img className='notification-promo__img' src={img_src} alt={img_alt} />\n            <div className='notification-promo--container'>\n                <div className='notification-promo--left'>\n                    <Text as='p' size='xs' className='notification-promo__message'>\n                        {message}\n                    </Text>\n                    {cta_btn && (\n                        <Button className='notification-promo__btn' blue secondary onClick={cta_btn.onClick}>\n                            {cta_btn.text}\n                        </Button>\n                    )}\n                </div>\n                <Icon className='notification-promo__close-icon' icon='IcCloseLight' onClick={onClose} />\n            </div>\n        </div>\n    );\n};\n\nexport default NotificationPromo;\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport { isEmptyObject } from '@deriv/shared';\nimport { BinaryLink } from 'App/Components/Routes';\nimport CloseButton from './close-button.jsx';\nimport NotificationStatusIcons from './notification-status-icons.jsx';\n\nconst NotificationOrder = ({ action, header, message, onClose }) => {\n    setTimeout(onClose, 60000);\n\n    return (\n        <div\n            data-testid='dt_notification_order'\n            className='notification notification-announce notification--order-successful'\n        >\n            <div className='notification__icon-background'>\n                <NotificationStatusIcons type='announce' class_suffix='is-background' />\n            </div>\n            <div className='notification__icon'>\n                <NotificationStatusIcons type='announce' />\n            </div>\n            <div className='notification__text-container'>\n                <Text as='h4' weight='bold' className='notification__header'>\n                    {header}\n                </Text>\n                <Text as='p' className='notification__text-body'>\n                    {message}\n                </Text>\n                <div className='notification__action'>\n                    {!isEmptyObject(action) && (\n                        <React.Fragment>\n                            {action.route ? (\n                                <BinaryLink\n                                    className={classNames('dc-btn', 'dc-btn--secondary', 'notification__cta-button')}\n                                    onClick={onClose}\n                                    to={action.route}\n                                >\n                                    <Text size='xxs' weight='bold'>\n                                        {action.text}\n                                    </Text>\n                                </BinaryLink>\n                            ) : (\n                                <Button\n                                    className='notification__cta-button'\n                                    text={action.text}\n                                    onClick={() => {\n                                        action.onClick();\n                                        onClose();\n                                    }}\n                                    secondary\n                                    renderText={text => (\n                                        <Text size='xxs' weight='bold' align='center'>\n                                            {text}\n                                        </Text>\n                                    )}\n                                />\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n            <CloseButton className='notification__close-button' onClick={onClose} />\n        </div>\n    );\n};\n\nNotificationOrder.propTypes = {\n    action: PropTypes.object,\n    header: PropTypes.string,\n    is_auto_close: PropTypes.bool,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n};\n\nexport default NotificationOrder;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, LinearProgress, Text } from '@deriv/components';\nimport { isEmptyObject, PlatformContext } from '@deriv/shared';\nimport CloseButton from './close-button.jsx';\nimport NotificationStatusIcons from './notification-status-icons.jsx';\nimport NotificationBanner from './notification-banner.jsx';\nimport { default_delay, types } from './constants';\nimport NotificationPromo from './notification-promo.jsx';\nimport { BinaryLink } from '../../Routes';\nimport NotificationOrder from './notification-order.jsx';\n\nconst Notification = ({ data, removeNotificationMessage }) => {\n    const linear_progress_container_ref = React.useRef(null);\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    const destroy = is_closed_by_user => {\n        removeNotificationMessage(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    switch (data.type) {\n        case 'news':\n            return (\n                <NotificationBanner\n                    className={data.className}\n                    header={data.header}\n                    message={data.message}\n                    primary_btn={data.primary_btn}\n                    secondary_btn={data.secondary_btn}\n                    img_src={data.img_src}\n                    img_alt={data.img_alt}\n                    onClose={destroy}\n                    icon={data.icon}\n                />\n            );\n        case 'trustpilot':\n            return (\n                <NotificationBanner\n                    className={data.className}\n                    header={data.header_popup}\n                    message={data.message_popup}\n                    secondary_btn={data.action}\n                    img_src={data.img_src}\n                    img_alt={data.img_alt}\n                    onClose={destroy}\n                />\n            );\n        case 'promotions':\n            return (\n                <NotificationPromo\n                    cta_btn={data.cta_btn}\n                    img_alt={data.img_alt}\n                    img_src={data.img_src}\n                    message={data.message}\n                    onClose={destroy}\n                />\n            );\n        case 'p2p_completed_order':\n            return (\n                <NotificationOrder action={data.action} header={data.header} message={data.message} onClose={destroy} />\n            );\n        default:\n            return (\n                <div\n                    className={classNames('notification', types[data.type], {\n                        'notification--small': data.size === 'small',\n                    })}\n                    data-testid='dt_default_component'\n                >\n                    <div\n                        className={classNames('notification__icon-background', {\n                            'notification__icon-background--header-only': !data.message,\n                        })}\n                    >\n                        <NotificationStatusIcons type={data.type} class_suffix='is-background' />\n                    </div>\n                    <div className='notification__icon'>\n                        <NotificationStatusIcons type={data.type} />\n                    </div>\n                    <div className='notification__text-container'>\n                        <Text as='h4' weight='bold' className='notification__header'>\n                            {data.header}\n                        </Text>\n                        {data.timeout && (\n                            <LinearProgress\n                                className='notification__timeout'\n                                timeout={data.timeout}\n                                action={data.action.onClick}\n                                render={data.timeoutMessage}\n                                should_store_in_session={true}\n                                session_id={data.key}\n                                ref={linear_progress_container_ref}\n                            />\n                        )}\n                        <p className='notification__text-body'>{data.message}</p>\n                        <div className='notification__action'>\n                            {!isEmptyObject(data.action) && (\n                                <React.Fragment>\n                                    {data.action.route ? (\n                                        <BinaryLink\n                                            className={classNames(\n                                                'dc-btn',\n                                                'dc-btn--secondary',\n                                                'notification__cta-button'\n                                            )}\n                                            to={data.action.route}\n                                        >\n                                            <Text size='xxs' weight='bold'>\n                                                {data.action.text}\n                                            </Text>\n                                        </BinaryLink>\n                                    ) : (\n                                        <Button\n                                            className='notification__cta-button'\n                                            onClick={() => {\n                                                if (data.timeout)\n                                                    linear_progress_container_ref.current.removeTimeoutSession();\n                                                data.action.onClick({ is_appstore });\n                                            }}\n                                            text={data.action.text}\n                                            secondary\n                                            renderText={text => (\n                                                <Text size='xxs' weight='bold' align='center'>\n                                                    {text}\n                                                </Text>\n                                            )}\n                                        />\n                                    )}\n                                </React.Fragment>\n                            )}\n                        </div>\n                    </div>\n                    {!data.should_hide_close_btn && (\n                        <CloseButton className='notification__close-button' onClick={onClick} />\n                    )}\n                </div>\n            );\n    }\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        action: PropTypes.shape({\n            onClick: PropTypes.func,\n            route: PropTypes.string,\n            text: PropTypes.string,\n        }),\n        cta_btn: PropTypes.object,\n        className: PropTypes.string,\n        closeOnClick: PropTypes.func,\n        delay: PropTypes.number,\n        header: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n        header_popup: PropTypes.string,\n        img_alt: PropTypes.string,\n        img_src: PropTypes.string,\n        is_auto_close: PropTypes.bool,\n        key: PropTypes.string,\n        icon: PropTypes.string,\n        message: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        message_popup: PropTypes.string,\n        primary_btn: PropTypes.object,\n        secondary_btn: PropTypes.object,\n        should_hide_close_btn: PropTypes.bool,\n        size: PropTypes.oneOf(['small']),\n        timeout: PropTypes.number,\n        timeoutMessage: PropTypes.func,\n        type: PropTypes.oneOf([\n            'warning',\n            'info',\n            'success',\n            'danger',\n            'contract_sold',\n            'news',\n            'trustpilot',\n            'announce',\n            'promotions',\n            'p2p_completed_order',\n        ]).isRequired,\n    }),\n    removeNotificationMessage: PropTypes.func,\n};\n\nexport default Notification;\n","import Notification from './notification.jsx';\n\nexport default Notification;\nexport * from './constants';\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { MobileWrapper, Money, SwipeableNotification, Text } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { getCardLabels, getContractPath } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst TradeNotifications = observer(({ show_trade_notifications }: { show_trade_notifications?: boolean }) => {\n    const {\n        notifications: { removeTradeNotifications, trade_notifications },\n    } = useStore();\n    if (!show_trade_notifications || !trade_notifications.length) return null;\n\n    return (\n        <MobileWrapper>\n            <div className='trade-notifications'>\n                {trade_notifications.slice(0, 3).map(notification => {\n                    const { buy_price, contract_id, currency, contract_type, id, profit, symbol, status, timestamp } =\n                        notification;\n                    const is_open = status === 'open';\n                    return (\n                        <SwipeableNotification\n                            key={id}\n                            is_failure={!is_open && profit < 0}\n                            is_success={!is_open && profit >= 0}\n                            onUnmount={() => removeTradeNotifications(id)}\n                            redirect_to={getContractPath(contract_id)}\n                            timestamp={is_open ? null : timestamp}\n                            visibility_duration_ms={3000}\n                        >\n                            <Text as='p' size='xxxs' line_height='s'>\n                                <Localize\n                                    i18n_default_text='<0>{{title}}:</0> {{trade_type_name}} on {{symbol}}'\n                                    components={[<strong key={0} />]}\n                                    values={{\n                                        symbol,\n                                        title: is_open ? localize('Trade opened') : localize('Trade closed'),\n                                        trade_type_name: contract_type,\n                                    }}\n                                    shouldUnescape\n                                />\n                            </Text>\n                            <Text as='p' size='xxxs' line_height='s'>\n                                {is_open ? getCardLabels().STAKE : getCardLabels().TOTAL_PROFIT_LOSS}{' '}\n                                <Text size='xxxs' line_height='s' weight='bold'>\n                                    <Money\n                                        amount={is_open ? buy_price : profit}\n                                        currency={currency}\n                                        has_sign={!is_open}\n                                        should_format\n                                        show_currency\n                                    />\n                                </Text>\n                            </Text>\n                        </SwipeableNotification>\n                    );\n                })}\n            </div>\n        </MobileWrapper>\n    );\n});\n\nexport default TradeNotifications;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { isMobile, routes } from '@deriv/shared';\nimport 'Sass/app/_common/components/app-notification-message.scss';\nimport { observer, useStore } from '@deriv/stores';\nimport Notification, {\n    max_display_notifications,\n    max_display_notifications_mobile,\n} from '../Components/Elements/NotificationMessage';\nimport { useLocation } from 'react-router-dom';\nimport {\n    excluded_notifications,\n    priority_toast_messages,\n    maintenance_notifications,\n} from '../../Stores/Helpers/client-notifications';\nimport TradeNotifications from './trade-notifications';\n\nconst Portal = ({ children }) =>\n    isMobile() ? ReactDOM.createPortal(children, document.getElementById('deriv_app')) : children;\n\nconst NotificationsContent = ({\n    is_notification_loaded,\n    style,\n    notifications,\n    removeNotificationMessage,\n    show_trade_notifications,\n}) => {\n    const { pathname } = useLocation();\n\n    return (\n        <div\n            className={classNames('notification-messages', {\n                'notification-messages--traders-hub': pathname === routes.traders_hub,\n            })}\n            style={style}\n        >\n            <TransitionGroup component='div'>\n                {notifications.map(notification => (\n                    <CSSTransition\n                        appear={!!is_notification_loaded}\n                        key={notification.key}\n                        in={!!notification.header}\n                        timeout={150}\n                        classNames={{\n                            appear: 'notification--enter',\n                            enter: 'notification--enter',\n                            enterDone: 'notification--enter-done',\n                            exit: 'notification--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <Notification data={notification} removeNotificationMessage={removeNotificationMessage} />\n                    </CSSTransition>\n                ))}\n                <TradeNotifications show_trade_notifications={show_trade_notifications} />\n            </TransitionGroup>\n        </div>\n    );\n};\n\nconst AppNotificationMessages = observer(\n    ({ is_notification_loaded, is_mt5, stopNotificationLoading, show_trade_notifications }) => {\n        const { notifications } = useStore();\n        const {\n            marked_notifications,\n            notification_messages,\n            removeNotificationMessage,\n            markNotificationMessage,\n            should_show_popups,\n        } = notifications;\n        const [style, setStyle] = React.useState({});\n        const [notifications_ref, setNotificationsRef] = React.useState(null);\n\n        React.useEffect(() => {\n            if (is_mt5) {\n                stopNotificationLoading();\n            }\n            if (notifications_ref && isMobile()) {\n                if (notifications_ref.parentElement !== null) {\n                    const bounds = notifications_ref.parentElement.getBoundingClientRect();\n                    setStyle({ top: bounds.top + 8 });\n                }\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [is_mt5, notifications_ref]);\n\n        const notifications_msg = notification_messages.filter(message => {\n            const is_not_marked_notification = !marked_notifications.includes(message.key);\n            const is_non_hidden_notification = isMobile()\n                ? [\n                      ...maintenance_notifications,\n                      'authenticate',\n                      'deriv_go',\n                      'document_needs_action',\n                      'dp2p',\n                      'contract_sold',\n                      'has_changed_two_fa',\n                      'identity',\n                      'install_pwa',\n                      'need_fa',\n                      'needs_poinc',\n                      'notify_financial_assessment',\n                      'poi_name_mismatch',\n                      'poa_address_mismatch_failure',\n                      'poa_address_mismatch_success',\n                      'poa_address_mismatch_warning',\n                      'poa_expired',\n                      'poa_failed',\n                      'poa_rejected_for_mt5',\n                      'poa_verified',\n                      'poi_expired',\n                      'poi_failed',\n                      'poi_verified',\n                      'poinc_upload_limited',\n                      'p2p_daily_limit_increase',\n                      'resticted_mt5_with_failed_poa',\n                      'resticted_mt5_with_pending_poa',\n                      'svg_needs_poa',\n                      'svg_needs_poi',\n                      'svg_needs_poi_poa',\n                      'svg_poi_expired',\n                      'wallets_migrated',\n                      'wallets_failed',\n                      'tnc',\n                      'trustpilot',\n                      'unwelcome',\n                      'additional_kyc_info',\n                  ].includes(message.key) || message.type === 'p2p_completed_order'\n                : true;\n\n            const is_only_for_p2p_notification =\n                window.location.pathname !== routes.cashier_p2p || message?.platform === 'P2P';\n\n            const is_maintenance_notifications = maintenance_notifications.includes(message.key);\n\n            return (\n                is_not_marked_notification &&\n                is_non_hidden_notification &&\n                (is_only_for_p2p_notification || is_maintenance_notifications)\n            );\n        });\n\n        const notifications_limit = isMobile() ? max_display_notifications_mobile : max_display_notifications;\n\n        const filtered_excluded_notifications = notifications_msg.filter(message =>\n            priority_toast_messages.includes(message.key) || message.type.includes('p2p')\n                ? message\n                : excluded_notifications.includes(message.key)\n        );\n\n        const notifications_sublist =\n            window.location.pathname === routes.cashier_deposit\n                ? filtered_excluded_notifications.filter(message =>\n                      ['switched_to_real', ...maintenance_notifications].includes(message.key)\n                  )\n                : filtered_excluded_notifications.slice(0, notifications_limit);\n\n        if (!should_show_popups) return null;\n\n        return notifications_sublist.length ? (\n            <div ref={ref => setNotificationsRef(ref)} className='notification-messages-bounds'>\n                <Portal>\n                    <NotificationsContent\n                        notifications={notifications_sublist}\n                        is_notification_loaded={is_notification_loaded}\n                        style={style}\n                        removeNotificationMessage={removeNotificationMessage}\n                        markNotificationMessage={markNotificationMessage}\n                        show_trade_notifications={show_trade_notifications}\n                    />\n                </Portal>\n            </div>\n        ) : (\n            <TradeNotifications show_trade_notifications={show_trade_notifications} />\n        );\n    }\n);\n\nAppNotificationMessages.propTypes = {\n    is_mt5: PropTypes.bool,\n    is_notification_loaded: PropTypes.bool,\n    stopNotificationLoading: PropTypes.func,\n    show_trade_notifications: PropTypes.bool,\n};\n\nexport default AppNotificationMessages;\n","import { localize } from '@deriv/translations';\n\nexport const CFD_TEXT = {\n    dxtrade: () => localize('Deriv X'),\n    mt5: () => localize('MT5'),\n    mt5_cfds: () => localize('MT5 CFDs'),\n    ctrader: () => localize('Deriv cTrader'),\n    cfd: () => localize('CFDs'),\n    synthetic: () => localize('Derived'),\n    synthetic_demo: () => localize('Derived Demo'),\n    synthetic_bvi: () => localize('Derived BVI'),\n    synthetic_svg: () => localize('Derived SVG'),\n    synthetic_v: () => localize('Derived Vanuatu'),\n    financial: () => localize('Financial'),\n    financial_demo: () => localize('Financial Demo'),\n    financial_bvi: () => localize('Financial BVI'),\n    financial_fx: () => localize('Financial Labuan'),\n    financial_v: () => localize('Financial Vanuatu'),\n    financial_svg: () => localize('Financial SVG'),\n    all: () => localize('Swap-Free'),\n    all_demo: () => localize('Swap-Free Demo'),\n    all_svg: () => localize('Swap-Free SVG'),\n};\n","import { localize } from '@deriv/translations';\nimport { address_permitted_special_characters_message } from '@deriv/shared';\n\nexport const FORM_ERROR_MESSAGES = {\n    empty_address: () => localize('This field is required'),\n    address: () =>\n        localize('Use only the following special characters: {{permitted_characters}}', {\n            permitted_characters: address_permitted_special_characters_message,\n            interpolation: { escapeValue: false },\n        }),\n    barrier: () =>\n        localize('Only numbers and these special characters are allowed: {{permitted_characters}}', {\n            permitted_characters: '+ - .',\n        }),\n    email: () => localize('Invalid email address.'),\n    general: () => localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.'),\n    name: () => localize('Letters, spaces, periods, hyphens, apostrophes only.'),\n    password: () => localize('Password should have lower and uppercase English letters with numbers.'),\n    po_box: () => localize('P.O. Box is not accepted in address'),\n    phone: () => localize('Please enter a valid phone number (e.g. +15417541234).'),\n    postcode: () => localize('Letters, numbers, spaces, hyphens only'),\n    signup_token: () => localize('The length of token should be 8.'),\n    tax_id: () => localize('Should start with letter or number, and may contain hyphen and underscore.'),\n    number: () => localize('Should be a valid number.'),\n    decimalPlaces: decimals =>\n        localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: decimals }),\n    value: value => localize('Should be {{value}}', { value }),\n    betweenMinMax: (min_value, max_value) =>\n        localize('Should be between {{min_value}} and {{max_value}}', {\n            min_value,\n            max_value,\n        }),\n    minNumber: min_value => localize('Should be more than {{min_value}}', { min_value }),\n    maxNumber: max_value => localize('Should be less than {{max_value}}', { max_value }),\n    // all existing warning phrases from zxcvbn\n    password_warnings: {\n        use_a_few_words: () => localize('Use a few words, avoid common phrases'),\n        no_need_for_mixed_chars: () => localize('No need for symbols, digits, or uppercase letters'),\n        uncommon_words_are_better: () => localize('Add another word or two. Uncommon words are better.'),\n        straight_rows_of_keys_are_easy: () => localize('Straight rows of keys are easy to guess'),\n        short_keyboard_patterns_are_easy: () => localize('Short keyboard patterns are easy to guess'),\n        use_longer_keyboard_patterns: () => localize('Use a longer keyboard pattern with more turns'),\n        repeated_chars_are_easy: () => localize('Repeats like \"aaa\" are easy to guess'),\n        repeated_patterns_are_easy: () =>\n            localize('Repeats like \"abcabcabc\" are only slightly harder to guess than \"abc\"'),\n        avoid_repeated_chars: () => localize('Avoid repeated words and characters'),\n        sequences_are_easy: () => localize('Sequences like abc or 6543 are easy to guess'),\n        avoid_sequences: () => localize('Avoid sequences'),\n        recent_years_are_easy: () => localize('Recent years are easy to guess'),\n        avoid_recent_years: () => localize('Avoid recent years'),\n        avoid_associated_years: () => localize('Avoid years that are associated with you'),\n        dates_are_easy: () => localize('Dates are often easy to guess'),\n        avoid_associated_dates_and_years: () => localize('Avoid dates and years that are associated with you'),\n        top10_common_password: () => localize('This is a top-10 common password'),\n        top100_common_password: () => localize('This is a top-100 common password'),\n        very_common_password: () => localize('This is a very common password'),\n        similar_to_common_password: () => localize('This is similar to a commonly used password'),\n        a_word_is_easy: () => localize('A word by itself is easy to guess'),\n        names_are_easy: () => localize('Names and surnames by themselves are easy to guess'),\n        common_names_are_easy: () => localize('Common names and surnames are easy to guess'),\n        capitalization_doesnt_help: () => localize(\"Capitalization doesn't help very much\"),\n        all_uppercase_doesnt_help: () => localize('All-uppercase is almost as easy to guess as all-lowercase'),\n        reverse_doesnt_help: () => localize(\"Reversed words aren't much harder to guess\"),\n        substitution_doesnt_help: () =>\n            localize(\"Predictable substitutions like '@' instead of 'a' don't help very much\"),\n        user_dictionary: () => localize('This password is on the blacklist'),\n    },\n};\n","import React from 'react';\nimport { getUrlBinaryBot } from '@deriv/shared';\n\nconst BinaryBotIFrame = () => {\n    const base_link = getUrlBinaryBot(false);\n\n    return (\n        <iframe\n            id='localstorage-sync__bot'\n            src={`${base_link}/localstorage-sync.html`}\n            style={{ display: 'none', visibility: 'hidden' }}\n            sandbox='allow-same-origin allow-scripts'\n        />\n    );\n};\n\nexport default BinaryBotIFrame;\n","import BinaryBotIFrame from './BinaryBotIFrame.jsx';\n\nexport default BinaryBotIFrame;\n","import React from 'react';\nimport { deriv_urls, getPlatformFromUrl } from '@deriv/shared';\n\nconst SmartTraderIFrame = () => {\n    const { is_staging_deriv_app } = getPlatformFromUrl();\n\n    let base_link = '';\n\n    if (is_staging_deriv_app) {\n        base_link = deriv_urls.SMARTTRADER_STAGING;\n    } else {\n        base_link = deriv_urls.SMARTTRADER_PRODUCTION;\n    }\n\n    return (\n        <iframe\n            id='localstorage-sync'\n            src={`${base_link}/localstorage-sync.html`}\n            style={{ display: 'none', visibility: 'hidden' }}\n            sandbox='allow-same-origin allow-scripts'\n        />\n    );\n};\n\nexport default SmartTraderIFrame;\n","import SmartTraderIFrame from './SmartTraderIFrame.jsx';\n\nexport default SmartTraderIFrame;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n    render = () => (this.state.hasError ? <ErrorComponent should_show_refresh={true} /> : this.props.children);\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default ErrorBoundary;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, StaticUrl } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\nconst CookieBanner = ({ onAccept, onDecline, is_open, is_dark_mode }) => (\n    <div\n        className={classNames('cookie-banner', {\n            'cookie-banner--is-closed': !is_open,\n            'cookie-banner--theme-dark': is_dark_mode,\n        })}\n    >\n        <div className='description'>\n            <Localize i18n_default_text='Cookies help us to give you a better experience and personalised content on our site.' />\n            <br />\n            <Localize\n                i18n_default_text='If you agree to our use of cookies, click on Accept. For more information, <0>see our policy</0>.'\n                components={[<StaticUrl key={0} className='link link--red' href='/terms-and-conditions' is_eu_url />]}\n            />\n        </div>\n        <Button className='cookie-banner__btn-dont-accept' secondary onClick={onDecline}>\n            {localize('Don’t accept')}\n        </Button>\n        <Button\n            id='dt_core_cookie-banner_accept-btn'\n            className='cookie-banner__btn-accept'\n            secondary\n            onClick={onAccept}\n        >\n            {localize('Accept')}\n        </Button>\n    </div>\n);\n\nCookieBanner.prototype = {\n    is_dark_mode: PropTypes.bool,\n    is_open: PropTypes.bool,\n    onAccept: PropTypes.func,\n    onDecline: PropTypes.func,\n};\n\nexport default CookieBanner;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useLocation, withRouter } from 'react-router';\nimport { DesktopWrapper, MobileWrapper, ThemedScrollbars } from '@deriv/components';\nimport { CookieStorage, isMobile, TRACKING_STATUS_KEY, PlatformContext, platforms, routes, WS } from '@deriv/shared';\nimport { Analytics } from '@deriv/analytics';\nimport CookieBanner from '../../Components/Elements/CookieBanner/cookie-banner.jsx';\nimport { useStore, observer } from '@deriv/stores';\nimport { getLanguage } from '@deriv/translations';\n\nconst tracking_status_cookie = new CookieStorage(TRACKING_STATUS_KEY);\n\nconst AppContents = observer(({ children }) => {\n    const [show_cookie_banner, setShowCookieBanner] = React.useState(false);\n    const [is_gtm_tracking, setIsGtmTracking] = React.useState(false);\n    const { is_appstore } = React.useContext(PlatformContext);\n    const {\n        client,\n        common: { platform },\n        gtm: { pushDataLayer },\n        ui,\n    } = useStore();\n\n    const { is_eu_country, is_logged_in, is_logging_in, loginid, user_id } = client;\n    const {\n        is_app_disabled,\n        is_cashier_visible,\n        is_cfd_page,\n        is_positions_drawer_on,\n        is_route_modal_on,\n        notifyAppInstall,\n        setAppContentsScrollRef,\n        is_dark_mode_on: is_dark_mode,\n    } = ui;\n\n    const tracking_status = tracking_status_cookie.get(TRACKING_STATUS_KEY);\n\n    const scroll_ref = React.useRef(null);\n    const child_ref = React.useRef(null);\n\n    const location = useLocation();\n\n    const current_page = window.location.hostname + window.location.pathname;\n\n    React.useEffect(() => {\n        if (is_logged_in && user_id) {\n            const { tracking } = Analytics?.getInstances();\n            Analytics?.setAttributes({\n                account_type: loginid.substring(0, 2),\n            });\n            tracking?.identifyEvent(user_id, {\n                language: getLanguage().toLowerCase() || 'en',\n            });\n            Analytics?.pageView(current_page);\n        }\n        if (scroll_ref.current) setAppContentsScrollRef(scroll_ref);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    Analytics?.pageView(current_page);\n\n    React.useEffect(() => {\n        const allow_tracking = !is_eu_country || tracking_status === 'accepted';\n        if (allow_tracking && !is_gtm_tracking) {\n            pushDataLayer({ event: 'allow_tracking' });\n            setIsGtmTracking(true);\n        }\n    }, [is_gtm_tracking, is_eu_country, pushDataLayer, tracking_status]);\n\n    React.useEffect(() => {\n        if (!tracking_status && !is_logged_in && !is_logging_in) {\n            WS.wait('website_status').then(() => {\n                setShowCookieBanner(is_eu_country);\n            });\n        }\n    }, [tracking_status, is_logged_in, is_eu_country, is_logging_in]);\n\n    React.useEffect(() => {\n        // Gets the reference of the child element and scrolls it to the top\n        if (child_ref.current) {\n            child_ref.current.scrollTop = 0;\n        }\n    }, [location?.pathname]);\n\n    React.useEffect(() => {\n        const handleInstallPrompt = e => {\n            // Prevent the mini-infobar from appearing on mobile\n            e.preventDefault();\n            // Stash the event so it can be triggered later.\n            // Update UI notify the user they can install the PWA\n            notifyAppInstall(e);\n        };\n        window.addEventListener('beforeinstallprompt', handleInstallPrompt);\n\n        return () => window.removeEventListener('beforeinstallprompt', handleInstallPrompt);\n    }, [notifyAppInstall]);\n\n    // handle accept/decline cookies\n    const onAccept = () => {\n        tracking_status_cookie.set(TRACKING_STATUS_KEY, 'accepted', { sameSite: 'none', secure: true });\n        pushDataLayer({ event: 'allow_tracking' });\n        setShowCookieBanner(false);\n        setIsGtmTracking(true);\n    };\n\n    const onDecline = () => {\n        tracking_status_cookie.set(TRACKING_STATUS_KEY, 'declined', { sameSite: 'none', secure: true });\n        setShowCookieBanner(false);\n    };\n\n    return (\n        <div\n            id='app_contents'\n            className={classNames('app-contents', {\n                'app-contents--show-positions-drawer': is_positions_drawer_on,\n                'app-contents--is-disabled': is_app_disabled,\n                'app-contents--is-mobile': isMobile(),\n                'app-contents--is-route-modal': is_route_modal_on,\n                'app-contents--is-scrollable': is_cfd_page || is_cashier_visible,\n                'app-contents--is-dashboard': is_appstore,\n                'app-contents--is-hidden': platforms[platform],\n                'app-contents--is-onboarding': window.location.pathname === routes.onboarding,\n            })}\n            ref={scroll_ref}\n        >\n            <MobileWrapper>{children}</MobileWrapper>\n            <DesktopWrapper>\n                {/* Calculate height of user screen and offset height of header and footer */}\n                {window.location.pathname === routes.onboarding ? (\n                    <ThemedScrollbars style={{ maxHeight: '', height: '100%' }} refSetter={child_ref}>\n                        {children}\n                    </ThemedScrollbars>\n                ) : (\n                    <ThemedScrollbars height='calc(100vh - 84px)' has_horizontal refSetter={child_ref}>\n                        {children}\n                    </ThemedScrollbars>\n                )}\n            </DesktopWrapper>\n            {show_cookie_banner && (\n                <CookieBanner\n                    onAccept={onAccept}\n                    onDecline={onDecline}\n                    is_open={show_cookie_banner}\n                    is_dark_mode={is_dark_mode}\n                />\n            )}\n        </div>\n    );\n});\n\nAppContents.propTypes = {\n    children: PropTypes.any,\n};\n\nexport default withRouter(AppContents);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\nconst NetworkStatus = observer(({ is_mobile }) => {\n    const { common } = useStore();\n    const { network_status: status } = common;\n\n    const network_status_element = (\n        <div\n            data-testid='dt_network_status_element'\n            className={classNames('network-status__circle', {\n                'network-status__circle--offline': status.class === 'offline',\n                'network-status__circle--online': status.class === 'online',\n                'network-status__circle--blinker': status.class === 'blinker',\n            })}\n        />\n    );\n    return (\n        <div\n            data-testid='dt_network_status'\n            className={classNames('network-status__wrapper', {\n                'network-status__wrapper--is-mobile': is_mobile,\n            })}\n        >\n            {is_mobile ? (\n                network_status_element\n            ) : (\n                <Popover\n                    classNameBubble='network-status__tooltip'\n                    alignment='top'\n                    message={localize('Network status: {{status}}', {\n                        status: status.tooltip || localize('Connecting to server'),\n                    })}\n                >\n                    {network_status_element}\n                </Popover>\n            )}\n        </div>\n    );\n});\n\nNetworkStatus.propTypes = {\n    is_mobile: PropTypes.bool,\n};\n\nexport default NetworkStatus;\n","import React from 'react';\nimport { Icon, Popover, StaticUrl } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { deriv_urls } from '@deriv/shared';\n\nexport const GoToDeriv = () => {\n    const message = localize('Go to {{hostname}}', { hostname: deriv_urls.DERIV_HOST_NAME });\n\n    return (\n        <StaticUrl href='/' className='footer__link'>\n            <Popover alignment='top' message={message} zIndex={9999}>\n                <Icon icon='IcDerivOutline' className='footer__icon ic-deriv__icon' />\n            </Popover>\n        </StaticUrl>\n    );\n};\n","import React from 'react';\nimport { routes } from '@deriv/shared';\nimport { BinaryLink } from '../../Routes';\n\nconst EndpointNote = () => {\n    const server_url = localStorage.getItem('config.server_url');\n    return server_url ? (\n        <span style={{ fontSize: 'var(--text-size-xs)', color: 'var(--brand-red-coral)' }}>\n            The server{' '}\n            <BinaryLink className='account-settings-toggle' to={routes.endpoint}>\n                endpoint\n            </BinaryLink>{' '}\n            is: {server_url}\n        </span>\n    ) : null;\n};\n\nexport { EndpointNote };\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ToggleFullScreen = () => {\n    const [is_full_screen, setIsFullScreen] = React.useState(false);\n\n    const fullscreen_map = {\n        event: ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'],\n        element: ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n        fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n        fnc_exit: ['exitFullscreen', 'webkitExitFullscreen', 'mozCancelFullScreen', 'msExitFullscreen'],\n    };\n\n    React.useEffect(() => {\n        fullscreen_map.event.forEach(event => {\n            document.addEventListener(event, onFullScreen, false);\n        });\n    }, [fullscreen_map.event, onFullScreen]);\n\n    const onFullScreen = React.useCallback(() => {\n        setIsFullScreen(fullscreen_map.element.some(el => document[el]));\n    }, [fullscreen_map.element]);\n\n    const toggleFullScreen = e => {\n        e.stopPropagation();\n\n        const to_exit = is_full_screen;\n        const el = to_exit ? document : document.documentElement;\n        const fncToCall = fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            setIsFullScreen(false); // fullscreen API is not enabled\n        }\n    };\n\n    const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n        'ic-fullscreen--active': is_full_screen,\n    });\n    return (\n        <a\n            data-testid='dt_fullscreen_toggle'\n            className={`${full_screen_icon_class} footer__link`}\n            onClick={toggleFullScreen}\n            id='dt_fullscreen_toggle'\n        >\n            <Popover\n                alignment='top'\n                message={is_full_screen ? localize('Exit') : localize('Full screen')}\n                zIndex={9999}\n            >\n                {is_full_screen ? (\n                    <Icon icon='IcFullScreenRestore' className='footer__icon' />\n                ) : (\n                    <Icon data_testid='dt_icon' icon='IcFullScreen' className='footer__icon' />\n                )}\n            </Popover>\n        </a>\n    );\n};\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Modal, Popover, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport 'Sass/app/modules/settings.scss';\n\nconst ModalContent = ({ settings_extension }) => {\n    const content = [];\n\n    content.push(...(settings_extension || []));\n\n    return <VerticalTab list={content} />;\n};\n\nconst ToggleSettings = ({ enableApp, is_settings_visible, disableApp, toggleSettings, settings_extension }) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                id='dt_settings_toggle'\n                data-testid='dt_toggle_settings'\n                onClick={toggleSettings}\n                className={`${toggle_settings_class} footer__link`}\n            >\n                <Popover alignment='top' message={localize('Platform settings')} zIndex={9999}>\n                    <Icon icon='IcGear' data_testid='dt_icon' className='footer__icon ic-settings__icon' />\n                </Popover>\n            </a>\n            <Modal\n                id='dt_settings_modal'\n                className='modal-settings'\n                enableApp={enableApp}\n                is_open={is_settings_visible}\n                disableApp={disableApp}\n                title={localize('Platform settings')}\n                toggleModal={toggleSettings}\n                height='616px'\n                width='736px'\n            >\n                <ModalContent settings_extension={settings_extension} />\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    settings_extension: PropTypes.array,\n    toggleSettings: PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { getAllowedLanguages } from '@deriv/translations';\nimport { LanguageLink } from 'App/Components/Routes';\n\nconst isCurrentLanguage = (lang, current_language) => lang === current_language;\n\nconst LanguageSettings = observer(() => {\n    const { common, ui } = useStore();\n    const { current_language } = common;\n    const { toggleLanguageSettingsModal } = ui;\n\n    return (\n        <div className='settings-language'>\n            <div className='settings-language__language-container'>\n                {Object.keys(getAllowedLanguages()).map(lang =>\n                    isCurrentLanguage(lang, current_language) ? (\n                        <LanguageLink key={lang} lang={lang} />\n                    ) : (\n                        <LanguageLink key={lang} is_clickable lang={lang} toggleModal={toggleLanguageSettingsModal} />\n                    )\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default LanguageSettings;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon, Modal, Popover, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport 'Sass/app/modules/settings.scss';\nimport LanguageSettings from '../../../Containers/SettingsModal/settings-language';\n\nconst ToggleLanguageSettings = observer(() => {\n    const { common, ui } = useStore();\n    const { is_language_settings_modal_on, toggleLanguageSettingsModal } = ui;\n    const { current_language, is_language_changing } = common;\n\n    const toggle_settings_class = classNames('ic-language', 'footer__link', {\n        'ic-settings--active': is_language_settings_modal_on,\n        'ic-settings--disabled': is_language_changing,\n    });\n    return (\n        <React.Fragment>\n            <a\n                id='dt_language_settings_toggle'\n                data-testid='dt_toggle_language_settings'\n                onClick={toggleLanguageSettingsModal}\n                className={toggle_settings_class}\n            >\n                <Popover alignment='top' message={localize('Language')} zIndex='9999'>\n                    <Icon\n                        icon={`IcFlag${current_language.replace('_', '-')}`}\n                        data_testid='dt_icon'\n                        className='ic-settings-language__icon'\n                        size={18}\n                    />\n                    <Text weight='bold' size='xxs'>\n                        <Localize i18n_default_text={current_language} />\n                    </Text>\n                </Popover>\n            </a>\n            <Modal\n                id='dt_settings_modal'\n                is_open={is_language_settings_modal_on}\n                title={localize('Select Language')}\n                toggleModal={toggleLanguageSettingsModal}\n                width='616px'\n                should_header_stick_body={false}\n            >\n                <LanguageSettings />\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport { ToggleLanguageSettings };\n","import React from 'react';\nimport { Popover, Icon, StaticUrl } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nexport const HelpCentre = () => (\n    <StaticUrl href='/help-centre/' id='dt_help_centre' aria-label={localize('Help centre')} className='footer__link'>\n        <Popover classNameBubble='help-centre__tooltip' alignment='top' message={localize('Help centre')} zIndex={9999}>\n            <Icon icon='IcHelpCentre' className='footer__icon' />\n        </Popover>\n    </StaticUrl>\n);\n","import React from 'react';\nimport { Icon, Popover, StaticUrl } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nexport const ResponsibleTrading = () => (\n    <StaticUrl href='/responsible' className='footer__link'>\n        <Popover alignment='top' message={localize('Responsible trading')} zIndex={9999}>\n            <Icon icon='IcVerification' className='footer__icon ic-deriv__icon' />\n        </Popover>\n    </StaticUrl>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon, Popover } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const AccountLimits = () => (\n    <Link to={routes.account_limits} className='footer__link'>\n        <Popover alignment='top' message={localize('Account limits')} zIndex={9999}>\n            <Icon icon='IcAccountLimits' className='footer__icon ic-deriv__icon' />\n        </Popover>\n    </Link>\n);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\" {...props}><g fill=\"none\"><path fill=\"#D1010E\" d=\"M25.04 47.46V63.2l-8.3-22.74c-.94-2.6 1.32-.92 1.32-.92l4.73 3.51a5.94 5.94 0 012.25 4.42m-8.3 38.48l8.3-22.75-23.54 8c-2.68.91-.95-1.26-.95-1.26L4.2 65.4a6.34 6.34 0 014.57-2.18 6.34 6.34 0 01-4.57-2.17L.56 56.44s-1.73-2.18.95-1.26l23.54 8v15.74a5.93 5.93 0 01-2.25 4.42l-4.74 3.5s-2.25 1.68-1.3-.9\" /><path fill=\"#818084\" d=\"M118.9 64.69v4.85a7.5 7.5 0 01-3.81.94c-2 0-3.26-.88-3.26-2.7A2.4 2.4 0 01113 65.5a6.55 6.55 0 013.1-.72l2.8-.1zm1.96 11.65h6.84a19.57 19.57 0 01-.44-5.13V59.5c0-6.36-3.3-9.94-11.37-9.94-3.74-.02-7.43.85-10.77 2.53l2.6 5.25a15.02 15.02 0 016.62-1.6c2.81 0 4.58 1 4.58 3.43v.27l-4.14.17a16.3 16.3 0 00-6.9 1.6 7.46 7.46 0 00-4.37 7.12c0 5.02 3.75 8.56 8.89 8.56 2.7.04 5.3-.95 7.29-2.76l1.17 2.2zm-32.8-12.7c-2.5 0-3.7-1.98-3.7-4 0-2.76 1.6-4 3.6-4 2.53 0 3.8 2.1 3.8 4.09 0 2.59-1.6 3.92-3.7 3.92m.56 20.15c-4.15 0-6.52-1.49-6.52-3.64a3.26 3.26 0 011.1-2.4c2.66 1.38 11 .6 11 3.7 0 1.6-2.65 2.4-5.6 2.4m-1.22 5.6c9.94 0 14.64-4.25 14.64-8.95 0-9.8-17.16-5.51-17.16-9.97-.01-.4.07-.79.22-1.16.98.24 1.98.35 2.98.33 6.68 0 11.38-3.8 11.38-9.83a9.6 9.6 0 00-1.88-5.8 5.49 5.49 0 011.54-.22c.75.01 1.49.1 2.21.28l1.55-5.75a18.88 18.88 0 00-1.88-.11c-3.76 0-5.47.94-6.96 2.32-.23.22-.39.33-.67.17a11.1 11.1 0 00-5.46-1.22c-8.07 0-11.32 5.25-11.32 9.83 0 3.43 1.54 6.63 4.58 8.23-2.1 1.16-3.48 2.98-3.48 4.8a3.6 3.6 0 001.71 3.2 6.5 6.5 0 00-4.64 6.01c0 4.36 4.42 7.79 12.65 7.79M30.6 76.32h8.35V58.45a8.88 8.88 0 015.02-1.71c3.09 0 3.42 2.2 3.42 4.75v14.85h8.34v-17.9a8.71 8.71 0 014.97-1.7c3.1 0 3.48 2.1 3.48 4.64v14.96h8.33V59.22c0-7.28-4.44-9.66-9.24-9.66-2.7 0-6.02 1.16-9.17 3.7-1.39-2.32-3.81-3.7-7.12-3.7-3.15 0-6.13 1.49-8.56 3.31l-.81-2.67h-7v26.12z\" /></g></svg>);","import React from 'react';\nimport { Icon, Modal, Popover, StaticUrl } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { deriv_urls, getLegalEntityName } from '@deriv/shared';\nimport MGALogo from 'Assets/SvgComponents/footer/mga.svg';\n\nconst MLTRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <div className='footer-regulatory-information__icon'>\n            <MGALogo />\n        </div>\n        <p>\n            <Localize\n                i18n_default_text='Synthetic indices in the EU are offered by {{legal_entity_name}}, W Business Centre, Level 3, Triq Dun Karm, Birkirkara BKR 9033, Malta, licensed and regulated by the Malta Gaming Authority (<0>licence no. MGA/B2C/102/2000</0>) and by the Revenue Commissioners for clients in Ireland (<2>licence no. 1010285</2>).'\n                components={[\n                    <StaticUrl\n                        href='/regulatory/Deriv_(Europe)_Limited.pdf'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                        is_document\n                    />,\n                    <a\n                        href='https://www.gamblingcommission.gov.uk/public-register/business/detail/39495'\n                        key={1}\n                        className='footer-regulatory-information__link'\n                    />,\n                    <a\n                        href={`https://${deriv_urls.DERIV_HOST_NAME}/regulatory/DEL_Remote_Bookmarker_License.pdf`}\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={2}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n                values={{\n                    legal_entity_name: getLegalEntityName('malta'),\n                }}\n            />\n        </p>\n    </div>\n);\n\nconst MXRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <p>\n            <Localize\n                i18n_default_text='Virtual events based bets in the UK and the Isle of Man are offered by {{legal_entity_name}}, Millennium House, Level 1, Victoria Road, Douglas IM2 4RW, Isle of Man, licensed and regulated in Great Britain by the Gambling Commission under <0>account no. 39172</0> and by the Gambling Supervision Commission in the Isle of Man (<1>view licence</1>).'\n                components={[\n                    <a\n                        href='https://www.gamblingcommission.gov.uk/public-register/business/detail/39172'\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                    />,\n                    <a\n                        href={`https://${deriv_urls.DERIV_HOST_NAME}/regulatory/Deriv_(MX)_Ltd.pdf`}\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={1}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n                values={{\n                    legal_entity_name: getLegalEntityName('mx'),\n                }}\n            />\n        </p>\n    </div>\n);\n\nconst MFRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <p>\n            <Localize\n                i18n_default_text='Financial products in the EU are offered by {{legal_entity_name}}, licensed as a Category 3 Investment Services provider by the Malta Financial Services Authority (<0>Licence no. IS/70156</0>).'\n                components={[\n                    <a\n                        href={`https://${deriv_urls.DERIV_HOST_NAME}/regulatory/Deriv_Investments_(Europe)_Limited.pdf`}\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n                values={{\n                    legal_entity_name: getLegalEntityName('maltainvest'),\n                }}\n            />\n        </p>\n    </div>\n);\n\nexport const RegulatoryInformation = ({ landing_company, is_eu, show_eu_related_content }) => {\n    const [should_show_modal, showModal] = React.useState(false);\n    if (!is_eu || (is_eu && !show_eu_related_content)) return null;\n    const is_mx = landing_company === 'iom';\n    const is_mlt = landing_company === 'malta';\n    const is_mf = landing_company === 'maltainvest';\n\n    return (\n        <div className='footer__link'>\n            <Popover alignment='top' message={localize('Regulatory Information')} zIndex={9999}>\n                <a onClick={() => showModal(true)}>\n                    <Icon icon='IcRegulatoryInformation' className='footer__icon ic-deriv__icon' />\n                </a>\n            </Popover>\n            <Modal\n                is_open={should_show_modal}\n                small\n                has_close_icon\n                toggleModal={() => showModal(false)}\n                title={localize('Regulatory Information')}\n            >\n                {is_mx && <MXRegulatoryInformation />}\n                {is_mlt && <MLTRegulatoryInformation />}\n                {(is_mf || show_eu_related_content) && <MFRegulatoryInformation />}\n            </Modal>\n        </div>\n    );\n};\n","// eslint-disable-next-line import/no-named-as-default\nimport NetworkStatus from './network-status.jsx';\n\nexport default NetworkStatus;\nexport * from './go-to-deriv.jsx';\nexport * from './endpoint-note.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-settings.jsx';\nexport * from './toggle-language-settings';\nexport * from './help-centre.jsx';\nexport * from './responsible-trading.jsx';\nexport * from './account-limits';\nexport * from './regulatory-information.jsx';\n","import React from 'react';\nimport { Popover, Icon, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport useLiveChat from 'App/Components/Elements/LiveChat/use-livechat';\n\nconst LiveChat = observer(() => {\n    const { client, ui } = useStore();\n    const { has_cookie_account, loginid } = client;\n    const { is_mobile } = ui;\n    const liveChat = useLiveChat(has_cookie_account, loginid);\n\n    if (!liveChat.isReady) return null;\n\n    const liveChatClickHandler = () => liveChat.widget?.call('maximize');\n\n    if (is_mobile)\n        return (\n            <div\n                className='livechat gtm-deriv-livechat'\n                onKeyDown={liveChatClickHandler}\n                onClick={liveChatClickHandler}\n            >\n                <div className='livechat__icon-wrapper'>\n                    <Icon icon='IcLiveChat' className='livechat__icon' />\n                </div>\n                <Text size='xs'>\n                    <Localize i18n_default_text='Live chat' />\n                </Text>\n            </div>\n        );\n\n    return (\n        <div onKeyDown={liveChatClickHandler} onClick={liveChatClickHandler}>\n            <Popover\n                className='footer__link'\n                classNameBubble='help-centre__tooltip'\n                alignment='top'\n                message={<Localize i18n_default_text='Live chat' />}\n                zIndex='9999'\n            >\n                <Icon icon='IcLiveChat' className='footer__icon gtm-deriv-livechat' />\n            </Popover>\n        </div>\n    );\n});\n\nexport default LiveChat;\n","import LiveChat from './live-chat';\n\nexport default LiveChat;\n","import React from 'react';\nimport { Popover, Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport useLiveChat from 'App/Components/Elements/LiveChat/use-livechat';\nimport { whatsapp_url } from '@deriv/shared';\n\nconst WhatsApp = () => {\n    const liveChat = useLiveChat();\n\n    if (!liveChat.isReady) return null;\n\n    return (\n        <a\n            href={whatsapp_url}\n            aria-label={localize('WhatsApp')}\n            className='footer__link'\n            target='_blank'\n            rel='noreferrer'\n        >\n            <Popover classNameBubble='whatsapp__tooltip' alignment='top' message={localize('WhatsApp')} zIndex={9999}>\n                <Icon icon='IcWhatsApp' className='footer__icon' />\n            </Popover>\n        </a>\n    );\n};\n\nexport default WhatsApp;\n","import WhatsApp from './whatsapp';\n\nexport default WhatsApp;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { toGMTFormat, toLocalFormat } from '@deriv/shared';\nimport { Popover } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nconst ServerTime = observer(({ is_mobile }) => {\n    const { common } = useStore();\n    const { server_time } = common;\n    const gmt_time = toGMTFormat(server_time);\n    const local_time = toLocalFormat(server_time);\n    return (\n        <Popover\n            alignment='top'\n            message={local_time}\n            className={classNames('server-time', {\n                'server-time--is-mobile': is_mobile,\n            })}\n            zIndex={9999}\n        >\n            {gmt_time}\n        </Popover>\n    );\n});\n\nServerTime.propTypes = {\n    is_mobile: PropTypes.bool,\n};\n\nexport default ServerTime;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\nimport NetworkStatus, {\n    AccountLimits as AccountLimitsFooter,\n    EndpointNote,\n    GoToDeriv,\n    HelpCentre,\n    RegulatoryInformation,\n    ResponsibleTrading,\n    ToggleFullScreen,\n    ToggleSettings,\n    ToggleLanguageSettings,\n} from 'App/Components/Layout/Footer';\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport WhatsApp from 'App/Components/Elements/WhatsApp/index.ts';\nimport ServerTime from '../server-time.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst FooterIconSeparator = () => <div className='footer-icon-separator' />;\n\nconst FooterExtensionRenderer = (footer_extension, idx) => {\n    const { Component: FooterExtensionComponent } = footer_extension;\n    return (\n        <React.Fragment key={`footer-link-${footer_extension.position}-${idx}`}>\n            {footer_extension.has_left_separator && <FooterIconSeparator />}\n            <FooterExtensionComponent />\n            {footer_extension.has_right_separator && <FooterIconSeparator />}\n        </React.Fragment>\n    );\n};\n\nconst Footer = observer(() => {\n    const { client, common, ui, traders_hub } = useStore();\n    const { is_logged_in, landing_company_shortcode, is_eu, is_virtual } = client;\n    const { current_language } = common;\n    const {\n        enableApp,\n        footer_extensions,\n        settings_extension,\n        is_app_disabled,\n        is_route_modal_on,\n        is_settings_modal_on,\n        is_language_settings_modal_on,\n        disableApp,\n        toggleSettingsModal,\n        toggleLanguageSettingsModal,\n    } = ui;\n    const { show_eu_related_content } = traders_hub;\n    let footer_extensions_left = [];\n    let footer_extensions_right = [];\n    if (footer_extensions.filter) {\n        footer_extensions_left = footer_extensions.filter(footer_extension => footer_extension.position === 'left');\n        footer_extensions_right = footer_extensions.filter(footer_extension => footer_extension.position === 'right');\n    }\n\n    return (\n        <footer\n            className={classNames('footer', {\n                'footer--is-disabled': is_app_disabled || is_route_modal_on,\n            })}\n        >\n            {footer_extensions_left.length > 0 && (\n                <div className='footer__links footer__links--left'>\n                    {footer_extensions_left.map(FooterExtensionRenderer)}\n                </div>\n            )}\n            <EndpointNote />\n            <NetworkStatus />\n            <ServerTime />\n            <div className='footer__links'>\n                {footer_extensions_right.map(FooterExtensionRenderer)}\n                <WhatsApp />\n                <LiveChat />\n                <FooterIconSeparator />\n                <GoToDeriv />\n                <ResponsibleTrading />\n                {is_logged_in && <AccountLimitsFooter />}\n                {is_logged_in && !is_virtual && (\n                    <RegulatoryInformation\n                        landing_company={landing_company_shortcode}\n                        is_eu={is_eu}\n                        show_eu_related_content={show_eu_related_content}\n                    />\n                )}\n                <FooterIconSeparator />\n                <HelpCentre />\n                <ToggleSettings\n                    is_settings_visible={is_settings_modal_on}\n                    toggleSettings={toggleSettingsModal}\n                    disableApp={disableApp}\n                    enableApp={enableApp}\n                    settings_extension={settings_extension}\n                />\n                <ToggleLanguageSettings\n                    is_settings_visible={is_language_settings_modal_on}\n                    toggleSettings={toggleLanguageSettingsModal}\n                    lang={current_language}\n                />\n                <ToggleFullScreen />\n            </div>\n        </footer>\n    );\n});\n\nexport default withRouter(Footer);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M8 12a4 4 0 110-8 4 4 0 010 8zm0-7C6.35 5 5 6.35 5 8s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3zm.5-2.5v-2C8.5.22 8.28 0 8 0s-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5zm3.74 1.96l1.11-1.11a.5.5 0 000-.71.5.5 0 00-.71 0l-1.11 1.11a.5.5 0 000 .71.48.48 0 00.7 0h.01zm1.11 8.89a.5.5 0 000-.71l-1.11-1.11a.5.5 0 00-.71 0 .5.5 0 000 .71l1.11 1.11a.48.48 0 00.7 0h.01zm-10 0l1.11-1.11a.5.5 0 000-.71.5.5 0 00-.71 0l-1.11 1.11a.5.5 0 000 .71.48.48 0 00.7 0h.01zm1.11-8.89a.5.5 0 000-.71L3.35 2.64a.5.5 0 00-.71 0 .5.5 0 000 .71l1.11 1.11a.48.48 0 00.7 0h.01zM16 8a.5.5 0 00-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5h2A.5.5 0 0016 8zm-7.5 7.5v-2c0-.28-.22-.5-.5-.5s-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5zM3 8a.5.5 0 00-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5h2A.5.5 0 003 8z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M8 16a8 8 0 01-7.72-5.93.48.48 0 01.13-.48.53.53 0 01.48-.13A6.99 6.99 0 009.45.9a.48.48 0 01.13-.48c.13-.13.31-.18.48-.13a8.01 8.01 0 015.93 7.72c0 4.41-3.59 8-8 8L8 16zm-6.49-5.39A7 7 0 008 15a7 7 0 002.61-13.49 7.98 7.98 0 01-9.1 9.1z\" fill=\"#C2C2C2\" /></svg>);","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\nimport NetworkStatus, {\n    AccountLimits as AccountLimitsFooter,\n    EndpointNote,\n    GoToDeriv,\n    HelpCentre,\n    RegulatoryInformation,\n    ResponsibleTrading,\n    ToggleSettings,\n    ToggleFullScreen,\n    ToggleLanguageSettings,\n} from 'App/Components/Layout/Footer';\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport WhatsApp from 'App/Components/Elements/WhatsApp/index.ts';\nimport ServerTime from '../server-time.jsx';\nimport { routes } from '@deriv/shared';\nimport { observer,useStore } from '@deriv/stores';\nimport DarkModeToggleIcon from 'Assets/SvgComponents/footer/ic-footer-light-theme.svg';\nimport LightModeToggleIcon from 'Assets/SvgComponents/footer/ic-footer-dark-theme.svg';\nimport { Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst FooterIconSeparator = () => <div className='footer-icon-separator' />;\n\nconst FooterExtensionRenderer = (footer_extension, idx) => {\n    const { Component: FooterExtensionComponent } = footer_extension;\n    return (\n        <React.Fragment key={`footer-link-${footer_extension.position}-${idx}`}>\n            {footer_extension.has_left_separator && <FooterIconSeparator />}\n            <FooterExtensionComponent />\n            {footer_extension.has_right_separator && <FooterIconSeparator />}\n        </React.Fragment>\n    );\n};\n\nconst TradingHubFooter = observer(() => {\n    const { client, common, ui, traders_hub } = useStore();\n    const { show_eu_related_content } = traders_hub;\n    const { is_logged_in, is_eu, landing_company_shortcode, is_virtual } = client;\n    const { current_language } = common;\n    const {\n        enableApp,\n        footer_extensions,\n        settings_extension,\n        is_app_disabled,\n        is_route_modal_on,\n        is_settings_modal_on,\n        is_language_settings_modal_on,\n        disableApp,\n        toggleSettingsModal,\n        toggleLanguageSettingsModal,\n        is_dark_mode_on: is_dark_mode,\n        setDarkMode,\n    } = ui;\n\n    let footer_extensions_left = [];\n    let footer_extensions_right = [];\n    if (footer_extensions.filter) {\n        footer_extensions_left = footer_extensions.filter(footer_extension => footer_extension.position === 'left');\n        footer_extensions_right = footer_extensions.filter(footer_extension => footer_extension.position === 'right');\n    }\n\n    const changeTheme = () => {\n        setDarkMode(!is_dark_mode);\n    };\n\n    const location = window.location.pathname;\n\n    return (\n        <footer\n            className={classNames('footer', {\n                'footer--is-disabled': is_app_disabled || is_route_modal_on,\n            })}\n        >\n            {footer_extensions_left.length > 0 && (\n                <div className='footer__links footer__links--left'>\n                    {footer_extensions_left.map(FooterExtensionRenderer)}\n                </div>\n            )}\n            <EndpointNote />\n            <NetworkStatus />\n            <FooterIconSeparator />\n            <ServerTime />\n            <FooterIconSeparator />\n            <div className='footer__links'>\n                {footer_extensions_right.map(FooterExtensionRenderer)}\n                <WhatsApp />\n                <LiveChat />\n                <GoToDeriv />\n                <ResponsibleTrading />\n                {is_logged_in && <AccountLimitsFooter />}\n                {is_logged_in && !is_virtual && (\n                    <RegulatoryInformation\n                        landing_company={landing_company_shortcode}\n                        is_eu={is_eu}\n                        show_eu_related_content={show_eu_related_content}\n                    />\n                )}\n                <div className='footer__links--dark-mode'>\n                    <Popover alignment='top' message={localize('Change theme')} zIndex={9999}>\n                        {is_dark_mode ? (\n                            <LightModeToggleIcon onClick={changeTheme} />\n                        ) : (\n                            <DarkModeToggleIcon onClick={changeTheme} />\n                        )}\n                    </Popover>\n                </div>\n                <FooterIconSeparator />\n                <HelpCentre />\n                {location === routes.trade && (\n                    <ToggleSettings\n                        is_settings_visible={is_settings_modal_on}\n                        toggleSettings={toggleSettingsModal}\n                        disableApp={disableApp}\n                        enableApp={enableApp}\n                        settings_extension={settings_extension}\n                    />\n                )}\n                <ToggleLanguageSettings\n                    is_settings_visible={is_language_settings_modal_on}\n                    toggleSettings={toggleLanguageSettingsModal}\n                    lang={current_language}\n                />\n                <ToggleFullScreen />\n            </div>\n        </footer>\n    );\n});\n\nTradingHubFooter.propTypes = {\n    location: PropTypes.object,\n};\n\nexport default withRouter(TradingHubFooter);\n","import React from 'react';\nimport { routes } from '@deriv/shared';\nimport DefaultFooter from './default-footer';\nimport TradingHubFooter from './trading-hub-footer';\nimport { useLocation } from 'react-router-dom';\n\nconst Footer = () => {\n    const { pathname } = useLocation();\n    if (pathname !== routes.onboarding) {\n        return <TradingHubFooter />;\n    } else if (pathname === routes.onboarding) {\n        return null;\n    }\n    return <DefaultFooter />;\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst EmptyNotification = () => (\n    <div className='notifications-empty__container'>\n        <div className='notifications-empty'>\n            <Icon\n                data_testid='dt_ic_box_icon'\n                icon='IcBox'\n                className='notifications-empty__icon'\n                size={64}\n                color='secondary'\n            />\n            <div className='notifications-empty__content'>\n                <Text\n                    as='h4'\n                    size='xs'\n                    weight='bold'\n                    align='center'\n                    color='less-prominent'\n                    className='notifications-empty__header'\n                >\n                    <Localize i18n_default_text='No notifications' />\n                </Text>\n                <Text size='xxs' color='less-prominent' align='center'>\n                    <Localize i18n_default_text='You have yet to receive any notifications' />\n                </Text>\n            </div>\n        </div>\n    </div>\n);\n\nexport default EmptyNotification;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TNotificationsClearAllFooter = {\n    clearNotifications: () => void;\n};\n\nconst NotificationsClearAllFooter = observer(({ clearNotifications }: TNotificationsClearAllFooter) => {\n    const { notifications, ui } = useStore();\n    const { is_notifications_empty } = notifications;\n    const { is_mobile } = ui;\n\n    return (\n        <React.Fragment>\n            <div className='notifications-dialog__separator' />\n            <div\n                data-testid='dt_clear_all_footer_button'\n                className={classNames('notifications-dialog__footer', {\n                    'notifications-dialog__content--empty': is_notifications_empty,\n                    'notifications-dialog__content--sticky': is_mobile,\n                })}\n            >\n                <Button\n                    className={classNames('dc-btn--secondary', 'notifications-dialog__clear')}\n                    disabled={is_notifications_empty}\n                    onClick={clearNotifications}\n                >\n                    <Text size='xxs' color='prominent' weight='bold'>\n                        <Localize i18n_default_text='Clear All' />\n                    </Text>\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsClearAllFooter;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { isEmptyObject, toTitleCase } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TActionProps = ReturnType<typeof useStore>['notifications']['notifications'][0]['action'];\ntype TNotificationMessage = ReturnType<typeof useStore>['notifications']['notifications'][0];\n\nconst NotificationsList = observer(() => {\n    const { notifications } = useStore();\n    const { notifications: notifications_array, toggleNotificationsModal } = notifications;\n\n    const getNotificationItemIcon = (item: TNotificationMessage) => {\n        const { type } = item;\n        if (['contract_sold', 'info', 'news', 'promotions'].includes(type)) {\n            return 'IcAlertInfo';\n        } else if (type === 'p2p_completed_order') {\n            return 'IcAlertAnnounce';\n        }\n        return `IcAlert${toTitleCase(type)}`;\n    };\n\n    const getButtonSettings = (item: TNotificationMessage): TActionProps | undefined => {\n        const object_key = ['action', 'secondary_btn', 'cta_btn', 'primary_btn'].find(\n            obj_key => !isEmptyObject(item[obj_key as keyof TNotificationMessage])\n        );\n        switch (object_key) {\n            case 'primary_btn':\n                return item.primary_btn;\n            case 'cta_btn':\n                return item.cta_btn;\n            case 'secondary_btn':\n                return item.secondary_btn;\n            case 'action':\n                return item.action;\n            default:\n                return undefined;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {notifications_array.map(item => (\n                <div className='notifications-item' key={item.key}>\n                    <Text as='h2' className='notifications-item__title' weight='bold' size='xs' color='prominent'>\n                        {item.type && (\n                            <Icon\n                                icon={getNotificationItemIcon(item)}\n                                className={classNames('notifications-item__title-icon', {\n                                    [`notifications-item__title-icon--${item.type}`]: item.type,\n                                })}\n                            />\n                        )}\n                        {item.header}\n                    </Text>\n                    <div className='notifications-item__message'>{item.message}</div>\n                    <div className='notifications-item__action'>\n                        {!!getButtonSettings(item) && (\n                            <React.Fragment>\n                                {getButtonSettings(item)?.route ? (\n                                    <BinaryLink\n                                        onClick={toggleNotificationsModal}\n                                        active_class='notifications-item'\n                                        className={classNames(\n                                            'dc-btn',\n                                            'dc-btn--secondary',\n                                            'notifications-item__cta-button'\n                                        )}\n                                        to={getButtonSettings(item)?.route}\n                                    >\n                                        <Text weight='bold' size='xxs'>\n                                            {getButtonSettings(item)?.text}\n                                        </Text>\n                                    </BinaryLink>\n                                ) : (\n                                    <Button\n                                        className={classNames('dc-btn--secondary', 'notifications-item__cta-button')}\n                                        onClick={getButtonSettings(item)?.onClick}\n                                    >\n                                        <Text weight='bold' size='xxs'>\n                                            {getButtonSettings(item)?.text}\n                                        </Text>\n                                    </Button>\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            ))}\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsList;\n","import classNames from 'classnames';\nimport React, { LegacyRef } from 'react';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport EmptyNotification from 'App/Components/Elements/Notifications/empty-notification';\nimport NotificationsClearAllFooter from './notifications-clear-all-footer';\nimport NotificationsList from './notifications-list';\n\ntype TNotificationListWrapper = { clearNotifications: () => void };\n\nconst NotificationListWrapperForwardRef = React.forwardRef(\n    ({ clearNotifications }: TNotificationListWrapper, ref: LegacyRef<HTMLDivElement> | undefined) => {\n        const { notifications, ui } = useStore();\n        const { is_notifications_empty } = notifications;\n        const { is_mobile } = ui;\n\n        const traders_hub = window.location.pathname === routes.traders_hub;\n        const wallets_path = window.location.pathname === routes.wallets;\n\n        return (\n            <div\n                data-testid='dt_notifications_list_wrapper'\n                className={classNames('notifications-dialog', {\n                    'notifications-dialog--pre-appstore':\n                        traders_hub || window.location.pathname.startsWith(routes.account) || wallets_path,\n                })}\n                ref={ref}\n            >\n                <div className='notifications-dialog__header'>\n                    <Text\n                        as='h2'\n                        className='notifications-dialog__header-text'\n                        weight='bold'\n                        color='prominent'\n                        styles={{\n                            lineHeight: '1.6rem',\n                        }}\n                    >\n                        <Localize i18n_default_text='Notifications' />\n                    </Text>\n                </div>\n                <div\n                    className={classNames('notifications-dialog__content', {\n                        'notifications-dialog__content--empty': is_notifications_empty,\n                    })}\n                >\n                    <ThemedScrollbars is_bypassed={is_mobile || is_notifications_empty}>\n                        {is_notifications_empty ? <EmptyNotification /> : <NotificationsList />}\n                    </ThemedScrollbars>\n                </div>\n                <NotificationsClearAllFooter clearNotifications={clearNotifications} />\n            </div>\n        );\n    }\n);\nNotificationListWrapperForwardRef.displayName = 'NotificationListWrapper';\n\nconst NotificationListWrapper = observer(NotificationListWrapperForwardRef);\n\nexport default NotificationListWrapper;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { DesktopWrapper, MobileDialog, MobileWrapper, useOnClickOutside } from '@deriv/components';\nimport { LocalStore } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport NotificationListWrapper from './notification-list-wrapper';\n\nconst NotificationsDialog = observer(() => {\n    const { client, notifications } = useStore();\n    const { loginid } = client;\n    const {\n        is_notifications_visible,\n        notifications: notifications_array,\n        removeNotifications,\n        removeNotificationMessage,\n        removeNotificationMessageByKey,\n        toggleNotificationsModal,\n    } = notifications;\n\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n\n    const handleClickOutside = (event: MouseEvent) => {\n        const notifications_toggle_btn = !(event?.target as Element)?.classList.contains(\n            'notifications-toggle__icon-wrapper'\n        );\n        if (\n            !wrapper_ref?.current?.contains(event.target as Node) &&\n            is_notifications_visible &&\n            notifications_toggle_btn\n        ) {\n            toggleNotificationsModal();\n        }\n    };\n\n    const clearNotifications = () => {\n        const p2p_settings = LocalStore.getObject('p2p_settings');\n        if (loginid && p2p_settings[loginid]) {\n            p2p_settings[loginid].is_notifications_visible = false;\n        }\n        LocalStore.setObject('p2p_settings', p2p_settings);\n\n        notifications_array.forEach(({ key, should_show_again }) => {\n            removeNotificationMessageByKey({ key });\n            removeNotificationMessage({\n                key,\n                should_show_again,\n            });\n            removeNotifications(true);\n        });\n    };\n\n    useOnClickOutside(wrapper_ref, handleClickOutside);\n\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    title={<Localize i18n_default_text='Notifications' />}\n                    wrapper_classname='notifications-mobile-dialog'\n                    visible={is_notifications_visible}\n                    onClose={toggleNotificationsModal}\n                >\n                    <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n                </MobileDialog>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <CSSTransition\n                    in={is_notifications_visible}\n                    classNames={{\n                        enter: 'notifications-dialog--enter',\n                        enterDone: 'notifications-dialog--enter-done',\n                        exit: 'notifications-dialog--exit',\n                    }}\n                    timeout={150}\n                    unmountOnExit\n                >\n                    <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n                </CSSTransition>\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsDialog;\n","import NotificationsDialog from './notifications-dialog';\n\nexport default NotificationsDialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Counter, DesktopWrapper, Icon, MobileWrapper, Popover } from '@deriv/components';\nimport NotificationsDialog from 'App/Containers/NotificationsDialog';\nimport 'Sass/app/modules/notifications-dialog.scss';\n\nconst ToggleNotificationsDrawer = ({\n    count,\n    is_visible,\n    toggleDialog,\n    tooltip_message,\n    should_disable_pointer_events = false,\n}) => {\n    const notifications_toggler_el = (\n        <div\n            className={classNames('notifications-toggle__icon-wrapper', {\n                'notifications-toggle__icon-wrapper--active': is_visible,\n            })}\n            onClick={toggleDialog}\n        >\n            <Icon className='notifications-toggle__icon' icon='IcBell' />\n            {!!count && <Counter count={count} className='notifications-toggle__step' />}\n        </div>\n    );\n\n    return (\n        <div\n            className={classNames('notifications-toggle', {\n                'notifications-toggle--active': is_visible,\n            })}\n        >\n            <DesktopWrapper>\n                <Popover\n                    classNameBubble='notifications-toggle__tooltip'\n                    alignment='bottom'\n                    message={tooltip_message}\n                    should_disable_pointer_events={should_disable_pointer_events}\n                    zIndex={9999}\n                >\n                    {notifications_toggler_el}\n                </Popover>\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </DesktopWrapper>\n            <MobileWrapper>\n                {notifications_toggler_el}\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </MobileWrapper>\n        </div>\n    );\n};\n\nexport default ToggleNotificationsDrawer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div100vhContainer, Icon, useOnClickOutside, Text } from '@deriv/components';\nimport { routes, isDesktop, isMobile, getActivePlatform } from '@deriv/shared';\nimport { BinaryLink } from 'App/Components/Routes';\nimport 'Sass/app/_common/components/platform-dropdown.scss';\nimport { Localize } from '@deriv/translations';\nimport { useHistory } from 'react-router';\n\nconst PlatformBox = ({ platform: { icon, description } }) => (\n    <React.Fragment>\n        <div className='platform-dropdown__list-platform-background' />\n\n        <div className='platform-switcher__dropdown' data-testid='dt_platform_box_icon'>\n            <Icon icon={icon} height={42} width={150} description={icon} />\n            <p className='platform-dropdown__list-platform-description'>{description()}</p>\n        </div>\n    </React.Fragment>\n);\n\nconst PlatformDropdownContent = ({ platform, app_routing_history }) => {\n    return (\n        (platform.link_to && (\n            <BinaryLink\n                data-testid='dt_platform_dropdown'\n                to={platform.link_to}\n                // This is here because in routes-config it needs to have children, but not in menu\n                exact={platform.link_to === routes.trade}\n                className='platform-dropdown__list-platform'\n                isActive={() => getActivePlatform(app_routing_history) === platform.name}\n            >\n                <PlatformBox platform={platform} />\n            </BinaryLink>\n        )) || (\n            <a\n                data-testid='dt_platform_dropdown_link'\n                href={platform.href}\n                className='platform-dropdown__list-platform'\n            >\n                <PlatformBox platform={platform} />\n            </a>\n        )\n    );\n};\n\nconst PlatformDropdown = ({ app_routing_history, closeDrawer, platform_config, setTogglePlatformType }) => {\n    const history = useHistory();\n\n    const TradersHubRedirect = () => {\n        return (\n            <div className='platform-dropdown__cta'>\n                <BinaryLink\n                    onClick={() => {\n                        if (isMobile()) {\n                            history.push(routes.traders_hub);\n                            setTogglePlatformType('cfd');\n                        }\n                        history.push(routes.traders_hub);\n                    }}\n                >\n                    <Text size='xs' weight='bold' align='center' className='platform-dropdown__cta--link'>\n                        <Localize i18n_default_text=\"Looking for CFDs? Go to Trader's Hub\" />\n                    </Text>\n                </BinaryLink>\n            </div>\n        );\n    };\n\n    React.useEffect(() => {\n        window.addEventListener('popstate', closeDrawer);\n        return () => {\n            window.removeEventListener('popstate', closeDrawer);\n        };\n    }, [closeDrawer]);\n\n    const ref = React.useRef();\n\n    const handleClickOutside = event => {\n        if (!event.target.closest('.platform-dropdown__list') && !event.target.closest('.platform-switcher')) {\n            closeDrawer();\n        }\n    };\n\n    useOnClickOutside(ref, handleClickOutside, () => isDesktop());\n\n    const platform_dropdown = (\n        <div className='platform-dropdown'>\n            <Div100vhContainer className='platform-dropdown__list' height_offset='15rem' is_disabled={isDesktop()}>\n                {platform_config.map(platform => {\n                    return (\n                        <div key={platform.name} onClick={closeDrawer} ref={ref}>\n                            <PlatformDropdownContent platform={platform} app_routing_history={app_routing_history} />\n                        </div>\n                    );\n                })}\n                <TradersHubRedirect />\n            </Div100vhContainer>\n        </div>\n    );\n\n    if (isMobile()) {\n        return ReactDOM.createPortal(platform_dropdown, document.getElementById('mobile_platform_switcher'));\n    }\n\n    return ReactDOM.createPortal(platform_dropdown, document.getElementById('deriv_app'));\n};\n\nexport { PlatformDropdown, PlatformBox };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nconst PlatformSwitcherLoader = ({ is_mobile, speed }) => {\n    const container_margin = 16;\n    const element_spacing = is_mobile ? 16 : 8;\n    const logo_size = is_mobile ? 40 : 32;\n    const name_height = 16;\n    const name_width = 90;\n    const name_x = container_margin + logo_size + element_spacing;\n    const name_y = is_mobile ? 12 : 8;\n    const container_width = container_margin * 2 + logo_size + element_spacing + name_width;\n    return (\n        <ContentLoader\n            height={logo_size}\n            width={container_width}\n            speed={speed}\n            backgroundColor={'var(--general-section-1)'}\n            foregroundColor={'var(--general-hover)'}\n        >\n            <rect x={container_margin} y='0' rx='4' ry='4' width={logo_size} height={logo_size} />\n            <rect x={name_x} y={name_y} rx='4' ry='4' width={name_width} height={name_height} />\n        </ContentLoader>\n    );\n};\n\nexport { PlatformSwitcherLoader };\n","import 'Sass/app/_common/components/platform-switcher.scss';\n\nimport { Icon } from '@deriv/components';\nimport { getPlatformInformation, getUrlBinaryBot, isMobile } from '@deriv/shared';\n\nimport { CSSTransition } from 'react-transition-group';\nimport { PlatformDropdown } from './platform-dropdown.jsx';\nimport { PlatformSwitcherLoader } from './Components/Preloader/platform-switcher.jsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nconst PlatformSwitcher = ({\n    toggleDrawer,\n    app_routing_history,\n    platform_config = [],\n    current_language,\n    is_landing_company_loaded,\n    is_logged_in,\n    is_logging_in,\n    setTogglePlatformType,\n}) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const is_close_drawer_fired_ref = React.useRef(false);\n\n    React.useEffect(() => {\n        platform_config.forEach(data => {\n            const { name } = data;\n            if (name === 'Binary Bot') {\n                data.href = getUrlBinaryBot();\n            }\n        });\n    }, [current_language, platform_config]);\n\n    React.useEffect(() => {\n        if (is_close_drawer_fired_ref.current) {\n            if (typeof toggleDrawer === 'function') {\n                toggleDrawer();\n            }\n        }\n        is_close_drawer_fired_ref.current = false;\n    });\n\n    const closeDrawer = () => {\n        setIsOpen(false);\n        is_close_drawer_fired_ref.current = true;\n    };\n\n    return (is_logged_in || is_logging_in ? !is_landing_company_loaded : app_routing_history.length === 0) ? (\n        <div\n            data-testid='dt_platform_switcher_preloader'\n            className={classNames('platform-switcher__preloader', {\n                'platform-switcher__preloader--is-mobile': isMobile(),\n            })}\n        >\n            <PlatformSwitcherLoader is_mobile={isMobile()} speed={3} />\n        </div>\n    ) : (\n        <React.Fragment>\n            <div\n                data-testid='dt_platform_switcher'\n                className={classNames(\n                    'platform-switcher',\n                    { 'platform-switcher--active': is_open },\n                    { 'platform-switcher--is-mobile': isMobile() }\n                )}\n                onClick={() => setIsOpen(!is_open)}\n            >\n                <Icon\n                    className='platform-switcher__icon'\n                    icon={getPlatformInformation(app_routing_history).icon}\n                    description={getPlatformInformation(app_routing_history).header}\n                    width={120}\n                    height={25}\n                />\n\n                <Icon className='platform-switcher__arrow' icon='IcChevronDownBold' />\n            </div>\n            <CSSTransition\n                mountOnEnter\n                appear\n                in={is_open}\n                classNames={{\n                    enterDone: 'platform-dropdown--enter-done',\n                }}\n                timeout={!isMobile() && is_open ? 0 : 250}\n                unmountOnExit\n            >\n                <PlatformDropdown\n                    platform_config={platform_config}\n                    closeDrawer={closeDrawer}\n                    current_language={current_language}\n                    app_routing_history={app_routing_history}\n                    setTogglePlatformType={setTogglePlatformType}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nPlatformSwitcher.propTypes = {\n    platform_config: PropTypes.array,\n    toggleDrawer: PropTypes.func,\n    current_language: PropTypes.string,\n    app_routing_history: PropTypes.array,\n    is_landing_company_loaded: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    setTogglePlatformType: PropTypes.func,\n};\n\nexport default withRouter(PlatformSwitcher);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Text, Icon, Counter } from '@deriv/components';\nimport { BinaryLink } from '../../Routes';\nimport { observer, useStore } from '@deriv/stores';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { useP2PNotificationCount, useIsRealAccountNeededForCashier, useFeatureFlags } from '@deriv/hooks';\nimport './menu-links.scss';\nimport { useHistory } from 'react-router';\n\nconst MenuItems = ({ id, text, icon, link_to, handleClickCashier }) => {\n    return (\n        <BinaryLink\n            id={id}\n            key={icon}\n            to={link_to}\n            className='header__menu-link'\n            active_class='header__menu-link--active'\n            onClick={handleClickCashier}\n        >\n            <Text size='m' line_height='xs' title={text} className='header__menu-link-text'>\n                {icon}\n                {text}\n            </Text>\n        </BinaryLink>\n    );\n};\n\nconst ReportTab = () => (\n    <MenuItems\n        id={'dt_reports_tab'}\n        icon={<Icon icon='IcReports' className='header__icon' />}\n        text={localize('Reports')}\n        link_to={routes.reports}\n    />\n);\n\nconst CashierTab = observer(() => {\n    const { client, ui } = useStore();\n    const { has_any_real_account, is_virtual } = client;\n    const { toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n    const p2p_notification_count = useP2PNotificationCount();\n    const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n\n    const history = useHistory();\n\n    const toggle_modal_routes =\n        window.location.pathname === routes.root ||\n        window.location.pathname === routes.traders_hub ||\n        window.location.pathname === routes.bot;\n\n    const toggleModal = () => {\n        if (toggle_modal_routes && !has_any_real_account) {\n            toggleReadyToDepositModal();\n        } else if (window.location.pathname === routes.traders_hub) {\n            toggleNeedRealAccountForCashierModal();\n        }\n    };\n\n    const handleClickCashier = () => {\n        if ((!has_any_real_account && is_virtual) || real_account_needed_for_cashier) {\n            toggleModal();\n        } else {\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    const cashier_redirect =\n        (toggle_modal_routes && !has_any_real_account && is_virtual) || real_account_needed_for_cashier;\n\n    return (\n        <MenuItems\n            id={'dt_cashier_tab'}\n            icon={\n                <>\n                    <Icon icon='IcCashier' className='header__icon' />\n                    {p2p_notification_count > 0 && (\n                        <Counter className='cashier__counter' count={p2p_notification_count} />\n                    )}\n                </>\n            }\n            text={localize('Cashier')}\n            link_to={!cashier_redirect ? routes.cashier : null}\n            handleClickCashier={handleClickCashier}\n        />\n    );\n});\n\nconst MenuLinks = observer(({ is_traders_hub_routes = false }) => {\n    const { i18n } = useTranslation();\n    const { client, ui } = useStore();\n    const { is_logged_in } = client;\n    const { is_mobile } = ui;\n    const { is_next_wallet_enabled } = useFeatureFlags();\n\n    if (!is_logged_in) return <></>;\n\n    return (\n        <div key={`menu-links__${i18n.language}`} className='header__menu-links'>\n            {!is_traders_hub_routes && <ReportTab />}\n            {!is_mobile && !is_next_wallet_enabled && <CashierTab />}\n        </div>\n    );\n});\n\nexport { MenuLinks };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { redirectToLogin } from '@deriv/shared';\nimport { getLanguage, localize } from '@deriv/translations';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        id='dt_login_button'\n        className={className}\n        has_effect\n        text={localize('Log in')}\n        onClick={() => redirectToLogin(false, getLanguage())}\n        tertiary\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { redirectToSignUp } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst SignupButton = ({ className, is_appstore }) => (\n    <Button\n        id='dt_signup_button'\n        className={className}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => redirectToSignUp({ is_appstore })}\n        primary\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n    is_appstore: PropTypes.bool,\n};\n\nexport { SignupButton };\n","import * as PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, DesktopWrapper, Icon, MobileWrapper, Popover } from '@deriv/components';\nimport { routes, formatMoney, PlatformContext, moduleLoader } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { LoginButton } from './login-button.jsx';\nimport { SignupButton } from './signup-button.jsx';\nimport ToggleNotifications from './toggle-notifications.jsx';\nimport { BinaryLink } from '../../Routes';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst AccountInfo = React.lazy(() =>\n    moduleLoader(() =>\n        import(\n            /* webpackChunkName: \"account-info\", webpackPreload: true */ 'App/Components/Layout/Header/account-info.jsx'\n        )\n    )\n);\n\nconst AccountActions = React.memo(\n    ({\n        acc_switcher_disabled_message,\n        account_type,\n        balance,\n        currency,\n        country_standpoint,\n        disableApp,\n        enableApp,\n        is_acc_switcher_on,\n        is_acc_switcher_disabled,\n        is_eu,\n        is_logged_in,\n        is_notifications_visible,\n        is_virtual,\n        notifications_count,\n        onClickDeposit,\n        openRealAccountSignup,\n        toggleAccountsDialog,\n        toggleNotifications,\n    }) => {\n        const { is_appstore } = React.useContext(PlatformContext);\n\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <MobileWrapper>\n                        <ToggleNotifications\n                            count={notifications_count}\n                            is_visible={is_notifications_visible}\n                            toggleDialog={toggleNotifications}\n                        />\n                        <React.Suspense fallback={<div />}>\n                            <AccountInfo\n                                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                                account_type={account_type}\n                                balance={\n                                    typeof balance === 'undefined' ? balance : formatMoney(currency, balance, true)\n                                }\n                                is_disabled={is_acc_switcher_disabled}\n                                disableApp={disableApp}\n                                enableApp={enableApp}\n                                is_eu={is_eu}\n                                is_virtual={is_virtual}\n                                is_mobile\n                                currency={currency}\n                                country_standpoint={country_standpoint}\n                                is_dialog_on={is_acc_switcher_on}\n                                toggleDialog={toggleAccountsDialog}\n                            />\n                        </React.Suspense>\n                    </MobileWrapper>\n                    <DesktopWrapper>\n                        <ToggleNotifications\n                            count={notifications_count}\n                            is_visible={is_notifications_visible}\n                            toggleDialog={toggleNotifications}\n                            tooltip_message={<Localize i18n_default_text='View notifications' />}\n                            should_disable_pointer_events\n                        />\n                        <Popover\n                            classNameBubble='account-settings-toggle__tooltip'\n                            alignment='bottom'\n                            message={<Localize i18n_default_text='Manage account settings' />}\n                            should_disable_pointer_events\n                            zIndex={9999}\n                        >\n                            <BinaryLink className='account-settings-toggle' to={routes.personal_details}>\n                                <Icon icon='IcUserOutline' />\n                            </BinaryLink>\n                        </Popover>\n                        <React.Suspense fallback={<div />}>\n                            <AccountInfo\n                                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                                account_type={account_type}\n                                balance={\n                                    typeof balance === 'undefined' ? balance : formatMoney(currency, balance, true)\n                                }\n                                is_disabled={is_acc_switcher_disabled}\n                                is_eu={is_eu}\n                                is_virtual={is_virtual}\n                                currency={currency}\n                                country_standpoint={country_standpoint}\n                                is_dialog_on={is_acc_switcher_on}\n                                toggleDialog={toggleAccountsDialog}\n                            />\n                        </React.Suspense>\n                        {!is_virtual && !currency && (\n                            <div className='set-currency'>\n                                <Button\n                                    onClick={() => openRealAccountSignup('set_currency')}\n                                    has_effect\n                                    type='button'\n                                    text={localize('Set currency')}\n                                    primary\n                                />\n                            </div>\n                        )}\n                        {currency && (\n                            <Button\n                                className='acc-info__button'\n                                has_effect\n                                text={localize('Deposit')}\n                                onClick={onClickDeposit}\n                                primary\n                            />\n                        )}\n                    </DesktopWrapper>\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' is_appstore={is_appstore} />\n            </React.Fragment>\n        );\n    }\n);\n\nAccountActions.displayName = 'AccountActions';\n\nAccountActions.propTypes = {\n    acc_switcher_disabled_message: PropTypes.string,\n    account_type: PropTypes.string,\n    balance: PropTypes.any,\n    currency: PropTypes.any,\n    is_acc_switcher_disabled: PropTypes.any,\n    is_eu: PropTypes.bool,\n    disableApp: PropTypes.any,\n    enableApp: PropTypes.any,\n    country_standpoint: PropTypes.object,\n    is_acc_switcher_on: PropTypes.any,\n    is_logged_in: PropTypes.any,\n    is_notifications_visible: PropTypes.any,\n    is_virtual: PropTypes.any,\n    notifications_count: PropTypes.any,\n    onClickDeposit: PropTypes.func,\n    openRealAccountSignup: PropTypes.func,\n    toggleAccountsDialog: PropTypes.any,\n    toggleNotifications: PropTypes.any,\n};\n\nexport { AccountActions };\n","import React from 'react';\nimport { Badge } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TWalletBadge = {\n    is_demo: boolean;\n    label?: string;\n};\n\nconst WalletBadge = ({ is_demo, label }: TWalletBadge) => {\n    return is_demo ? (\n        <Badge type='contained' background_color='blue' label={localize('Demo')} custom_color='colored-background' />\n    ) : (\n        <Badge type='bordered' label={label?.toUpperCase() ?? ''} />\n    );\n};\n\nexport default WalletBadge;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { AppLinkedWithWalletIcon, Text } from '@deriv/components';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useStoreWalletAccountsList } from '@deriv/hooks';\nimport { Localize } from '@deriv/translations';\nimport WalletBadge from 'App/Components/Layout/Header/wallets/wallet-badge';\nimport './account-switcher-wallet-item.scss';\n\ntype TAccountSwitcherWalletItemProps = {\n    account: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number];\n    closeAccountsDialog: () => void;\n    show_badge?: boolean;\n};\n\nexport const AccountSwitcherWalletItem = observer(\n    ({ closeAccountsDialog, account, show_badge = false }: TAccountSwitcherWalletItemProps) => {\n        const {\n            currency,\n            dtrade_loginid,\n            dtrade_balance,\n            gradients,\n            icons,\n            is_virtual,\n            landing_company_name,\n            linked_to,\n            icon_type,\n            loginid,\n        } = account;\n\n        const {\n            ui: { is_dark_mode_on },\n            client: { switchAccount, loginid: active_loginid },\n        } = useStore();\n\n        const theme = is_dark_mode_on ? 'dark' : 'light';\n        const app_icon = is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight';\n        const is_active = loginid === active_loginid;\n        const is_selected = is_active || linked_to?.some(account => account.loginid === active_loginid);\n\n        const onAccountSwitch = async () => {\n            closeAccountsDialog();\n            if (is_selected) return;\n            await switchAccount(dtrade_loginid);\n        };\n\n        return (\n            <div\n                className={classNames('acc-switcher-wallet-item__container', {\n                    'acc-switcher-wallet-item__container--active': is_selected,\n                })}\n                data-testid='account-switcher-wallet-item'\n                onClick={onAccountSwitch}\n                // SonarLint offers to add handler for onKeyDown event and a role if we have onClick event handler\n                role='button'\n                onKeyDown={onAccountSwitch}\n            >\n                <div>\n                    <AppLinkedWithWalletIcon\n                        app_icon={app_icon}\n                        gradient_class={gradients?.card[theme] ?? ''}\n                        type={icon_type}\n                        wallet_icon={icons?.[theme] ?? ''}\n                        hide_watermark\n                    />\n                </div>\n                <div className='acc-switcher-wallet-item__content'>\n                    <Text size='xxxs'>\n                        <Localize i18n_default_text='Deriv Apps' />\n                    </Text>\n                    <Text size='xxxs'>\n                        {is_virtual ? (\n                            <Localize i18n_default_text='Demo Wallet' />\n                        ) : (\n                            <Localize\n                                i18n_default_text='{{currency}} Wallet'\n                                values={{ currency: getCurrencyDisplayCode(currency) }}\n                            />\n                        )}\n                    </Text>\n                    <Text size='xs' weight='bold'>\n                        {`${formatMoney(currency || '', dtrade_balance || 0, true)} ${getCurrencyDisplayCode(\n                            currency\n                        )}`}\n                    </Text>\n                </div>\n                {show_badge && <WalletBadge is_demo={Boolean(is_virtual)} label={landing_company_name} />}\n            </div>\n        );\n    }\n);\n","import React from 'react';\nimport { AccountSwitcherWalletItem } from './account-switcher-wallet-item';\nimport { TStores } from '@deriv/stores/types';\nimport './account-switcher-wallet-list.scss';\n\ntype TAccountSwitcherWalletListProps = {\n    wallets: TStores['client']['wallet_list'];\n    closeAccountsDialog: () => void;\n};\n\nexport const AccountSwitcherWalletList = ({ wallets, closeAccountsDialog }: TAccountSwitcherWalletListProps) => (\n    <div className='account-switcher-wallet-list'>\n        {wallets?.map(account => {\n            const show_badge = account?.is_malta_wallet || account?.is_virtual;\n            return (\n                <AccountSwitcherWalletItem\n                    key={account.dtrade_loginid}\n                    account={account}\n                    closeAccountsDialog={closeAccountsDialog}\n                    show_badge={show_badge}\n                />\n            );\n        })}\n    </div>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Icon, Text, ThemedScrollbars, useOnClickOutside } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useStoreWalletAccountsList } from '@deriv/hooks';\nimport { AccountSwitcherWalletList } from './account-switcher-wallet-list';\nimport './account-switcher-wallet.scss';\n\ntype TAccountSwitcherWalletProps = {\n    is_visible: boolean;\n    toggle: (value: boolean) => void;\n};\n\nexport const AccountSwitcherWallet = observer(({ is_visible, toggle }: TAccountSwitcherWalletProps) => {\n    const { data: wallet_list } = useStoreWalletAccountsList();\n    const dtrade_account_wallets = wallet_list?.filter(wallet => wallet.dtrade_loginid);\n\n    const history = useHistory();\n\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n\n    const validateClickOutside = (event: MouseEvent) =>\n        is_visible && !(event.target as unknown as HTMLElement).classList.contains('acc-info');\n\n    const closeAccountsDialog = React.useCallback(() => {\n        toggle(false);\n    }, [toggle]);\n\n    useOnClickOutside(wrapper_ref, closeAccountsDialog, validateClickOutside);\n\n    const handleTradersHubRedirect = async () => {\n        closeAccountsDialog();\n        history.push(routes.wallets);\n    };\n\n    return (\n        <div className='account-switcher-wallet' ref={wrapper_ref}>\n            <div className='account-switcher-wallet__header'>\n                <Text as='h4' weight='bold' size='xs'>\n                    <Localize i18n_default_text='Deriv Apps accounts' />\n                </Text>\n            </div>\n            <ThemedScrollbars height={450}>\n                <AccountSwitcherWalletList wallets={dtrade_account_wallets} closeAccountsDialog={closeAccountsDialog} />\n            </ThemedScrollbars>\n            <div className='account-switcher-wallet__looking-for-cfds'>\n                <Text size='xs' line_height='xl'>\n                    <Localize i18n_default_text='Looking for CFDs? Go to Trader’s hub' />\n                </Text>\n                <Icon\n                    data_testid='dt_go_to_arrow'\n                    icon='IcChevronDownBold'\n                    className='account-switcher-wallet__arrow'\n                    onClick={handleTradersHubRedirect}\n                />\n            </div>\n        </div>\n    );\n});\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Button, Icon, MobileDialog, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { AccountSwitcherWalletList } from './account-switcher-wallet-list';\nimport { useStoreWalletAccountsList } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport './account-switcher-wallet-mobile.scss';\n\ntype TAccountSwitcherWalletMobile = {\n    is_visible: boolean;\n    toggle: (value: boolean) => void;\n};\n\nexport const AccountSwitcherWalletMobile = observer(({ is_visible, toggle }: TAccountSwitcherWalletMobile) => {\n    const history = useHistory();\n    const { data: wallet_list } = useStoreWalletAccountsList();\n\n    const dtrade_account_wallets = wallet_list?.filter(wallet => wallet.dtrade_loginid);\n\n    const closeAccountsDialog = React.useCallback(() => {\n        toggle(false);\n    }, [toggle]);\n\n    const handleTradersHubRedirect = async () => {\n        closeAccountsDialog();\n        history.push(routes.traders_hub);\n    };\n\n    const footer = (\n        <div\n            className='account-switcher-wallet-mobile__footer'\n            onClick={handleTradersHubRedirect}\n            // SonarLint offers to add handler for onKeyDown event and a role if we have onClick event handler\n            role='button'\n            onKeyDown={handleTradersHubRedirect}\n        >\n            <Text weight='normal' size='xs'>\n                <Localize i18n_default_text='Looking for CFDs? Go to Trader’s hub' />\n            </Text>\n            <Icon icon='IcChevronRightBold' />\n        </div>\n    );\n\n    return (\n        <MobileDialog\n            portal_element_id='deriv_app'\n            footer={footer}\n            visible={is_visible}\n            onClose={closeAccountsDialog}\n            has_close_icon\n            has_full_height\n            title={<Localize i18n_default_text='Deriv Apps accounts' />}\n        >\n            <div className='account-switcher-wallet-mobile'>\n                <AccountSwitcherWalletList wallets={dtrade_account_wallets} closeAccountsDialog={closeAccountsDialog} />\n                <Button className='account-switcher-wallet-mobile__button' has_effect primary large>\n                    <Localize i18n_default_text='Manage funds' />\n                </Button>\n            </div>\n        </MobileDialog>\n    );\n});\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsInfoLoader = ({ is_mobile, is_logged_in, speed }) => (\n    <ContentLoader\n        height={is_mobile ? 42 : 46}\n        width={is_mobile ? 216 : 350}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        {is_logged_in ? <LoggedInPreloader is_mobile={is_mobile} /> : <LoggedOutPreloader is_mobile={is_mobile} />}\n    </ContentLoader>\n);\n\nconst LoggedOutPreloader = ({ is_mobile }) => (\n    <React.Fragment>\n        <rect x={is_mobile ? 42 : 166} y='8' rx='4' ry='4' width='66' height='32' />\n        <rect x={is_mobile ? 120 : 250} y='8' rx='4' ry='4' width='80' height='32' />\n    </React.Fragment>\n);\n\nconst LoggedInPreloader = ({ is_mobile }) => (\n    <>\n        {is_mobile ? (\n            <React.Fragment>\n                <circle cx='97' cy='22' r='13' />\n                <circle cx='59' cy='22' r='13' />\n                <rect x='128' y='19' rx='4' ry='4' width='76' height='7' />\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                <circle cx='14' cy='22' r='12' />\n                <circle cx='58' cy='22' r='12' />\n                <rect x='150' y='20' rx='4' ry='4' width='76' height='7' />\n                <circle cx='118' cy='24' r='13' />\n                <rect x='87' y='8' rx='4' ry='4' width='1' height='30' />\n                <rect x='250' y='8' rx='4' ry='4' width='82' height='32' />\n            </React.Fragment>\n        )}\n    </>\n);\n\nAccountsInfoLoader.propTypes = {\n    speed: PropTypes.number,\n    is_mobile: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\nexport { AccountsInfoLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsItemLoader = ({ speed }) => (\n    <ContentLoader\n        height={24}\n        width={246}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <circle cx='18' cy='13' r='10' />\n        <rect x='36' y='3' rx='4' ry='4' width='108' height='20' />\n        <rect x='175' y='3' rx='4' ry='4' width='70' height='20' />\n    </ContentLoader>\n);\n\nAccountsItemLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { AccountsItemLoader };\n","import React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, WalletIcon, Text, AppLinkedWithWalletIcon } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { useStoreWalletAccountsList, useStoreLinkedWalletsAccounts } from '@deriv/hooks';\nimport { AccountSwitcherWallet, AccountSwitcherWalletMobile } from 'App/Containers/AccountSwitcherWallet';\nimport { AccountsInfoLoader } from '../Components/Preloader';\nimport AccountInfoWrapper from '../account-info-wrapper';\nimport WalletBadge from './wallet-badge';\n\ntype TAccountInfoWallets = {\n    toggleDialog: () => void;\n    is_dialog_on: boolean;\n};\n\ntype TDropdownArrow = {\n    is_disabled?: boolean;\n};\n\ntype TBalanceLabel = {\n    balance: number;\n    currency: string;\n    is_virtual: boolean;\n    display_code: string;\n};\n\ntype TMobileInfoIcon = {\n    wallet_account: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number];\n};\n\ntype TDesktopInfoIcons = {\n    wallet_account: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number];\n};\n\nconst DropdownArrow = ({ is_disabled = false }: TDropdownArrow) =>\n    is_disabled ? (\n        <Icon data_testid='dt_lock_icon' icon='IcLock' />\n    ) : (\n        <Icon data_testid='dt_select_arrow' icon='IcChevronDownBold' className='acc-info__select-arrow' />\n    );\n\nconst BalanceLabel = ({ balance, currency, is_virtual, display_code }: Partial<TBalanceLabel>) =>\n    typeof balance !== 'undefined' || !currency ? (\n        <div className='acc-info__wallets-account-type-and-balance'>\n            <Text\n                as='p'\n                data-testid='dt_balance'\n                className={classNames('acc-info__balance acc-info__wallets-balance', {\n                    'acc-info__balance--no-currency': !currency && !is_virtual,\n                })}\n            >\n                {!currency ? (\n                    <Localize i18n_default_text='No currency assigned' />\n                ) : (\n                    `${formatMoney(currency, balance ?? 0, true)} ${display_code}`\n                )}\n            </Text>\n        </div>\n    ) : null;\n\nconst MobileInfoIcon = observer(({ wallet_account }: TMobileInfoIcon) => {\n    const {\n        ui: { is_dark_mode_on },\n    } = useStore();\n\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    const app_icon = is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight';\n\n    return (\n        <div className='acc-info__wallets-container'>\n            <AppLinkedWithWalletIcon\n                app_icon={app_icon}\n                gradient_class={wallet_account?.gradients?.card[theme] ?? ''}\n                size='small'\n                type={wallet_account?.icon_type}\n                wallet_icon={wallet_account?.icons?.[theme] ?? ''}\n                hide_watermark\n            />\n        </div>\n    );\n});\n\nconst DesktopInfoIcons = observer(({ wallet_account }: TDesktopInfoIcons) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n\n    return (\n        <div className='acc-info__wallets-container'>\n            <Icon\n                icon={is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight'}\n                size={24}\n                data_testid='dt_ic_wallet_options'\n            />\n            <WalletIcon\n                icon={wallet_account?.icons?.[theme] ?? ''}\n                type={wallet_account?.icon_type}\n                gradient_class={wallet_account?.gradients?.card[theme]}\n                size={'small'}\n                has_bg\n                hide_watermark\n            />\n        </div>\n    );\n});\n\nconst AccountInfoWallets = observer(({ is_dialog_on, toggleDialog }: TAccountInfoWallets) => {\n    const { client, ui } = useStore();\n    const { switchAccount, is_logged_in, loginid, accounts } = client;\n    const { is_mobile, account_switcher_disabled_message } = ui;\n    const { data: wallet_list } = useStoreWalletAccountsList();\n    const linked_wallets_accounts = useStoreLinkedWalletsAccounts();\n\n    const active_account = accounts?.[loginid ?? ''];\n    const active_wallet = wallet_list?.find(wallet => wallet.loginid === loginid);\n\n    let linked_dtrade_trading_account_loginid = loginid;\n\n    if (active_wallet) {\n        // get 'dtrade' loginid account linked to the current wallet\n        linked_dtrade_trading_account_loginid =\n            active_wallet.dtrade_loginid || linked_wallets_accounts.dtrade?.[0]?.loginid;\n\n        // switch to dtrade account\n        if (linked_dtrade_trading_account_loginid && linked_dtrade_trading_account_loginid !== loginid) {\n            switchAccount(linked_dtrade_trading_account_loginid);\n        }\n    }\n\n    const linked_wallet = wallet_list?.find(wallet => wallet.dtrade_loginid === linked_dtrade_trading_account_loginid);\n\n    if (!linked_wallet) return <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={is_mobile} speed={3} />;\n\n    const show_badge = linked_wallet.is_malta_wallet || linked_wallet.is_virtual;\n\n    return (\n        <div className='acc-info__wrapper'>\n            <div className='acc-info__separator' />\n            <AccountInfoWrapper\n                is_mobile={is_mobile}\n                is_disabled={Boolean(active_account?.is_disabled)}\n                disabled_message={account_switcher_disabled_message}\n            >\n                <div\n                    data-testid='dt_acc_info'\n                    id='dt_core_account-info_acc-info'\n                    className={classNames('acc-info acc-info__wallets', {\n                        'acc-info--show': is_dialog_on,\n                        'acc-info--is-disabled': active_account?.is_disabled,\n                    })}\n                    onClick={active_account?.is_disabled ? undefined : () => toggleDialog()}\n                    // SonarLint offers to add handler for onKeyDown event if we have onClick event handler\n                    onKeyDown={active_account?.is_disabled ? undefined : () => toggleDialog()}\n                >\n                    {is_mobile ? (\n                        <MobileInfoIcon wallet_account={linked_wallet} />\n                    ) : (\n                        <DesktopInfoIcons wallet_account={linked_wallet} />\n                    )}\n                    <BalanceLabel\n                        balance={active_account?.balance}\n                        currency={active_account?.currency}\n                        is_virtual={Boolean(active_account?.is_virtual)}\n                        display_code={getCurrencyDisplayCode(active_account?.currency)}\n                    />\n                    {show_badge && (\n                        <WalletBadge\n                            is_demo={Boolean(linked_wallet?.is_virtual)}\n                            label={linked_wallet?.landing_company_name}\n                        />\n                    )}\n                    <DropdownArrow is_disabled={Boolean(active_account?.is_disabled)} />\n                </div>\n            </AccountInfoWrapper>\n            {is_mobile ? (\n                <AccountSwitcherWalletMobile is_visible={is_dialog_on} toggle={toggleDialog} />\n            ) : (\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={200}\n                    classNames={{\n                        enter: 'acc-switcher__wrapper--enter',\n                        enterDone: 'acc-switcher__wrapper--enter-done',\n                        exit: 'acc-switcher__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='acc-switcher__wrapper acc-switcher__wrapper--wallets'>\n                        <AccountSwitcherWallet is_visible={is_dialog_on} toggle={toggleDialog} />\n                    </div>\n                </CSSTransition>\n            )}\n        </div>\n    );\n});\n\nexport default AccountInfoWallets;\n","import React from 'react';\nimport { Button, Icon, Popover } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { LoginButton } from '../login-button.jsx';\nimport { SignupButton } from '../signup-button.jsx';\nimport { BinaryLink } from '../../../Routes/index.js';\nimport ToggleNotifications from '../toggle-notifications.jsx';\nimport AccountInfoWallets from './account-info-wallets';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst AccountActionsWallets = observer(() => {\n    const { client, ui, notifications } = useStore();\n    const { is_logged_in, accounts, loginid } = client;\n    const { openRealAccountSignup, toggleAccountsDialog, is_mobile, is_accounts_switcher_on } = ui;\n    const { is_notifications_visible, notifications: notificationsArray, toggleNotificationsModal } = notifications;\n\n    const notifications_count = notificationsArray?.length;\n\n    const active_account = accounts?.[loginid ?? ''];\n    const is_virtual = active_account?.is_virtual;\n    const currency = active_account?.currency;\n\n    if (is_logged_in) {\n        return is_mobile ? (\n            <React.Fragment>\n                <AccountInfoWallets is_dialog_on={is_accounts_switcher_on} toggleDialog={toggleAccountsDialog} />\n                <div className='acc-info__wallets-notification-icon'>\n                    <ToggleNotifications\n                        count={notifications_count}\n                        is_visible={is_notifications_visible}\n                        toggleDialog={toggleNotificationsModal}\n                        tooltip_message={undefined}\n                    />\n                </div>\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                <ToggleNotifications\n                    count={notifications_count}\n                    is_visible={is_notifications_visible}\n                    toggleDialog={toggleNotificationsModal}\n                    tooltip_message={<Localize i18n_default_text='View notifications' />}\n                    should_disable_pointer_events\n                />\n                <Popover\n                    classNameBubble='account-settings-toggle__tooltip'\n                    alignment='bottom'\n                    message={<Localize i18n_default_text='Manage account settings' />}\n                    should_disable_pointer_events\n                    zIndex='9999'\n                >\n                    <BinaryLink className='account-settings-toggle' to={routes.personal_details}>\n                        <Icon icon='IcUserOutline' />\n                    </BinaryLink>\n                </Popover>\n                <AccountInfoWallets is_dialog_on={is_accounts_switcher_on} toggleDialog={toggleAccountsDialog} />\n                {!is_virtual && !currency && (\n                    <div className='set-currency'>\n                        <Button\n                            onClick={() => openRealAccountSignup('set_currency')}\n                            has_effect\n                            type='button'\n                            text={localize('Set currency')}\n                            primary\n                        />\n                    </div>\n                )}\n                {currency && (\n                    <Button\n                        className='acc-info__button'\n                        has_effect\n                        text={localize('Manage funds')}\n                        // this function will be described later\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        onClick={() => {}}\n                        primary\n                    />\n                )}\n            </React.Fragment>\n        );\n    }\n    return (\n        <React.Fragment>\n            <LoginButton className='acc-info__button' />\n            <SignupButton className='acc-info__button' />\n        </React.Fragment>\n    );\n});\n\nexport { AccountActionsWallets };\n","import React from 'react';\n\n/**\n * Listens on emitted events to show notification on available updates.\n *  - IgnorePWAUpdate event will prevent notification\n *  - ListenPWAUpdate event is usefull to re-assign notify on update behavior\n * @param onUpdate\n * @return {null}\n * @constructor\n */\nconst NewVersionNotification = ({ onUpdate }) => {\n    React.useEffect(() => {\n        const removeUpdateListener = () => {\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n\n        const addUpdateListener = () => {\n            document.addEventListener('UpdateAvailable', onUpdate);\n        };\n\n        document.addEventListener('UpdateAvailable', onUpdate);\n        document.addEventListener('IgnorePWAUpdate', removeUpdateListener);\n        document.addEventListener('ListenPWAUpdate', addUpdateListener);\n\n        return () => {\n            document.removeEventListener('IgnorePWAUpdate', removeUpdateListener);\n            document.removeEventListener('ListenPWAUpdate', addUpdateListener);\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return null;\n};\n\nexport default NewVersionNotification;\n","import { Formik } from 'formik';\nimport React from 'react';\nimport {\n    AutoHeightWrapper,\n    Div100vhContainer,\n    ThemedScrollbars,\n    FormSubmitButton,\n    Text,\n    Modal,\n} from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { isDesktop, isMobile } from '@deriv/shared';\n\nconst AcceptRiskForm = ({ onConfirm, onClose }) => {\n    return (\n        <Formik initialValues={{}} onSubmit={onConfirm} validateOnMount>\n            {({ handleSubmit }) => (\n                <AutoHeightWrapper default_height={200}>\n                    {({ setRef, height }) => (\n                        <form ref={setRef} onSubmit={handleSubmit} className='accept-risk__form'>\n                            <Div100vhContainer className='details-form' height_offset='40px' is_disabled={isDesktop()}>\n                                <ThemedScrollbars autoHide={!(window.innerHeight < 890)} height={height - 77}>\n                                    <div className='accept-risk__container'>\n                                        <div className='accept-risk__header'>\n                                            <Text weight='bold' size='xs'>\n                                                {localize('Appropriateness Test, WARNING:')}\n                                            </Text>\n                                        </div>\n                                        <Text as='p' size='xs'>\n                                            <Localize\n                                                i18n_default_text='In providing our services to you, we are required to obtain information from you in order to assess whether a given product or service is appropriate for you (that is, whether you possess the experience and knowledge to understand the risks involved).<0/><1/>'\n                                                components={[<br key={0} />, <br key={1} />]}\n                                            />\n                                            <Localize\n                                                i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><1/>'\n                                                components={[<br key={0} />, <br key={1} />]}\n                                            />\n                                            <Localize i18n_default_text='By clicking Accept below and proceeding with the Account Opening you should note that you may be exposing yourself to risks (which may be significant, including the risk of loss of the entire sum invested) that you may not have the knowledge and experience to properly assess or mitigate.' />\n                                        </Text>\n                                    </div>\n                                </ThemedScrollbars>\n                            </Div100vhContainer>\n                            <input name='accept_risk' value='1' type='hidden' />\n                            <Modal.Footer has_separator is_bypassed={isMobile()}>\n                                <FormSubmitButton\n                                    is_absolute={isMobile()}\n                                    label={localize('Accept')}\n                                    has_cancel\n                                    cancel_label={localize('Decline')}\n                                    onCancel={onClose}\n                                />\n                            </Modal.Footer>\n                        </form>\n                    )}\n                </AutoHeightWrapper>\n            )}\n        </Formik>\n    );\n};\n\nexport default AcceptRiskForm;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\n\nconst LoadingModal = props => (\n    <div className='account-signup-loader'>\n        <Loading {...props} is_fullscreen={false} />\n    </div>\n);\n\nexport default LoadingModal;\n","import classNames from 'classnames';\nimport fromEntries from 'object.fromentries';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { DesktopWrapper, FormProgress, MobileWrapper, Text, Wizard } from '@deriv/components';\nimport { WS, getLocation, toMoment, formatIDVFormValues } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport AcceptRiskForm from './accept-risk-form.jsx';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport { getItems } from './account-wizard-form';\nimport { useIsClientHighRiskForMT5 } from '@deriv/hooks';\nimport 'Sass/details-form.scss';\nimport { Analytics } from '@deriv/analytics';\n\nconst STEP_IDENTIFIERS = ['account_currency', 'personal_details', 'address_details', 'terms_of_use'];\n\nconst StepperHeader = ({ has_target, has_real_account, items, getCurrentStep, getTotalSteps, sub_section_index }) => {\n    const step = getCurrentStep() - 1;\n    const step_title = items[step].header ? items[step].header.title : '';\n\n    return (\n        <React.Fragment>\n            {(!has_real_account || has_target) && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <FormProgress steps={items} current_step={step} sub_section_index={sub_section_index} />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <FormProgress steps={items} current_step={step} sub_section_index={sub_section_index} />\n                        <div className='account-wizard__header-steps'>\n                            <Text\n                                as='h4'\n                                styles={{ lineHeight: '20px', color: 'var(--brand-red-coral)' }}\n                                size='xs'\n                                weight='bold'\n                                className='account-wizard__header-steps-title'\n                            >\n                                <Localize\n                                    i18n_default_text='Step {{step}}: {{step_title}} ({{step}} of {{steps}})'\n                                    values={{\n                                        step: step + 1,\n                                        steps: getTotalSteps(),\n                                        step_title,\n                                    }}\n                                />\n                            </Text>\n                        </div>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nconst AccountWizard = observer(props => {\n    const { client, notifications, ui, traders_hub } = useStore();\n    const modifiedProps = {\n        ...props,\n        account_settings: client.account_settings,\n        account_status: client.account_status,\n        fetchAccountSettings: client.fetchAccountSettings,\n        fetchResidenceList: client.fetchResidenceList,\n        fetchStatesList: client.fetchStatesList,\n        financial_assessment: client.financial_assessment,\n        has_currency: !!client.currency,\n        has_real_account: client.has_active_real_account,\n        has_residence: client.residence,\n        is_fully_authenticated: client.is_fully_authenticated,\n        is_virtual: client.is_virtual,\n        realAccountSignup: client.realAccountSignup,\n        residence_list: client.residence_list,\n        residence: client.residence,\n        states_list: client.states_list,\n        upgrade_info: client.upgrade_info,\n        refreshNotifications: notifications.refreshNotifications,\n        content_flag: traders_hub.content_flag,\n        closeRealAccountSignup: ui.closeRealAccountSignup,\n        real_account_signup_target: ui.real_account_signup_target,\n        setIsRealAccountSignupModalVisible: ui.setIsRealAccountSignupModalVisible,\n        setIsTradingAssessmentForNewUserEnabled: ui.setIsTradingAssessmentForNewUserEnabled,\n        setShouldShowAppropriatenessWarningModal: ui.setShouldShowAppropriatenessWarningModal,\n        setShouldShowRiskWarningModal: ui.setShouldShowRiskWarningModal,\n        setSubSectionIndex: ui.setSubSectionIndex,\n        sub_section_index: ui.sub_section_index,\n    };\n\n    const [finished] = React.useState(undefined);\n    const [mounted, setMounted] = React.useState(false);\n    const [form_error, setFormError] = React.useState('');\n    const [previous_data, setPreviousData] = React.useState([]);\n    const [state_items, setStateItems] = React.useState([]);\n    const [should_accept_financial_risk, setShouldAcceptFinancialRisk] = React.useState(false);\n    const is_high_risk_client_for_mt5 = useIsClientHighRiskForMT5();\n\n    const trackEvent = React.useCallback(\n        payload => {\n            if (modifiedProps.real_account_signup_target === 'maltainvest') return;\n\n            Analytics.trackEvent('ce_real_account_signup_form', {\n                current_step: STEP_IDENTIFIERS[payload.step_num],\n                form_source: document.referrer,\n                form_name: 'real_account_signup_form',\n                landing_company: modifiedProps.real_account_signup_target,\n                ...payload,\n            });\n        },\n        [modifiedProps.real_account_signup_target]\n    );\n\n    const {\n        setIsTradingAssessmentForNewUserEnabled,\n        residence_list,\n        states_list,\n        fetchResidenceList,\n        fetchStatesList,\n        has_residence,\n        setLoading,\n    } = modifiedProps;\n\n    const getData = async () => {\n        setLoading(true);\n        if (!residence_list.length) await fetchResidenceList();\n        if (has_residence && !states_list.length) {\n            await fetchStatesList();\n        }\n        setLoading(false);\n    };\n\n    const get_items_props = {\n        ...modifiedProps,\n        is_high_risk_client_for_mt5,\n    };\n\n    React.useEffect(() => {\n        setIsTradingAssessmentForNewUserEnabled(true);\n        getData();\n        setStateItems(previous_state => {\n            if (!previous_state.length) {\n                return getItems(get_items_props);\n            }\n            return previous_state;\n        });\n        setPreviousData(fetchFromStorage());\n        setMounted(true);\n    }, [residence_list, states_list, fetchResidenceList, fetchStatesList, has_residence]);\n\n    React.useEffect(() => {\n        if (previous_data.length > 0) {\n            const items = [...state_items];\n            previous_data.forEach((item, index) => {\n                if (item instanceof Object) {\n                    items[index].form_value = item;\n                }\n            });\n            setStateItems(items);\n            setPreviousData([]);\n        }\n    }, [previous_data]);\n\n    React.useEffect(() => {\n        if (residence_list.length) {\n            const setDefaultPhone = country_code => {\n                let items;\n                if (state_items.length) {\n                    items = state_items;\n                } else {\n                    items = getItems(get_items_props);\n                }\n\n                if (items.length > 1 && 'phone' in items[1]?.form_value) {\n                    items[1].form_value.phone = items[1].form_value.phone || country_code || '';\n                    setStateItems(items);\n                }\n            };\n            getCountryCode(residence_list).then(setDefaultPhone);\n        }\n    }, [residence_list]);\n\n    const fetchFromStorage = () => {\n        const stored_items = localStorage.getItem('real_account_signup_wizard');\n        try {\n            const items = JSON.parse(stored_items);\n            return items || [];\n        } catch (e) {\n            return [];\n        } finally {\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n    };\n\n    const getCountryCode = async residences => {\n        const response = residences.find(item => item.value === modifiedProps.residence);\n        if (!response || !response.phone_idd) return '';\n        return `+${response.phone_idd}`;\n    };\n\n    const form_values = () => {\n        return state_items\n            .map(item => item.form_value)\n            .reduce((obj, item) => {\n                const original_form_values = fromEntries(new Map(Object.entries(item)));\n                const values = Object.keys(original_form_values).reduce((acc, current) => {\n                    acc[current] =\n                        typeof original_form_values[current] === 'string'\n                            ? original_form_values[current].trim()\n                            : original_form_values[current];\n                    return acc;\n                }, {});\n                if (values.date_of_birth) {\n                    values.date_of_birth = toMoment(values.date_of_birth).format('YYYY-MM-DD');\n                }\n                if (values.place_of_birth) {\n                    values.place_of_birth = values.place_of_birth\n                        ? getLocation(residence_list, values.place_of_birth, 'value')\n                        : '';\n                }\n                if (values.citizen) {\n                    values.citizen = values.citizen ? getLocation(residence_list, values.citizen, 'value') : '';\n                }\n\n                if (values.tax_residence) {\n                    values.tax_residence = values.tax_residence\n                        ? getLocation(residence_list, values.tax_residence, 'value')\n                        : values.tax_residence;\n                }\n\n                return {\n                    ...obj,\n                    ...values,\n                };\n            }, {});\n    };\n\n    const clearError = () => {\n        setFormError('');\n    };\n\n    const getFinishedComponent = () => {\n        return finished;\n    };\n\n    const prevStep = (current_step, goToPreviousStep) => {\n        if (current_step - 1 < 0) {\n            modifiedProps.onClose();\n            return;\n        }\n\n        trackEvent({\n            action: 'step_back',\n            step_num: current_step,\n            step_codename: STEP_IDENTIFIERS[current_step],\n        });\n\n        goToPreviousStep();\n        clearError();\n    };\n\n    const processInputData = data => {\n        if (data?.risk_tolerance === 'No') {\n            return Object.entries(data).reduce((accumulator, [key, val]) => {\n                if (val) {\n                    return { ...accumulator, [key]: val };\n                }\n                return { ...accumulator };\n            }, {});\n        }\n        return data;\n    };\n\n    const submitForm = (payload = undefined) => {\n        let clone = { ...form_values() };\n        delete clone?.tax_identification_confirm;\n        delete clone?.agreed_tnc;\n        delete clone?.agreed_tos;\n        delete clone?.confirmation_checkbox;\n\n        // BE does not accept empty strings for TIN\n        // so we remove it from the payload if it is empty in case of optional TIN field\n        // as the value will be available from the form_values\n        if (clone?.tax_identification_number?.length === 0) {\n            delete clone.tax_identification_number;\n        }\n\n        clone = processInputData(clone);\n        modifiedProps.setRealAccountFormData(clone);\n        if (payload) {\n            clone = {\n                ...clone,\n                ...payload,\n            };\n        }\n        return modifiedProps.realAccountSignup(clone);\n    };\n\n    const updateValue = (index, value, setSubmitting, goToNextStep, should_override = false) => {\n        saveFormData(index, value);\n        clearError();\n\n        // Check if account wizard is not finished\n        if (should_override || index + 1 >= state_items.length) {\n            createRealAccount({});\n        } else {\n            trackEvent({\n                action: 'step_passed',\n                step_num: index,\n                step_codename: STEP_IDENTIFIERS[index],\n            });\n            goToNextStep();\n        }\n    };\n\n    const saveFormData = (index, value) => {\n        const cloned_items = Object.assign([], state_items);\n        cloned_items[index].form_value = value;\n        setStateItems(cloned_items);\n    };\n\n    const getCurrent = (key, step_index) => {\n        return key ? state_items[step_index][key] : state_items[step_index];\n    };\n\n    const getPropsForChild = step_index => {\n        const passthrough = getCurrent('passthrough', step_index);\n        const properties = getCurrent('props', step_index) || {};\n\n        if (passthrough?.length) {\n            passthrough.forEach(item => {\n                Object.assign(properties, { [item]: modifiedProps[item] });\n            });\n            properties.bypass_to_personal = previous_data.length > 0;\n        }\n        return properties;\n    };\n\n    const createRealAccount = (payload = undefined) => {\n        setLoading(true);\n        const form_data = { ...form_values() };\n        /**\n         * Remove document_type from payload if it is not present (For Non IDV supporting countries)\n         */\n        if (!form_data?.document_type?.id) {\n            delete form_data.document_type;\n        }\n\n        trackEvent({\n            action: 'save',\n        });\n\n        submitForm(payload)\n            .then(async response => {\n                trackEvent({\n                    action: 'real_signup_finished',\n                    user_choice: JSON.stringify(response?.echo_req),\n                });\n                modifiedProps.setIsRiskWarningVisible(false);\n                if (modifiedProps.real_account_signup_target === 'maltainvest') {\n                    modifiedProps.onOpenDepositModal();\n                } else if (modifiedProps.real_account_signup_target === 'samoa') {\n                    modifiedProps.onOpenWelcomeModal(response.new_account_samoa.currency.toLowerCase());\n                } else {\n                    modifiedProps.onFinishSuccess(response.new_account_real.currency.toLowerCase());\n                }\n                const country_code = modifiedProps.account_settings.citizen || modifiedProps.residence;\n                /**\n                 * If IDV details are present, then submit IDV details\n                 */\n                if (form_data?.document_type) {\n                    const idv_submit_data = {\n                        identity_verification_document_add: 1,\n                        ...formatIDVFormValues(form_data, country_code),\n                    };\n                    await WS.send(idv_submit_data);\n                }\n            })\n            .catch(error => {\n                trackEvent({\n                    action: 'real_signup_error',\n                    real_signup_error_message: error,\n                });\n                if (error.code === 'show risk disclaimer') {\n                    modifiedProps.setIsRiskWarningVisible(true);\n                    setShouldAcceptFinancialRisk(true);\n                } else if (error.code === 'AppropriatenessTestFailed') {\n                    if (form_data?.risk_tolerance === 'No') {\n                        modifiedProps.fetchAccountSettings();\n                        modifiedProps.setShouldShowRiskWarningModal(true);\n                    } else {\n                        modifiedProps.setShouldShowAppropriatenessWarningModal(true);\n                    }\n                } else {\n                    modifiedProps.onError(error, state_items);\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n                localStorage.removeItem('current_question_index');\n            });\n    };\n\n    const onAcceptRisk = () => {\n        createRealAccount({ accept_risk: 1 });\n    };\n\n    const onDeclineRisk = () => {\n        modifiedProps.onClose();\n        modifiedProps.setIsRiskWarningVisible(false);\n    };\n\n    if (modifiedProps.is_loading) return <LoadingModal />;\n\n    if (should_accept_financial_risk) {\n        return <AcceptRiskForm onConfirm={onAcceptRisk} onClose={onDeclineRisk} />;\n    }\n\n    if (!mounted) return null;\n\n    if (!finished) {\n        const employment_status =\n            state_items.find(item => item.form_value.employment_status)?.form_value?.employment_status || '';\n        const wizard_steps = state_items.map((step, step_index) => {\n            const passthrough = getPropsForChild(step_index);\n            const BodyComponent = step.body;\n            return (\n                <BodyComponent\n                    value={getCurrent('form_value', step_index)}\n                    index={step_index}\n                    onSubmit={updateValue}\n                    onCancel={prevStep}\n                    onSave={saveFormData}\n                    closeRealAccountSignup={modifiedProps.closeRealAccountSignup}\n                    is_virtual={modifiedProps.is_virtual}\n                    has_currency={modifiedProps.has_currency}\n                    form_error={form_error}\n                    {...passthrough}\n                    key={step_index}\n                    employment_status={employment_status}\n                />\n            );\n        });\n\n        let navHeader = <div />;\n        if (modifiedProps.real_account_signup_target !== 'samoa') {\n            navHeader = (\n                <StepperHeader\n                    has_real_account={modifiedProps.has_real_account}\n                    items={state_items}\n                    has_currency={modifiedProps.has_currency}\n                    has_target={modifiedProps.real_account_signup_target !== 'manage'}\n                    setIsRiskWarningVisible={modifiedProps.setIsRiskWarningVisible}\n                    sub_section_index={modifiedProps.sub_section_index}\n                />\n            );\n        }\n\n        return (\n            <Wizard\n                nav={navHeader}\n                className={classNames('account-wizard', {\n                    'account-wizard--set-currency': !modifiedProps.has_currency,\n                    'account-wizard--deriv-crypto': modifiedProps.real_account_signup_target === 'samoa',\n                })}\n            >\n                {wizard_steps}\n            </Wizard>\n        );\n    }\n\n    const FinishedModalItem = getFinishedComponent();\n    return <FinishedModalItem />;\n});\n\nAccountWizard.propTypes = {\n    account_settings: PropTypes.object,\n    account_status: PropTypes.object,\n    closeRealAccountSignup: PropTypes.func,\n    content_flag: PropTypes.string,\n    fetchResidenceList: PropTypes.func,\n    fetchAccountSettings: PropTypes.func,\n    fetchStatesList: PropTypes.func,\n    has_currency: PropTypes.bool,\n    has_real_account: PropTypes.bool,\n    has_residence: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    onFinishSuccess: PropTypes.func,\n    onLoading: PropTypes.func,\n    onOpenWelcomeModal: PropTypes.func,\n    real_account_signup_target: PropTypes.string,\n    realAccountSignup: PropTypes.func,\n    residence_list: PropTypes.array,\n    residence: PropTypes.string,\n    states_list: PropTypes.array,\n    setIsTradingAssessmentForNewUserEnabled: PropTypes.func,\n    setIsRiskWarningVisible: PropTypes.func,\n    setLoading: PropTypes.func,\n    setShouldShowRiskWarningModal: PropTypes.func,\n    setSubSectionIndex: PropTypes.func,\n    sub_section_index: PropTypes.number,\n};\n\nexport default AccountWizard;\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Icon, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { isMobile, reorderCurrencies, website_name } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport './currency-selector.scss';\n\nconst messages = () => [\n    <Localize key={0} i18n_default_text='Choose your preferred cryptocurrency' />,\n    <Localize key={1} i18n_default_text='You can open an account for each cryptocurrency.' />,\n    <Localize key={2} i18n_default_text='Add a real account' />,\n    <Localize key={3} i18n_default_text='Choose a currency you would like to trade with.' />,\n    <Localize key={4} i18n_default_text='Choose a currency' />,\n];\n\nconst Headers = ({ heading, subheading }) => (\n    <React.Fragment>\n        <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n            {heading}\n        </Text>\n        <Text as='h3' size='xxs' color='prominent' align='center' className='add-crypto-currency__sub-title'>\n            {subheading}\n        </Text>\n    </React.Fragment>\n);\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst AddCryptoCurrency = observer(\n    ({\n        form_error,\n        is_add_fiat,\n        onClickBack,\n        onSubmit,\n        should_show_crypto_only,\n        should_show_fiat_only,\n        value,\n        hasNoAvailableCrypto,\n    }) => {\n        const { client, ui } = useStore();\n        const { available_crypto_currencies, upgradeable_currencies: legal_allowed_currencies, has_fiat } = client;\n        const { should_show_cancel } = ui;\n        const getReorderedFiatCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n        const getReorderedCryptoCurrencies = () =>\n            reorderCurrencies(\n                legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE),\n                CRYPTO_CURRENCY_TYPE\n            );\n\n        const canAddFiat = () => !has_fiat && !should_show_crypto_only;\n        const canAddCrypto = currency => {\n            // check if the cryptocurrency has not been created\n            return available_crypto_currencies.map(e => e.value).indexOf(currency.value) === -1;\n        };\n\n        return (\n            <Formik\n                initialValues={{\n                    currency: value.currency,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form onSubmit={handleSubmit}>\n                        {!canAddFiat() && <Headers heading={messages()[0]} subheading={messages()[1]} />}\n                        {canAddFiat() && (\n                            <Headers heading={is_add_fiat ? messages()[4] : messages()[2]} subheading={messages()[3]} />\n                        )}\n                        {canAddFiat() && (\n                            <React.Fragment>\n                                <ThemedScrollbars>\n                                    <CurrencyRadioButtonGroup\n                                        id='fiat_currency'\n                                        is_fiat\n                                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                        value={values.currency}\n                                        error={errors.currency}\n                                        touched={touched.currency}\n                                        is_title_enabled={canAddFiat()}\n                                        item_count={getReorderedFiatCurrencies().length}\n                                    >\n                                        {getReorderedFiatCurrencies().map(currency => (\n                                            <Field\n                                                key={currency.value}\n                                                component={CurrencyRadioButton}\n                                                name='currency'\n                                                id={currency.value}\n                                                label={currency.name}\n                                            />\n                                        ))}\n                                    </CurrencyRadioButtonGroup>\n                                </ThemedScrollbars>\n                            </React.Fragment>\n                        )}\n                        {canAddFiat() && (\n                            <Text\n                                as='p'\n                                color='prominent'\n                                size='xxs'\n                                align='center'\n                                className='currency-selector__deposit-warn'\n                            >\n                                <Localize i18n_default_text='You’ll not be able to change currency once you have made a deposit.' />\n                            </Text>\n                        )}\n                        {hasNoAvailableCrypto() && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {localize(\n                                        'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                                        {\n                                            deriv: website_name,\n                                        }\n                                    )}\n                                </Text>\n                            </div>\n                        )}\n                        {!should_show_fiat_only &&\n                            (available_crypto_currencies.length !== 0 ? (\n                                <ThemedScrollbars>\n                                    <CurrencyRadioButtonGroup\n                                        id='crypto_currency'\n                                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                        label={localize('Cryptocurrencies')}\n                                        value={values.currency}\n                                        error={errors.currency}\n                                        touched={touched.currency}\n                                        is_title_enabled={canAddFiat()}\n                                        item_count={getReorderedCryptoCurrencies().length}\n                                    >\n                                        {getReorderedCryptoCurrencies().map(currency => (\n                                            <Field\n                                                key={currency.value}\n                                                component={CurrencyRadioButton}\n                                                name='currency'\n                                                id={currency.value}\n                                                label={currency.name}\n                                                selected={canAddCrypto(currency)}\n                                            />\n                                        ))}\n                                    </CurrencyRadioButtonGroup>\n                                </ThemedScrollbars>\n                            ) : (\n                                <ThemedScrollbars>\n                                    <CurrencyRadioButtonGroup\n                                        id='crypto_currency'\n                                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                        label={localize('Cryptocurrencies')}\n                                        is_title_enabled={canAddFiat()}\n                                        item_count={getReorderedCryptoCurrencies().length}\n                                    >\n                                        {getReorderedCryptoCurrencies().map(currency => (\n                                            <Field\n                                                key={currency.value}\n                                                component={CurrencyRadioButton}\n                                                name='currency'\n                                                id={currency.value}\n                                                label={currency.name}\n                                                selected\n                                            />\n                                        ))}\n                                    </CurrencyRadioButtonGroup>\n                                </ThemedScrollbars>\n                            ))}\n                        <FormSubmitButton\n                            className='currency-selector__button'\n                            is_disabled={isSubmitting || !values.currency}\n                            label={localize('Add account')}\n                            is_absolute={!isMobile()}\n                            form_error={form_error}\n                            has_cancel={should_show_cancel}\n                            cancel_label={localize('Back')}\n                            cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                            onCancel={() => onClickBack()}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nAddCryptoCurrency.propTypes = {\n    hasNoAvailableCrypto: PropTypes.func,\n    form_error: PropTypes.string,\n    onSubmit: PropTypes.func,\n    should_show_crypto_only: PropTypes.bool,\n    should_show_fiat_only: PropTypes.bool,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n        currency: PropTypes.string,\n    }),\n    onClickBack: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n};\n\nexport default AddCryptoCurrency;\n","const currenciesPaymentAgentAvailability = (legal_allowed_currencies, all_payment_agent_list, account_list) => {\n    const result = [];\n    legal_allowed_currencies.forEach(currency => {\n        result.push({\n            ...currency,\n            has_payment_agent: !!all_payment_agent_list?.filter(agent => agent.currencies === currency.value).length,\n            is_disabled: account_list?.some(account => account.title === currency.value && account.is_disabled),\n        });\n    });\n    return result;\n};\n\nexport default {\n    currenciesPaymentAgentAvailability,\n};\n","import { Field, Formik } from 'formik';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { FormSubmitButton, Icon, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile, reorderCurrencies, routes } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport CurrencyProvider from './choose-currency';\nimport { observer, useStore } from '@deriv/stores';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst AddCurrency = observer(({ onSubmit, hasNoAvailableCrypto, is_add_crypto, is_add_fiat }) => {\n    const { client, modules, ui } = useStore();\n    const { available_crypto_currencies, has_fiat, upgradeable_currencies: legal_allowed_currencies } = client;\n    const { cashier } = modules;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const deposit_target = cashier.general_store.deposit_target;\n    const { openRealAccountSignup } = ui;\n\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    const getReorderedCurrencies = React.useMemo(() => {\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list\n        );\n\n        const crypto = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === CRYPTO_CURRENCY_TYPE &&\n                    available_crypto_currencies.some(x => x.value === currency.value)\n            ),\n            CRYPTO_CURRENCY_TYPE\n        );\n\n        const fiat = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === FIAT_CURRENCY_TYPE &&\n                    !available_crypto_currencies.some(x => x.value === currency.value)\n            )\n        );\n\n        return {\n            crypto,\n            fiat,\n        };\n    }, [all_payment_agent_list, available_crypto_currencies, legal_allowed_currencies]);\n\n    const onClickBack = () => {\n        openRealAccountSignup('choose');\n        if (deposit_target === routes.cashier_pa) {\n            setShouldShowAllAvailableCurrencies(true);\n        }\n    };\n\n    const AddFiat = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Fiat currencies')}\n                </Text>\n                {!!has_fiat && (\n                    <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                        {localize('You are limited to one fiat account only.')}\n                    </Text>\n                )}\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.fiat.length}\n                    >\n                        {getReorderedCurrencies.fiat.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={has_fiat}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    const AddCrypto = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Cryptocurrencies')}\n                </Text>\n                <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                    {localize('You can open an account for each cryptocurrency.')}\n                </Text>\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.crypto.length}\n                    >\n                        {getReorderedCurrencies.crypto.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={deposit_target === routes.cashier_pa ? !currency.has_payment_agent : false}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    if (is_add_crypto)\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div\n                    className={classNames('add-crypto-currency cashier-deposit', {\n                        'account-wizard--disabled': hasNoAvailableCrypto(),\n                    })}\n                >\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        onClickBack={onClickBack}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_crypto_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n\n    if (is_add_fiat) {\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div className='change-currency'>\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_fiat_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                        is_add_fiat\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={onSubmit}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 190 : '460px'}>\n                        <div>\n                            <Text\n                                as='p'\n                                color='prominent'\n                                weight='bold'\n                                align='center'\n                                className='add-currency__wizard-header'\n                            >\n                                {localize('Choose your currency')}\n                            </Text>\n\n                            <AddFiat />\n                            <div className='add-currency__underline' />\n                            <AddCrypto />\n                        </div>\n                    </ThemedScrollbars>\n                    <div className='add-currency__note-wrapper'>\n                        <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__note'>\n                            {localize('Some currencies may not be supported by payment agents in your country.')}\n                        </Text>\n                    </div>\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Add account')}\n                        is_absolute\n                        form_error={form_error}\n                        has_cancel\n                        cancel_label={localize('Back')}\n                        cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                        onCancel={() => onClickBack()}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nAddCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    is_add_crypto: PropTypes.bool,\n    is_add_fiat: PropTypes.bool,\n    hasNoAvailableCrypto: PropTypes.func,\n};\n\nexport default AddCurrency;\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Text } from '@deriv/components';\nimport { isMobile, reorderCurrencies } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport './currency-selector.scss';\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst ChangeAccountCurrency = observer(\n    ({ value, onSubmit, form_error, can_change_fiat_currency, current_currency_type }) => {\n        const { client, ui } = useStore();\n        const {\n            upgradeable_currencies: legal_allowed_currencies,\n            currency: client_currency,\n            current_fiat_currency,\n        } = client;\n        const { closeRealAccountSignup } = ui;\n        const getReorderedCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n\n        const is_fiat = current_currency_type === 'fiat';\n        const fiat_message = (\n            <Localize\n                i18n_default_text='If you want to change your account currency, please contact us via <0>live chat</0>.'\n                components={[\n                    <span\n                        key={0}\n                        className='link link--orange'\n                        onClick={() => {\n                            closeRealAccountSignup();\n                            window.LC_API.open_chat_window();\n                        }}\n                    />,\n                ]}\n            />\n        );\n\n        const non_fiat_mesage = (\n            <Localize\n                i18n_default_text='Please switch to your {{fiat_currency}} account to change currencies.'\n                values={{\n                    fiat_currency: current_fiat_currency?.toUpperCase?.(),\n                }}\n            />\n        );\n\n        const disabled_message = is_fiat ? fiat_message : non_fiat_mesage;\n\n        return (\n            <Formik\n                initialValues={{\n                    fiat: value.fiat,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault();\n                            handleSubmit();\n                        }}\n                    >\n                        <Text as='h1' color='prominent' weight='bold' align='center' className='change-currency__title'>\n                            <Localize i18n_default_text='Change your currency' />\n                        </Text>\n                        <Text as='h3' size='xxs' align='center' className='change-currency__sub-title'>\n                            <Localize i18n_default_text='Choose the currency you would like to trade with.' />\n                        </Text>\n                        {!can_change_fiat_currency && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {disabled_message}\n                                </Text>\n                            </div>\n                        )}\n                        <CurrencyRadioButtonGroup\n                            id='fiat'\n                            label={localize('Cryptocurrencies')}\n                            className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                            value={values.fiat}\n                            error={errors.fiat}\n                            touched={touched.fiat}\n                            is_title_enabled={false}\n                            item_count={getReorderedCurrencies().length}\n                        >\n                            {getReorderedCurrencies().map(currency => (\n                                <Field\n                                    key={currency.value}\n                                    component={CurrencyRadioButton}\n                                    name='fiat'\n                                    id={currency.value}\n                                    label={currency.name}\n                                    selected={currency.value === client_currency}\n                                />\n                            ))}\n                        </CurrencyRadioButtonGroup>\n                        <FormSubmitButton\n                            className='change-currency__button'\n                            is_disabled={isSubmitting || !values.fiat}\n                            label={localize('Change currency')}\n                            is_absolute={!isMobile()}\n                            form_error={form_error}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nChangeAccountCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    closeModal: PropTypes.func,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n    }),\n    form_error: PropTypes.string,\n    can_change_fiat_currency: PropTypes.bool,\n    current_currency_type: PropTypes.string,\n    current_fiat_currency: PropTypes.string,\n};\n\nexport default ChangeAccountCurrency;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Tabs, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { CURRENCY_TYPE, isDesktop, isMobile } from '@deriv/shared';\nimport { WS } from 'Services';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrency from './add-currency.jsx';\nimport ChangeAccountCurrency from './change-account-currency.jsx';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/add-or-manage.scss';\nimport 'Sass/change-account.scss';\n\nconst AddOrManageAccounts = observer(props => {\n    const {\n        deposit_target,\n        is_add_crypto,\n        is_add_currency,\n        is_add_fiat,\n        is_loading,\n        onError,\n        onSuccessSetAccountCurrency,\n        setLoading,\n        onClose,\n    } = props;\n\n    const { client, modules, ui, traders_hub } = useStore();\n    const {\n        available_crypto_currencies,\n        can_change_fiat_currency,\n        current_currency_type,\n        has_fiat,\n        setAccountCurrency: setCurrency,\n        createCryptoAccount,\n        is_low_risk,\n        loginid,\n    } = client;\n    const { cashier } = modules;\n    const { show_eu_related_content } = traders_hub;\n    const { manage_real_account_tab_index, setShouldShowCancel, resetRealAccountSignupTarget } = ui;\n    const setIsDeposit = cashier.general_store.setIsDeposit;\n    const initial_active_index =\n        manage_real_account_tab_index ?? (has_fiat && available_crypto_currencies?.length === 0) ? 1 : 0;\n\n    const [active_index, setActiveIndex] = React.useState(initial_active_index);\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n\n    React.useEffect(() => {\n        const fetchMt5LoginList = async () => {\n            setLoading(true);\n            await WS.mt5LoginList();\n            setLoading(false);\n        };\n        fetchMt5LoginList();\n        return () => setShouldShowCancel(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setActiveTabIndex = index => {\n        setActiveIndex(index);\n    };\n\n    const setCurrencyOrAddCryptoAccount = currency_object => {\n        setLoading(true);\n        Object.entries(currency_object).map(([key, value]) => {\n            if (key === CURRENCY_TYPE.FIAT) {\n                setCurrency(value)\n                    .then(response => {\n                        onSuccessSetAccountCurrency(\n                            response.passthrough.previous_currency,\n                            response.echo_req.set_account_currency,\n                            deposit_target\n                        );\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            } else {\n                // Add Crypto Account\n                createCryptoAccount(value)\n                    .then(() => {\n                        onSuccessSetAccountCurrency('', value, deposit_target);\n                        resetRealAccountSignupTarget();\n                        setIsDeposit(true);\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            }\n        });\n    };\n\n    const hasNoAvailableCrypto = () => {\n        return available_crypto_currencies.length === 0 && has_fiat;\n    };\n\n    if (is_loading) return <LoadingModal />;\n\n    const fiat_section = has_fiat && (\n        <div\n            className={classNames('change-currency', {\n                'account-wizard--disabled': !can_change_fiat_currency,\n            })}\n        >\n            <ChangeAccountCurrency\n                className='account-wizard__body'\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                can_change_fiat_currency={can_change_fiat_currency}\n                current_currency_type={current_currency_type}\n                closeModal={onClose}\n            />\n        </div>\n    );\n\n    if (is_add_currency || is_add_crypto || is_add_fiat) {\n        return (\n            <AddCurrency\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                should_show_crypto_only\n                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                is_add_crypto={is_add_crypto}\n                is_add_fiat={is_add_fiat}\n                is_add_currency={is_add_currency}\n            />\n        );\n    }\n\n    const is_mf_active = loginid?.startsWith('MF');\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()} autohide={false}>\n            {(show_eu_related_content && !is_low_risk && has_fiat) || is_mf_active ? (\n                fiat_section\n            ) : (\n                <Tabs\n                    active_index={active_index}\n                    className='account-wizard add-or-manage tabs--desktop'\n                    onTabItemClick={setActiveTabIndex}\n                    top\n                    header_fit_content={isDesktop()}\n                >\n                    <div label={localize('Cryptocurrencies')}>\n                        <div\n                            className={classNames('add-crypto-currency', {\n                                'account-wizard--disabled': hasNoAvailableCrypto(),\n                            })}\n                        >\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_crypto_only\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        </div>\n                    </div>\n                    <div label={localize('Fiat currencies')}>\n                        {has_fiat ? (\n                            fiat_section\n                        ) : (\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_fiat_only={true}\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        )}\n                    </div>\n                </Tabs>\n            )}\n        </ThemedScrollbars>\n    );\n});\n\nAddOrManageAccounts.propTypes = {\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    onSuccessSetAccountCurrency: PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_add_crypto: PropTypes.bool,\n    setLoading: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n    is_add_currency: PropTypes.bool,\n    deposit_target: PropTypes.string,\n};\n\nexport default AddOrManageAccounts;\n","import { Field, Formik } from 'formik';\nimport React from 'react';\nimport { FormSubmitButton, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { reorderCurrencies, routes } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport CurrencyProvider from './choose-currency';\nimport { observer, useStore } from '@deriv/stores';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst ChooseCurrency = observer(() => {\n    const { client, modules, ui } = useStore();\n    const {\n        account_list,\n        available_crypto_currencies,\n        currency: currency_title,\n        has_fiat,\n        upgradeable_currencies: legal_allowed_currencies,\n        switchAccount,\n    } = client;\n    const { cashier } = modules;\n    const { closeRealAccountSignup, continueRouteAfterChooseCrypto, openRealAccountSignup, setShouldShowCancel } = ui;\n    const deposit_target = cashier.general_store.deposit_target;\n    const should_show_all_available_currencies = cashier.general_store.should_show_all_available_currencies;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '' });\n\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    React.useEffect(() => {\n        return () => setShouldShowAllAvailableCurrencies(false);\n    }, [setShouldShowAllAvailableCurrencies]);\n\n    const getReorderedCryptoCurrencies = React.useMemo(() => {\n        const hasAllCryptos = () => {\n            return (\n                legal_allowed_currencies?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE && !account_list.some(x => x.title === currency.value)\n                ).length === 0\n            );\n        };\n\n        const addNewCryptoAccount = () => {\n            openRealAccountSignup(deposit_target === routes.cashier_pa ? 'add_currency' : 'add_crypto');\n            setShouldShowCancel(true);\n        };\n\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list,\n            account_list\n        );\n\n        const reorderCryptoCurrencies = should_show_all_available_currencies\n            ? reorderCurrencies(\n                  allowed_currencies_payment_agent_availability?.filter(currency =>\n                      account_list.some(x => x.title === currency.value)\n                  ),\n                  CRYPTO_CURRENCY_TYPE\n              )\n            : reorderCurrencies(\n                  allowed_currencies_payment_agent_availability?.filter(\n                      currency =>\n                          currency.type === CRYPTO_CURRENCY_TYPE &&\n                          !available_crypto_currencies.some(x => x.value === currency.value)\n                  ),\n                  CRYPTO_CURRENCY_TYPE\n              );\n\n        const show_add_button = deposit_target === routes.cashier_pa ? !has_fiat || !hasAllCryptos() : !hasAllCryptos();\n\n        if (show_add_button) {\n            reorderCryptoCurrencies.push({\n                value: 'plus',\n                name: deposit_target === routes.cashier_pa ? localize('Add a new') : localize('Add new'),\n                second_line_label:\n                    deposit_target === routes.cashier_pa ? localize('account') : localize('crypto account'),\n                icon: 'IcAddAccount',\n                onClick: () => addNewCryptoAccount(),\n                has_payment_agent: true,\n            });\n        }\n\n        return reorderCryptoCurrencies;\n    }, [\n        account_list,\n        all_payment_agent_list,\n        available_crypto_currencies,\n        deposit_target,\n        has_fiat,\n        legal_allowed_currencies,\n        should_show_all_available_currencies,\n        openRealAccountSignup,\n        setShouldShowCancel,\n    ]);\n\n    const doSwitch = async value => {\n        const target_account = account_list.filter(account => account.title === value);\n        const loginid = target_account.map(x => x.loginid)[0];\n        if (loginid) await switchAccount(loginid);\n    };\n\n    const onSubmit = async obj => {\n        Object.entries(obj).map(([title, value]) => {\n            if (title) {\n                closeRealAccountSignup();\n                if (value !== currency_title) {\n                    doSwitch(value);\n                }\n                continueRouteAfterChooseCrypto();\n            }\n        });\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={values => {\n                onSubmit(values);\n            }}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n                        {deposit_target === routes.cashier_pa\n                            ? localize('Choose an account or add a new one')\n                            : localize('Choose one of your accounts or add a new cryptocurrency account')}\n                    </Text>\n                    <ThemedScrollbars>\n                        {is_loading ? (\n                            <Loading is_fullscreen={false} className='currency-list__loading-wrapper' />\n                        ) : (\n                            <CurrencyRadioButtonGroup\n                                id='crypto_currency'\n                                className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                item_count={getReorderedCryptoCurrencies.length}\n                            >\n                                {getReorderedCryptoCurrencies.map(currency => (\n                                    <Field\n                                        key={currency.value}\n                                        component={CurrencyRadioButton}\n                                        name='currency'\n                                        id={currency.value}\n                                        label={currency.name}\n                                        icon={currency.icon}\n                                        second_line_label={currency.second_line_label}\n                                        onClick={currency.onClick}\n                                        selected={\n                                            currency.is_disabled || deposit_target === routes.cashier_pa\n                                                ? !currency.has_payment_agent\n                                                : false\n                                        }\n                                    />\n                                ))}\n                            </CurrencyRadioButtonGroup>\n                        )}\n                    </ThemedScrollbars>\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Continue')}\n                        is_absolute\n                        form_error={form_error}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nexport default ChooseCurrency;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst FinishedAddCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    redirectToLegacyPlatform,\n    deposit_real_account_signup_target,\n    history,\n    onSubmit,\n    setIsDeposit,\n}) => {\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n        redirectToLegacyPlatform();\n    };\n\n    const onCancel = () => {\n        closeRealAccountSignup();\n        setIsDeposit(false);\n        redirectToLegacyPlatform();\n    };\n\n    return (\n        <React.Fragment>\n            {isDesktop() && (\n                <div onClick={onCancel} className='finished-add-currency__close'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n            <Div100vhContainer className='finished-add-currency__dialog' is_disabled={isDesktop()} height_offset='40px'>\n                <div\n                    className={classNames('status-dialog__header', {\n                        'status-dialog__header--center': isMobile(),\n                    })}\n                >\n                    <IconNextCurrency />\n                    <IconWon className='bottom-right-overlay' />\n                </div>\n                <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': isMobile() })}>\n                    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                        <Localize i18n_default_text='Your account is ready' />\n                    </Text>\n                    <Text as='p' align='center'>\n                        <Localize i18n_default_text='Fund your account to start trading.' />\n                    </Text>\n                </div>\n                <div className='finished-add-currency__footer'>\n                    <Button onClick={onCancel} text={localize('Maybe later')} secondary />\n                    <Button\n                        onClick={\n                            ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                                ? closeModalThenOpenCashier\n                                : onSubmit\n                        }\n                        text={localize('Deposit now')}\n                        primary\n                    />\n                </div>\n            </Div100vhContainer>\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(FinishedAddCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst SuccessMessage = ({ prev, current }) =>\n    prev ? (\n        <Localize\n            i18n_default_text={\n                '<0>You have successfully changed your currency to {{currency}}.</0><0>Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    ) : (\n        <Localize\n            i18n_default_text={\n                '<0>You have added a {{currency}} account.</0><0> Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    );\n\nconst FinishedSetCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    deposit_real_account_signup_target,\n    history,\n    onCancel,\n    onSubmit,\n    prev,\n    setIsDeposit,\n}) => {\n    const IconPrevCurrency = () =>\n        prev ? <Icon icon={`IcCurrency-${prev.toLowerCase()}`} height={120} width={90} /> : null;\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconArrow = () => (prev ? <Icon icon='IcArrowPointerRight' color='red' width={50} height={20} /> : null);\n\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n    };\n\n    const closeModal = () => {\n        onCancel();\n        setIsDeposit(false);\n    };\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--center': isMobile(),\n                    'status-dialog__header--set-currency': prev,\n                })}\n            >\n                <IconPrevCurrency />\n                <IconArrow />\n                <IconNextCurrency />\n                <IconWon className='bottom-right-overlay' />\n            </div>\n            <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': isMobile() })}>\n                <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                    <Localize i18n_default_text='Success!' />\n                </Text>\n                <SuccessMessage prev={prev} current={current} />\n            </div>\n            <div className='status-dialog__footer'>\n                <Button onClick={closeModal} text={localize('Maybe later')} secondary />\n                <Button\n                    onClick={\n                        ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                            ? closeModalThenOpenCashier\n                            : onSubmit\n                    }\n                    text={localize('Deposit now')}\n                    primary\n                />\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default React.memo(FinishedSetCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { currencySelectorConfig } from '@deriv/account';\nimport { website_name, generateValidationFunction } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport CurrencySelector from '@deriv/account/src/Components/currency-selector';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport 'Sass/set-currency.scss';\nimport 'Sass/change-account.scss';\nimport { observer, useStore } from '@deriv/stores';\n\nconst SetCurrency = observer(({ setLoading, onSuccessSetAccountCurrency, onError, is_loading, ...props }) => {\n    const { client } = useStore();\n    const { available_crypto_currencies, has_fiat, landing_company_shortcode } = client;\n    const form_error = React.useState('');\n    const form_value = React.useState({ currency: '' });\n\n    const setCurrency = (obj, setSubmitting) => {\n        setLoading(true);\n        const { currency } = obj;\n        if (currency) {\n            props\n                .setCurrency(currency)\n                .then(response => {\n                    setSubmitting(false);\n                    onSuccessSetAccountCurrency('', response.echo_req.set_account_currency);\n                })\n                .catch(error_message => {\n                    onError(error_message);\n                })\n                .finally(() => setLoading(false));\n        }\n    };\n\n    const updateValue = (index, value, setSubmitting) => {\n        setCurrency(value, setSubmitting);\n    };\n\n    const noCryptoAvailable = () => {\n        return available_crypto_currencies.length === 0 && has_fiat && props.currency;\n    };\n\n    if (is_loading) return <LoadingModal />;\n    return (\n        <div\n            className={classNames('set-currency-modal', {\n                'set-currency-modal--disabled': noCryptoAvailable(),\n            })}\n        >\n            {noCryptoAvailable() && (\n                <div className='set-currency-modal--disabled-message'>\n                    <p>\n                        {localize(\n                            'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                            {\n                                deriv: website_name,\n                            }\n                        )}\n                    </p>\n                </div>\n            )}\n            <div className='set-currency-modal__heading-container'>\n                <Text\n                    as='p'\n                    size='xs'\n                    line_height='s'\n                    align='center'\n                    className='set-currency-modal__heading-container__main-heading'\n                >\n                    {localize(\n                        'You have an account that do not have currency assigned. Please choose a currency to trade with this account.'\n                    )}\n                </Text>\n                <Text\n                    as='p'\n                    weight='bold'\n                    align='center'\n                    className='set-currency-modal__heading-container__sub-heading'\n                >\n                    {localize('Please choose your currency')}\n                </Text>\n            </div>\n            <CurrencySelector\n                className='account-wizard__body'\n                onSubmit={updateValue}\n                value={form_value}\n                form_error={form_error}\n                set_currency\n                validate={generateValidationFunction(landing_company_shortcode, currencySelectorConfig)}\n                {...props}\n            />\n        </div>\n    );\n});\n\nexport default SetCurrency;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { isMobile, getSignupFormFields } from '@deriv/shared';\nimport { Button, Icon, StaticUrl, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\nconst Heading = ({ code }) => {\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Already signed up?' />\n                </Text>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text as='h2' size={isMobile() ? 'xs' : 's'} align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='You can’t add another real account' />\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <Text as='h1' align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='Invalid inputs' />\n                </Text>\n            );\n\n        default:\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Something’s not right' />\n                </Text>\n            );\n    }\n};\n\nconst Message = ({ code, message, details }) => {\n    if (code === 'PoBoxInAddress') {\n        details.error_details = { address_line_1: message };\n    } else if (code === 'InvalidPhone') {\n        details.error_details = { phone: message };\n    }\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <p>\n                    <Localize i18n_default_text='An account with your details already exists.' />\n                    <br />\n                    <Localize\n                        i18n_default_text=\"If you're having trouble signing in, let us know via <0>chat</0>\"\n                        components={[\n                            <span className='chat-inline' key={0} onClick={() => window.LC_API.open_chat_window()} />,\n                        ]}\n                    />\n                </p>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text size={isMobile() ? 'xxs' : 'xs'} align='center'>\n                    {message}\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <div className='input_validation_failed'>\n                    <Text align='center' weight='normal' line_height='xxl'>\n                        <Localize i18n_default_text='We don’t accept the following inputs for:' />\n                    </Text>\n                    {Object.keys(details?.error_details).map(item => (\n                        <div key={item} className='invalid_fields_input'>\n                            <Text size='xs' weight='bold'>\n                                {getSignupFormFields()[item]}\n                            </Text>\n                            <Text size='xs' weight='bold'>\n                                {' : '}\n                            </Text>\n                            <Text size='xs'>{details[item]}</Text>\n                        </div>\n                    ))}\n                </div>\n            );\n\n        default:\n            return <p>{message}</p>;\n    }\n};\n\nconst TryAgain = ({ text, onConfirm }) => (\n    <Button primary onClick={onConfirm} large>\n        {text}\n    </Button>\n);\n\nconst ErrorCTA = ({ code, onConfirm }) => {\n    switch (code) {\n        case 'DuplicateCurrency':\n        case 'CurrencyTypeNotAllowed':\n            return <TryAgain text={localize('Try a different currency')} onConfirm={onConfirm} />;\n        case 'DuplicateAccount':\n            return null;\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return <TryAgain text={localize('Let’s try again')} onConfirm={onConfirm} />;\n        case 'InvalidAccount':\n            return <TryAgain text={localize('OK')} onConfirm={onConfirm} />;\n\n        default:\n            return (\n                <StaticUrl\n                    href={`help-centre/${code === 'InvalidAccount' ? 'account#who-can-open-an-account' : ''}`}\n                    type='button'\n                    className='dc-btn dc-btn--primary'\n                >\n                    <Text weight='bold' color='white' size='xxs'>\n                        <Localize i18n_default_text='OK' />\n                    </Text>\n                </StaticUrl>\n            );\n    }\n};\n\nconst SignupErrorContent = ({ message, code, onConfirm, className, error_field = {} }) => {\n    const is_invalid_field_error = ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(code);\n    const getIconSize = () => {\n        if (is_invalid_field_error) return '64';\n        else if (code === 'InvalidAccount') return '96';\n        return '115';\n    };\n    return (\n        <div\n            className={classNames('account-wizard--error', {\n                [`account-wizard--error__${className}`]: className,\n            })}\n        >\n            <Icon icon={is_invalid_field_error ? 'IcInvalidError' : 'IcAccountError'} size={getIconSize()} />\n            <Heading code={code} />\n            <Message code={code} message={message} details={error_field} />\n            <ErrorCTA code={code} onConfirm={onConfirm} />\n        </div>\n    );\n};\n\nSignupErrorContent.propTypes = {\n    code: PropTypes.string,\n    error_field: PropTypes.object,\n    message: PropTypes.string,\n    onConfirm: PropTypes.func,\n    className: PropTypes.string,\n};\n\nexport default SignupErrorContent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n * @component\n *\n * @param {EXPERIAN} status - Experian result\n */\nconst IOMHeading = ({ status }) => (\n    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n        {status === EXPERIAN.SUCCESS && <Localize i18n_default_text='Your account is ready' />}\n        {status === EXPERIAN.WARN && <Localize i18n_default_text='Please verify your address' />}\n        {status === EXPERIAN.DANGER && <Localize i18n_default_text='Please verify your identity and address' />}\n        {status === EXPERIAN.PENDING && <Localize i18n_default_text=\"We're processing your personal information\" />}\n    </Text>\n);\n\n/**\n * @component\n * Get the title to use in the dialog\n *\n * @param {EXPERIAN} status\n * @param {string} landing_company_shortcode\n *\n * @return {null|*}\n */\nexport const DialogHeading = ({ status, landing_company_shortcode }) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            return <IOMHeading status={status} />;\n        default:\n            return (\n                <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                    <Localize i18n_default_text='Your account is ready' />\n                </Text>\n            );\n    }\n};\n\nDialogHeading.propTypes = {\n    status: PropTypes.number.isRequired,\n    landing_company_shortcode: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n *\n * @param {String} landing_company_shortcode\n * @param {EXPERIAN} status\n */\nexport const DialogMessage = ({\n    country_standpoint,\n    is_fully_authenticated,\n    landing_company_shortcode,\n    status = EXPERIAN.SUCCESS,\n}) => {\n    let message = '';\n    if (landing_company_shortcode === 'maltainvest') {\n        if (is_fully_authenticated) {\n            message = [\n                <Localize key={0} i18n_default_text='You have added a Deriv Financial account.' />,\n                <Localize key={1} i18n_default_text='Make a deposit now to start trading.' />,\n            ];\n        } else {\n            message = (\n                <Localize i18n_default_text='We need proof of your identity and address before you can start trading.' />\n            );\n        }\n    } else if (landing_company_shortcode === 'malta') {\n        if (\n            (country_standpoint.is_united_kingdom && is_fully_authenticated) ||\n            country_standpoint.is_rest_of_eu ||\n            country_standpoint.is_belgium\n        ) {\n            message = (\n                <Localize\n                    i18n_default_text='You have added a real Options account.<0/>Make a deposit now to start trading.'\n                    components={[<br key={0} />]}\n                />\n            );\n        }\n    } else if (landing_company_shortcode === 'iom') {\n        if (country_standpoint.is_united_kingdom && is_fully_authenticated) {\n            message = (\n                <Localize\n                    i18n_default_text='You have added a real Gaming account.<0/>Make a deposit now to start trading.'\n                    components={[<br key={0} />]}\n                />\n            );\n        }\n    } else {\n        switch (status) {\n            case EXPERIAN.WARN:\n                message = <Localize i18n_default_text='To get trading, please confirm where you live.' />;\n                break;\n            case EXPERIAN.DANGER:\n                message = (\n                    <Localize i18n_default_text='To get trading, please confirm who you are, and where you live.' />\n                );\n                break;\n            case EXPERIAN.PENDING:\n                message = (\n                    <Localize i18n_default_text=\"You'll be able to get trading as soon as verification is complete.\" />\n                );\n                break;\n            default:\n                message = <Localize i18n_default_text='Fund your account to start trading.' />;\n        }\n    }\n\n    return Array.isArray(message) ? (\n        <>\n            {message.map((text, index) => (\n                <Text\n                    key={index}\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                >\n                    {text}\n                </Text>\n            ))}\n        </>\n    ) : (\n        <Text as='p' align='center' className='status-dialog__message-text' color='general' size='xs'>\n            {message}\n        </Text>\n    );\n};\n\nDialogMessage.propTypes = {\n    country_standpoint: PropTypes.object,\n    currency: PropTypes.string,\n    is_fully_authenticated: PropTypes.bool,\n    is_isle_of_man_residence: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    status: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\nconst getDismissButton = ({ status, landing_company_shortcode, closeModal, switchToVirtual }) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            if (status === EXPERIAN.SUCCESS) {\n                return {\n                    label: localize('Maybe later'),\n                    action: closeModal,\n                };\n            } else if (status === EXPERIAN.WARN) {\n                return {\n                    label: localize('Trade on demo'),\n                    action: () => {\n                        closeModal();\n                        switchToVirtual();\n                    },\n                };\n            }\n            // Danger\n            return {\n                label: localize('Maybe later'),\n                action: closeModal,\n            };\n        // case 'svg':\n        default:\n            return {\n                label: localize('Maybe later'),\n                action: closeModal,\n            };\n    }\n};\n\nconst getActionButton = ({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n}) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            if (status === EXPERIAN.DANGER) {\n                return {\n                    label: localize('Submit proofs'),\n                    action: closeModalAndOpenPOI,\n                };\n            } else if (status === EXPERIAN.WARN) {\n                return {\n                    label: localize('Submit proof'),\n                    action: closeModalAndOpenPOA,\n                };\n            } else if (status === EXPERIAN.PENDING) {\n                return {\n                    label: localize('OK'),\n                    action: closeModal,\n                };\n            }\n            return {\n                label: localize('Deposit'),\n                action: closeModalAndOpenCashier,\n            };\n        case 'maltainvest':\n            if (is_fully_authenticated) {\n                return {\n                    label: localize('Deposit'),\n                    action: closeModalAndOpenCashier,\n                };\n            }\n            return {\n                label: localize('Submit proof'),\n                action: closeModalAndOpenPOI,\n            };\n        case 'svg':\n        case 'malta':\n        default:\n            return {\n                label: localize('Deposit'),\n                action: closeModalAndOpenCashier,\n            };\n    }\n};\nconst DialogPrimaryButton = ({\n    status,\n    landing_company_shortcode,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n    is_fully_authenticated,\n}) => {\n    // Check if the button is necessary\n    // Fetch proper action from store based on status + landing_company_shortcode\n    const { label, action } = getActionButton({\n        status,\n        landing_company_shortcode,\n        is_fully_authenticated,\n        closeModal,\n        closeModalAndOpenCashier,\n        closeModalAndOpenPOI,\n        closeModalAndOpenPOA,\n    });\n\n    return <Button primary text={label} onClick={action} />;\n};\nconst DialogDismissButton = ({ status, landing_company_shortcode, closeModal, switchToVirtual, is_bypassed }) => {\n    if (is_bypassed) return null;\n    const { label, action } = getDismissButton({\n        status,\n        landing_company_shortcode,\n        closeModal,\n        switchToVirtual,\n    });\n\n    return <Button secondary text={label} onClick={action} />;\n};\n\nexport const DialogButtons = ({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOA,\n    closeModalAndOpenPOI,\n    switchToVirtual,\n}) => {\n    return (\n        <div className='status-dialog__footer'>\n            <DialogDismissButton\n                closeModal={closeModal}\n                is_bypassed={status === EXPERIAN.PENDING}\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                switchToVirtual={switchToVirtual}\n            />\n            <DialogPrimaryButton\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                closeModal={closeModal}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                is_fully_authenticated={is_fully_authenticated}\n            />\n        </div>\n    );\n};\n\nDialogButtons.propTypes = {\n    status: PropTypes.number,\n    landing_company_shortcode: PropTypes.string,\n    is_fully_authenticated: PropTypes.bool,\n    closeModal: PropTypes.func,\n    closeModalAndOpenCashier: PropTypes.func,\n    closeModalAndOpenPOA: PropTypes.func,\n    closeModalAndOpenPOI: PropTypes.func,\n    switchToVirtual: PropTypes.func,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Div100vhContainer, Icon } from '@deriv/components';\nimport { routes, isDesktop, isMobile } from '@deriv/shared';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport { DialogHeading } from './helpers/dialog-heading.jsx';\nimport { DialogMessage } from './helpers/dialog-message.jsx';\nimport { DialogButtons } from './helpers/dialog-buttons.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MainIcon = ({ currency }) => <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={120} />;\nconst Checkmark = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' size={24} />;\nconst Warning = ({ className }) => <Icon className={className} icon='IcAlertDanger' size={24} />;\nconst Danger = ({ className }) => <Icon className={className} icon='IcCrossCircle' size={24} color='red' />;\nconst CloseIcon = ({ closeModal }) => (\n    <div onClick={closeModal} className='status-dialog__close'>\n        <Icon icon='IcCross' />\n    </div>\n);\n\nconst StatusDialogContainer = observer(({ closeModal, currency, history, icon_size }) => {\n    const { client } = useStore();\n    const { country_standpoint, landing_company_shortcode, is_fully_authenticated, is_age_verified } = client;\n    const is_isle_of_man_residence = client.residence === 'im'; // TODO: [deriv-eu] refactor this once more residence checks are required\n    const is_belgium_residence = client.residence === 'be'; // TODO: [deriv-eu] refactor this once more residence checks are required\n    const switchToVirtual = () => client.switchAccount(client.virtual_account_loginid);\n    const closeModalAndOpenCashier = () => {\n        closeModal();\n        history.push(routes.cashier_deposit);\n    };\n\n    const closeModalAndOpenPOI = () => {\n        closeModal();\n        history.push(routes.proof_of_identity);\n    };\n\n    const closeModalAndOpenPOA = () => {\n        closeModal();\n        history.push(routes.proof_of_address);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n            is_fully_authenticated,\n            is_age_verified,\n            is_isle_of_man_residence,\n            is_belgium_residence,\n        });\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            {isDesktop() && <CloseIcon closeModal={closeModal} />}\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--large': icon_size === 'large',\n                    'status-dialog__header--xlarge': icon_size === 'xlarge',\n                })}\n            >\n                <MainIcon currency={currency} />\n                {getStatus() === EXPERIAN.SUCCESS && <Checkmark className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.WARN && <Warning className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.DANGER && <Danger className='bottom-right-overlay' />}\n            </div>\n            <div\n                className={classNames('status-dialog__body', {\n                    'status-dialog__body--no-grow': isMobile(),\n                })}\n            >\n                <DialogHeading status={getStatus()} landing_company_shortcode={landing_company_shortcode} />\n                <DialogMessage\n                    country_standpoint={country_standpoint}\n                    currency={currency}\n                    is_fully_authenticated={is_fully_authenticated}\n                    landing_company_shortcode={landing_company_shortcode}\n                    status={getStatus()}\n                />\n            </div>\n            <DialogButtons\n                closeModal={closeModal}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                is_fully_authenticated={is_fully_authenticated}\n                landing_company_shortcode={landing_company_shortcode}\n                status={getStatus()}\n                switchToVirtual={switchToVirtual}\n            />\n        </Div100vhContainer>\n    );\n});\n\nStatusDialogContainer.defaultProps = {\n    icon_size: 'large',\n};\n\nStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    currency: PropTypes.string,\n    history: PropTypes.object,\n    icon: PropTypes.object,\n    icon_size: PropTypes.string,\n};\n\nexport default withRouter(StatusDialogContainer);\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { RiskToleranceWarningModal, TestWarningModal } from '@deriv/account';\nimport { Button, DesktopWrapper, MobileDialog, MobileWrapper, Modal, Text } from '@deriv/components';\nimport { ContentFlag, WS, routes } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer,useStore } from '@deriv/stores';\nimport AccountWizard from './account-wizard.jsx';\nimport AddCurrency from './add-currency.jsx';\nimport AddOrManageAccounts from './add-or-manage-accounts.jsx';\nimport ChooseCurrency from './choose-currency.jsx';\nimport FinishedAddCurrency from './finished-add-currency.jsx';\nimport FinishedSetCurrency from './finished-set-currency.jsx';\nimport SetCurrency from './set-currency.jsx';\nimport SignupErrorContent from './signup-error-content.jsx';\nimport StatusDialogContainer from './status-dialog-container.jsx';\nimport { Analytics } from '@deriv/analytics';\n\nimport 'Sass/account-wizard.scss';\nimport 'Sass/real-account-signup.scss';\n\nconst modal_pages_indices = {\n    account_wizard: 0,\n    add_or_manage_account: 1,\n    finished_set_currency: 2,\n    status_dialog: 3,\n    set_currency: 4,\n    signup_error: 5,\n    choose_crypto_currency: 6,\n    add_currency: 7,\n    finished_add_currency: 8,\n    restricted_country_signup_error: 9,\n    invalid_input_error: 10,\n};\nlet active_modal_index_no = 0;\n\nconst WizardHeading = ({ country_standpoint, currency, is_isle_of_man_residence, real_account_signup_target }) => {\n    const maltainvest_signup = real_account_signup_target === 'maltainvest';\n    const iom_signup = real_account_signup_target === 'iom';\n    const deposit_cash_signup = real_account_signup_target === 'deposit_cash';\n\n    if ((!maltainvest_signup && !currency) || active_modal_index_no === modal_pages_indices.set_currency) {\n        return <Localize i18n_default_text='Set a currency for your real account' />;\n    }\n\n    if (deposit_cash_signup) {\n        return <Localize i18n_default_text='Add a Deriv Gaming account' />;\n    }\n\n    if (iom_signup && is_isle_of_man_residence) {\n        return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n\n    switch (real_account_signup_target) {\n        case 'malta':\n            if (\n                country_standpoint.is_united_kingdom ||\n                country_standpoint.is_rest_of_eu ||\n                country_standpoint.is_belgium\n            ) {\n                return <Localize i18n_default_text='Add a real Deriv Options account' />;\n            }\n            return <Localize i18n_default_text='Add a Derived account' />;\n        case 'iom':\n            if (country_standpoint.is_united_kingdom) {\n                return <Localize i18n_default_text='Add a real Deriv Gaming account' />;\n            }\n            return <Localize i18n_default_text='Add a Derived account' />;\n        case 'maltainvest':\n            if (\n                country_standpoint.is_united_kingdom ||\n                country_standpoint.is_france ||\n                country_standpoint.is_other_eu ||\n                country_standpoint.is_rest_of_eu\n            ) {\n                return <Localize i18n_default_text='Setup your account' />;\n            }\n            return <Localize i18n_default_text='Add a Deriv Financial account' />;\n        case 'samoa':\n            return <Localize i18n_default_text='Terms of use' />;\n        default:\n            return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n};\n\nconst RealAccountSignup = observer(({ history, state_index, is_trading_experience_incomplete }) => {\n    const { ui, client, traders_hub, modules } = useStore();\n    const {\n        available_crypto_currencies,\n        country_standpoint,\n        currency,\n        fetchAccountSettings,\n        has_fiat,\n        has_active_real_account: has_real_account,\n        is_from_restricted_country,\n        realAccountSignup,\n        redirectToLegacyPlatform,\n    } = client;\n    const {\n        closeRealAccountSignup,\n        deposit_real_account_signup_target,\n        is_real_acc_signup_on,\n        real_account_signup_target,\n        setIsTradingAssessmentForNewUserEnabled,\n        setIsClosingCreateRealAccountModal,\n        setRealAccountSignupParams: setParams,\n        setShouldShowAppropriatenessWarningModal,\n        setShouldShowRiskWarningModal,\n        should_show_appropriateness_warning_modal,\n        should_show_risk_warning_modal,\n        setShouldShowOneTimeDepositModal,\n        real_account_signup: state_value,\n        is_trading_assessment_for_new_user_enabled,\n    } = ui;\n    const { content_flag,show_eu_related_content,toggleIsTourOpen } = traders_hub;\n    const deposit_target = modules.cashier.general_store.deposit_target;\n    const setIsDeposit = modules.cashier.general_store.setIsDeposit;\n    const should_show_all_available_currencies = modules.cashier.general_store.should_show_all_available_currencies;\n    const is_belgium_residence = client.residence === 'be'; // TODO: [deriv-eu] refactor this once more residence checks are required\n    const is_isle_of_man_residence = client.residence === 'im'; // TODO: [deriv-eu] refactor this once more residence checks are required\n    const [current_action, setCurrentAction] = React.useState(null);\n    const [is_loading, setIsLoading] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const [is_risk_warning_visible, setIsRiskWarningVisible] = React.useState(false);\n    const [real_account_form_data, setRealAccountFormData] = React.useState({});\n    const [risk_warning_title, setRiskWarningTitle] = React.useState('');\n    const [modal_content] = React.useState([\n        {\n            action: 'signup',\n            body: local_props => (\n                <AccountWizard\n                    setIsRiskWarningVisible={setIsRiskWarningVisible}\n                    onFinishSuccess={showStatusDialog}\n                    onOpenDepositModal={closeModalthenOpenDepositModal}\n                    onOpenWelcomeModal={closeModalthenOpenWelcomeModal}\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    onClose={closeModal}\n                    realAccountSignup={realAccountSignup}\n                    setRealAccountFormData={setRealAccountFormData}\n                />\n            ),\n            title: WizardHeading,\n        },\n        {\n            action: 'multi',\n            body: local_props => (\n                <AddOrManageAccounts\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    is_add_crypto={local_props.real_account_signup_target === 'add_crypto'}\n                    is_add_fiat={local_props.real_account_signup_target === 'add_fiat'}\n                    is_add_currency={local_props.real_account_signup_target === 'add_currency'}\n                    deposit_target={local_props.deposit_target}\n                    onClose={closeModal}\n                />\n            ),\n            title: local_props => {\n                if (local_props.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props.has_fiat && local_props.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: local_props => (\n                <FinishedSetCurrency\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onCancel={closeSetCurrencySuccessModal}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n            title: local_props =>\n                local_props.has_fiat && local_props.available_crypto_currencies?.length === 0\n                    ? localize('Manage account')\n                    : localize('Add or manage account'),\n        },\n        {\n            body: local_props => (\n                <StatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SetCurrency\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    onClose={closeModal}\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                />\n            ),\n            title: WizardHeading,\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={() => onErrorConfirm(local_props.state_value.error_code)}\n                />\n            ),\n            title: () => localize('Add a real account'),\n        },\n        {\n            body: () => <ChooseCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: local_props =>\n                local_props.should_show_all_available_currencies\n                    ? localize('Choose an account')\n                    : localize('Choose a cryptocurrency account'),\n        },\n        {\n            body: () => <AddCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: () => localize('Create a new account'),\n        },\n        {\n            body: local_props => (\n                <FinishedAddCurrency\n                    redirectToLegacyPlatform={redirectToLegacyPlatform}\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={closeRealAccountSignup}\n                    className='restricted-country-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={onErrorConfirm}\n                    error_field={local_props.state_value}\n                    className='invalid-input-error'\n                />\n            ),\n        },\n    ]);\n\n    const [assessment_decline, setAssessmentDecline] = React.useState(false);\n\n    const trackEvent = React.useCallback(\n        payload => {\n            if (real_account_signup_target === 'maltainvest') return;\n\n            Analytics.trackEvent('ce_real_account_signup_form', {\n                form_source: document.referrer,\n                form_name: 'real_account_signup_form',\n                landing_company: real_account_signup_target,\n                ...payload,\n            });\n        },\n        [real_account_signup_target]\n    );\n\n    React.useEffect(() => {\n        if (is_real_acc_signup_on) {\n            trackEvent({ action: 'open' });\n        }\n    }, [is_real_acc_signup_on, trackEvent]);\n\n    const getModalHeight = () => {\n        if (is_from_restricted_country) return '304px';\n        else if ([invalid_input_error, status_dialog].includes(getActiveModalIndex())) return 'auto';\n        if (!currency || getActiveModalIndex() === modal_pages_indices.set_currency) return '688px'; // Set currency modal\n        if (has_real_account && currency) {\n            if (show_eu_related_content && getActiveModalIndex() === modal_pages_indices.add_or_manage_account) {\n                // Manage account\n                return '420px'; // Since crypto is disabled for EU clients, lower the height of modal\n            }\n            if (\n                [modal_pages_indices.finished_set_currency, modal_pages_indices.finished_add_currency].includes(\n                    getActiveModalIndex()\n                )\n            ) {\n                return 'auto';\n            }\n        }\n        return '740px'; // Account wizard modal\n    };\n    const getModalWidth = () => {\n        if (is_from_restricted_country || getActiveModalIndex() === modal_pages_indices.invalid_input_error)\n            return '440px';\n        return !has_close_icon ? 'auto' : '955px';\n    };\n\n    const closeModalthenOpenDepositModal = () => {\n        closeRealAccountSignup();\n        setShouldShowOneTimeDepositModal(true);\n    };\n\n    const showStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.status_dialog,\n            currency: curr,\n        });\n    };\n    const closeModalthenOpenWelcomeModal = curr => {\n        closeRealAccountSignup();\n        setParams({\n            currency: curr,\n        });\n    };\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(routes.cashier_deposit);\n    };\n\n    const showSetCurrencySuccess = (previous_currency, current_currency, target) => {\n        setParams({\n            previous_currency,\n            current_currency,\n            active_modal_index: target\n                ? modal_pages_indices.finished_add_currency\n                : modal_pages_indices.finished_set_currency,\n        });\n    };\n\n    const setLoading = is_loading_val => {\n        setIsLoading(is_loading_val);\n    };\n\n    const cacheFormValues = payload => {\n        localStorage.setItem(\n            'real_account_signup_wizard',\n            JSON.stringify(\n                payload.map(item => {\n                    if (typeof item.form_value === 'object') {\n                        return item.form_value;\n                    }\n                    return false;\n                })\n            )\n        );\n    };\n\n    const showErrorModal = (err, payload) => {\n        if (payload) {\n            cacheFormValues(payload);\n        }\n\n        setCurrentAction(modal_content[getActiveModalIndex()]?.action);\n        setError(err);\n\n        trackEvent({\n            action: 'other_error',\n            real_signup_error_message: err,\n        });\n    };\n\n    React.useEffect(() => {\n        setRiskWarningTitle(localize('Risk Tolerance Warning'));\n        return () => setIsTradingAssessmentForNewUserEnabled(is_trading_experience_incomplete);\n    }, []);\n\n    // setCurrentAction callback useEffect to set error details\n    React.useEffect(() => {\n        if (!error) return;\n        setParams({\n            active_modal_index: ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(error.code)\n                ? modal_pages_indices.invalid_input_error\n                : modal_pages_indices.signup_error,\n            error_message: error.message,\n            error_code: error.code,\n            ...(error.code === 'InputValidationFailed' && { error_details: error.details }),\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [error]);\n\n    React.useEffect(() => {\n        if (!is_from_restricted_country) return;\n        setParams({\n            active_modal_index: modal_pages_indices.restricted_country_signup_error,\n            error_message: localize('Adding more real accounts has been restricted for your country.'),\n            error_code: 'InvalidAccount',\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_from_restricted_country, is_real_acc_signup_on]);\n\n    const closeSetCurrencySuccessModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (getActiveModalIndex() !== modal_pages_indices.status_dialog) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n        closeRealAccountSignup();\n    };\n\n    const closeModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            !e ||\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (getActiveModalIndex() !== modal_pages_indices.status_dialog) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n\n        if (modal_content[getActiveModalIndex()].action === 'signup') {\n            setIsClosingCreateRealAccountModal(true);\n            if ([ContentFlag.EU_REAL, ContentFlag.EU_DEMO].includes(content_flag)) {\n                toggleIsTourOpen(true);\n            }\n\n            return;\n        }\n        closeRealAccountSignup();\n        redirectToLegacyPlatform();\n    };\n\n    const onErrorConfirm = err_code => {\n        setParams({\n            active_modal_index:\n                current_action === 'multi' || err_code === 'CurrencyTypeNotAllowed'\n                    ? modal_pages_indices.add_or_manage_account\n                    : modal_pages_indices.account_wizard,\n        });\n    };\n\n    const getIsManageTarget = () => {\n        return real_account_signup_target === 'manage';\n    };\n\n    const getActiveModalIndex = () => {\n        if (real_account_signup_target === 'choose') {\n            active_modal_index_no = modal_pages_indices.choose_crypto_currency;\n            return active_modal_index_no;\n        }\n        if (['add_crypto', 'add_fiat', 'add_currency'].includes(real_account_signup_target)) {\n            active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            return active_modal_index_no;\n        }\n        if (state_value.active_modal_index === -1) {\n            if (has_real_account && currency && getIsManageTarget()) {\n                active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            } else {\n                active_modal_index_no =\n                    real_account_signup_target === 'set_currency'\n                        ? modal_pages_indices.set_currency\n                        : modal_pages_indices.account_wizard;\n            }\n        } else {\n            active_modal_index_no = state_value.active_modal_index;\n        }\n        return active_modal_index_no;\n    };\n\n    // set title and body of the modal\n    const { title: Title, body: ModalContent } = modal_content[getActiveModalIndex()];\n    const {\n        account_wizard,\n        add_or_manage_account,\n        finished_set_currency,\n        status_dialog,\n        set_currency,\n        signup_error,\n        restricted_country_signup_error,\n        invalid_input_error,\n    } = modal_pages_indices;\n\n    const has_close_icon = [account_wizard, add_or_manage_account, set_currency, signup_error].includes(\n        getActiveModalIndex()\n    );\n\n    const handleOnAccept = async () => {\n        setLoading(true);\n        try {\n            const response = await realAccountSignup({ ...real_account_form_data, accept_risk: 1 });\n            WS.authorized.getAccountStatus().then(status => {\n                const { get_account_status } = status;\n                setShouldShowAppropriatenessWarningModal(false);\n                if (\n                    real_account_signup_target === 'maltainvest' &&\n                    !get_account_status?.status?.includes('cashier_locked')\n                ) {\n                    closeModalthenOpenDepositModal();\n                } else {\n                    showStatusDialog(response?.new_account_maltainvest?.currency.toLowerCase());\n                }\n            });\n        } catch (sign_up_error) {\n            // TODO: Handle Error\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleOnDecline = async () => {\n        setLoading(true);\n        setAssessmentDecline(true);\n        try {\n            await realAccountSignup({ ...real_account_form_data, accept_risk: 0 });\n        } catch (sign_up_error) {\n            setRiskWarningTitle(localize('24-hour Cool Down Warning'));\n            if (sign_up_error.code === 'AppropriatenessTestFailed') {\n                setShouldShowAppropriatenessWarningModal(false);\n                setShouldShowRiskWarningModal(true);\n            }\n            // TODO: Handle Error case\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleRiskAcceptance = () => {\n        closeRealAccountSignup();\n        setShouldShowRiskWarningModal(false);\n        setAssessmentDecline(false);\n    };\n\n    if (assessment_decline) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={assessment_decline}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the risk of losing your money. <0/><0/>\n                        As you have declined our previous warning, you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (is_trading_assessment_for_new_user_enabled && should_show_risk_warning_modal) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={should_show_risk_warning_modal}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, kindly note that you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (should_show_appropriateness_warning_modal) {\n        return (\n            <TestWarningModal\n                show_risk_modal={should_show_appropriateness_warning_modal}\n                body_content={\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize\n                            i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize i18n_default_text='By clicking ‘Accept’ and proceeding with the account opening, you should note that you may be exposing yourself to risks. These risks, which may be significant, include the risk of losing the entire sum invested, and you may not have the knowledge and experience to properly assess or mitigate them.' />\n                    </Text>\n                }\n                footer_content={\n                    <React.Fragment>\n                        <Button type='button' large text={localize('Decline')} secondary onClick={handleOnDecline} />\n                        <Button\n                            type='button'\n                            large\n                            text={localize('Accept')}\n                            primary\n                            onClick={handleOnAccept}\n                            is_loading={is_loading}\n                        />\n                    </React.Fragment>\n                }\n            />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {is_real_acc_signup_on && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <Modal\n                            id='real_account_signup_modal'\n                            className={classNames('real-account-signup-modal', {\n                                'dc-modal__container_real-account-signup-modal--error': [\n                                    signup_error,\n                                    restricted_country_signup_error,\n                                    invalid_input_error,\n                                ].includes(getActiveModalIndex()),\n                                'dc-modal__container_real-account-signup-modal--success': [\n                                    finished_set_currency,\n                                    status_dialog,\n                                ].includes(getActiveModalIndex()),\n                            })}\n                            is_open={is_real_acc_signup_on}\n                            is_risk_warning_visible={is_risk_warning_visible}\n                            has_close_icon={real_account_signup_target !== 'samoa'}\n                            is_title_centered={real_account_signup_target === 'samoa'}\n                            renderTitle={() => {\n                                if (Title && ![finished_set_currency, status_dialog].includes(getActiveModalIndex())) {\n                                    return (\n                                        <Title\n                                            available_crypto_currencies={available_crypto_currencies}\n                                            country_standpoint={country_standpoint}\n                                            currency={currency}\n                                            has_fiat={has_fiat}\n                                            is_belgium_residence={is_belgium_residence}\n                                            is_eu={show_eu_related_content}\n                                            is_isle_of_man_residence={is_isle_of_man_residence}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                            toggleModal={closeModal}\n                            height={getModalHeight()}\n                            width={getModalWidth()}\n                            elements_to_ignore={[document.querySelector('.modal-root')]}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </Modal>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <MobileDialog\n                            portal_element_id='modal_root'\n                            wrapper_classname='account-signup-mobile-dialog'\n                            visible={is_real_acc_signup_on}\n                            onClose={closeModal}\n                            renderTitle={() => {\n                                if (Title) {\n                                    return (\n                                        <Title\n                                            country_standpoint={country_standpoint}\n                                            currency={currency}\n                                            is_belgium_residence={is_belgium_residence}\n                                            is_isle_of_man_residence={is_isle_of_man_residence}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </MobileDialog>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(RealAccountSignup);\n","import RealAccountSignup from './real-account-signup.jsx';\n\nexport default RealAccountSignup;\n","import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/set-currency-modal.scss';\n\nconst SetAccountCurrencyModal = observer(() => {\n    const { client, ui } = useStore();\n    const { is_virtual } = client;\n    const {\n        is_set_currency_modal_visible: is_visible,\n        openRealAccountSignup: setCurrency,\n        toggleSetCurrencyModal: toggleModal,\n    } = ui;\n    const has_set_currency = useHasSetCurrency();\n\n    return (\n        <Modal\n            id='dt_set_account_currency_modal'\n            has_close_icon={false}\n            is_open={is_visible}\n            small\n            toggleModal={toggleModal}\n            title={\n                !has_set_currency\n                    ? localize('No currency assigned to your account')\n                    : localize('You have an account that needs action')\n            }\n        >\n            <Modal.Body>\n                {localize('Please set a currency for your existing real account before creating another account.')}\n            </Modal.Body>\n            <Modal.Footer>\n                {!is_virtual ? (\n                    <>\n                        <Button has_effect text={localize('Cancel')} onClick={toggleModal} secondary />\n                        <Button\n                            has_effect\n                            text={localize('Set currency')}\n                            onClick={() => {\n                                toggleModal();\n                                // timeout is to ensure no jumpy animation when modals are overlapping enter/exit transitions\n                                setTimeout(() => {\n                                    setCurrency('set_currency');\n                                }, 250);\n                            }}\n                            primary\n                        />\n                    </>\n                ) : (\n                    <Button has_effect text={localize('OK')} onClick={toggleModal} primary />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default SetAccountCurrencyModal;\n","import SetAccountCurrencyModal from './set-currency-modal.jsx';\n\nexport default SetAccountCurrencyModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { isMobile, routes, getStaticUrl } from '@deriv/shared';\nimport { isExternalLink } from '@deriv/utils';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\n\ntype TMenuLink = {\n    data_testid: string;\n    icon: string;\n    is_active: boolean;\n    is_disabled: boolean;\n    is_hidden: boolean;\n    link_to: string;\n    onClickLink: () => void;\n    suffix_icon: string;\n    text: string;\n};\n\nconst MenuLink = observer(\n    ({\n        data_testid,\n        icon = '',\n        is_active,\n        is_disabled,\n        is_hidden,\n        link_to = '',\n        onClickLink,\n        suffix_icon = '',\n        text,\n    }: Partial<TMenuLink>) => {\n        const { ui, client } = useStore();\n        const { has_any_real_account, is_virtual } = client;\n        const { setMobileLanguageMenuOpen, toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n        const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n        const is_trade_text = text === localize('Trade');\n        const deriv_static_url = getStaticUrl(link_to);\n        const traders_hub_path = window.location.pathname === routes.traders_hub;\n        const is_languages_link_on_mobile = isMobile() && link_to === routes.languages;\n        const is_external_link = deriv_static_url && isExternalLink(link_to);\n        const is_cashier_link = [\n            routes.cashier_deposit,\n            routes.cashier_withdrawal,\n            routes.cashier_acc_transfer,\n        ].includes(link_to);\n\n        if (is_hidden) return null;\n\n        if (is_languages_link_on_mobile) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={() => setMobileLanguageMenuOpen(true)}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n        if (real_account_needed_for_cashier && is_cashier_link && traders_hub_path) {\n            const handleClickCashier = () => {\n                onClickLink?.();\n                toggleNeedRealAccountForCashierModal();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (is_cashier_link && is_virtual && !has_any_real_account) {\n            const toggle_modal_routes = window.location.pathname === routes.root || traders_hub_path;\n\n            const handleClickCashier = () => {\n                if (toggle_modal_routes) {\n                    toggleReadyToDepositModal();\n                }\n                onClickLink?.();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (!link_to) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        } else if (is_external_link) {\n            return (\n                <a\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                        'header__menu-mobile-link--active': is_active,\n                    })}\n                    href={link_to}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <Text\n                        className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                        as='h3'\n                        size='xs'\n                        weight={window.location.pathname === '/' && is_trade_text ? 'bold' : undefined}\n                    >\n                        {text}\n                    </Text>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </a>\n            );\n        }\n\n        return (\n            <BinaryLink\n                to={link_to}\n                className={classNames('header__menu-mobile-link', {\n                    'header__menu-mobile-link--disabled': is_disabled,\n                    'header__menu-mobile-link--active': is_active,\n                })}\n                active_class='header__menu-mobile-link--active'\n                onClick={onClickLink}\n                data-testid={data_testid}\n            >\n                <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                <Text\n                    className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                    as='h3'\n                    size='xs'\n                    weight={window.location.pathname === '/' && is_trade_text ? 'bold' : undefined}\n                >\n                    {text}\n                </Text>\n                {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n            </BinaryLink>\n        );\n    }\n);\n\nexport default MenuLink;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\nconst MenuTitle = observer(() => {\n    const { common, ui } = useStore();\n    const { current_language } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n    return (\n        <React.Fragment>\n            <div>{localize('Menu')}</div>\n            <div\n                className='settings-language__language-button_wrapper'\n                onClick={() => {\n                    if (!is_mobile_language_menu_open) {\n                        setMobileLanguageMenuOpen(true);\n                    }\n                }}\n            >\n                {!is_mobile_language_menu_open && (\n                    <React.Fragment>\n                        <Icon\n                            icon={`IcFlag${current_language.replace('_', '-')}`}\n                            data_testid='dt_icon'\n                            className='ic-settings-language__icon'\n                            size={22}\n                        />\n                        <Text weight='bold' size='xxs'>\n                            <Localize i18n_default_text={current_language} />\n                        </Text>\n                    </React.Fragment>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default MenuTitle;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { MobileDrawer } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { getAllowedLanguages, localize } from '@deriv/translations';\nimport { LanguageLink } from 'App/Components/Routes';\n\ntype TMobileLanguageMenu = {\n    expandSubMenu: (prop: boolean) => void;\n    toggleDrawer: () => void;\n};\n\nconst MobileLanguageMenu = observer(({ expandSubMenu, toggleDrawer }: TMobileLanguageMenu) => {\n    const { common, ui } = useStore();\n    const { is_language_changing } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n    return (\n        <MobileDrawer.SubMenu\n            is_expanded={is_mobile_language_menu_open}\n            has_subheader\n            submenu_title={localize('Language')}\n            onToggle={is_expanded => {\n                expandSubMenu(is_expanded);\n                setMobileLanguageMenuOpen(false);\n            }}\n            submenu_toggle_class='dc-mobile-drawer__submenu-toggle--hidden'\n        >\n            <div\n                className={classNames('settings-language__language-container', {\n                    'settings-language__language-container--disabled': is_language_changing,\n                })}\n            >\n                {Object.keys(getAllowedLanguages()).map(lang => (\n                    <LanguageLink\n                        key={lang}\n                        icon_classname='settings-language__language-flag'\n                        is_clickable\n                        lang={lang}\n                        toggleModal={() => {\n                            toggleDrawer();\n                            setMobileLanguageMenuOpen(false);\n                        }}\n                    />\n                ))}\n            </div>\n        </MobileDrawer.SubMenu>\n    );\n});\n\nexport default MobileLanguageMenu;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Div100vhContainer, Icon, MobileDrawer, ToggleSwitch } from '@deriv/components';\nimport {\n    useOnrampVisible,\n    useAccountTransferVisible,\n    useIsP2PEnabled,\n    usePaymentAgentTransferVisible,\n    useFeatureFlags,\n} from '@deriv/hooks';\nimport { routes, PlatformContext, getStaticUrl, whatsapp_url } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport NetworkStatus from 'App/Components/Layout/Footer';\nimport ServerTime from 'App/Containers/server-time.jsx';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport useLiveChat from 'App/Components/Elements/LiveChat/use-livechat.ts';\nimport PlatformSwitcher from './platform-switcher';\nimport MenuLink from './menu-link';\nimport { MobileLanguageMenu, MenuTitle } from './Components/ToggleMenu';\n\nconst ToggleMenuDrawer = observer(({ platform_config }) => {\n    const { common, ui, client, traders_hub, modules } = useStore();\n    const { app_routing_history, current_language } = common;\n    const {\n        disableApp,\n        enableApp,\n        is_mobile_language_menu_open,\n        is_dark_mode_on: is_dark_mode,\n        setDarkMode: toggleTheme,\n        setMobileLanguageMenuOpen,\n    } = ui;\n    const {\n        account_status,\n        is_logged_in,\n        is_logging_in,\n        is_virtual,\n        loginid,\n        logout: logoutClient,\n        should_allow_authentication,\n        should_allow_poinc_authentication,\n        landing_company_shortcode: active_account_landing_company,\n        is_landing_company_loaded,\n        is_pending_proof_of_ownership,\n        is_eu,\n    } = client;\n    const { cashier } = modules;\n    const { payment_agent } = cashier;\n    const { is_payment_agent_visible } = payment_agent;\n    const { show_eu_related_content, setTogglePlatformType } = traders_hub;\n    const is_account_transfer_visible = useAccountTransferVisible();\n    const is_onramp_visible = useOnrampVisible();\n    const { data: is_payment_agent_transfer_visible } = usePaymentAgentTransferVisible();\n    const { data: is_p2p_enabled } = useIsP2PEnabled();\n\n    const liveChat = useLiveChat(false, loginid);\n    const [is_open, setIsOpen] = React.useState(false);\n    const [transitionExit, setTransitionExit] = React.useState(false);\n    const [primary_routes_config, setPrimaryRoutesConfig] = React.useState([]);\n    const [is_submenu_expanded, expandSubMenu] = React.useState(false);\n\n    const { is_appstore } = React.useContext(PlatformContext);\n    const timeout = React.useRef();\n    const history = useHistory();\n    const { is_next_wallet_enabled } = useFeatureFlags();\n\n    React.useEffect(() => {\n        const processRoutes = () => {\n            const routes_config = getRoutesConfig({ is_appstore });\n            let primary_routes = [];\n\n            const location = window.location.pathname;\n\n            if (is_appstore) {\n                primary_routes = [\n                    routes.my_apps,\n                    routes.explore,\n                    routes.wallets,\n                    routes.platforms,\n                    routes.trade_types,\n                    routes.markets,\n                ];\n            } else if (location === routes.traders_hub || is_trading_hub_category) {\n                primary_routes = [routes.account, routes.cashier];\n            } else if (location === routes.wallets || is_next_wallet_enabled) {\n                primary_routes = [routes.reports, routes.account];\n            } else {\n                primary_routes = [routes.reports, routes.account, routes.cashier];\n            }\n            setPrimaryRoutesConfig(getFilteredRoutesConfig(routes_config, primary_routes));\n        };\n\n        if (account_status || should_allow_authentication) {\n            processRoutes();\n        }\n\n        return () => clearTimeout(timeout.current);\n    }, [is_appstore, account_status, should_allow_authentication, is_trading_hub_category, is_next_wallet_enabled]);\n\n    const toggleDrawer = React.useCallback(() => {\n        if (is_mobile_language_menu_open) setMobileLanguageMenuOpen(false);\n        if (!is_open) setIsOpen(!is_open);\n        else {\n            setTransitionExit(true);\n            timeout.current = setTimeout(() => {\n                setIsOpen(false);\n                setTransitionExit(false);\n            }, 400);\n        }\n        expandSubMenu(false);\n    }, [expandSubMenu, is_open, is_mobile_language_menu_open, setMobileLanguageMenuOpen]);\n\n    const getFilteredRoutesConfig = (all_routes_config, routes_to_filter) => {\n        const subroutes_config = all_routes_config.flatMap(i => i.routes || []);\n\n        return routes_to_filter\n            .map(path => all_routes_config.find(r => r.path === path) || subroutes_config.find(r => r.path === path))\n            .filter(route => route);\n    };\n\n    const getRoutesWithSubMenu = (route_config, idx) => {\n        const has_access = route_config.is_authenticated ? is_logged_in : true;\n        if (!has_access) return null;\n\n        if (!route_config.routes) {\n            return (\n                <MobileDrawer.Item key={idx}>\n                    <MenuLink\n                        link_to={route_config.path}\n                        icon={route_config.icon_component}\n                        text={route_config.getTitle()}\n                        onClickLink={toggleDrawer}\n                    />\n                </MobileDrawer.Item>\n            );\n        }\n\n        const has_subroutes = route_config.routes.some(route => route.subroutes);\n\n        const disableRoute = route_path => {\n            if (/financial-assessment/.test(route_path)) {\n                return is_virtual;\n            } else if (/trading-assessment/.test(route_path)) {\n                return is_virtual || active_account_landing_company !== 'maltainvest';\n            } else if (/proof-of-address/.test(route_path) || /proof-of-identity/.test(route_path)) {\n                return !should_allow_authentication;\n            } else if (/proof-of-income/.test(route_path)) {\n                return !should_allow_poinc_authentication;\n            } else if (/proof-of-ownership/.test(route_path)) {\n                return is_virtual || !is_pending_proof_of_ownership;\n            }\n            return false;\n        };\n        return (\n            <MobileDrawer.SubMenu\n                key={idx}\n                has_subheader\n                submenu_icon={route_config.icon_component}\n                submenu_title={route_config.getTitle()}\n                submenu_suffix_icon='IcChevronRight'\n                onToggle={expandSubMenu}\n                route_config_path={route_config.path}\n            >\n                {!has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        if (\n                            !route.is_invisible &&\n                            (route.path !== routes.cashier_pa || is_payment_agent_visible) &&\n                            (route.path !== routes.cashier_pa_transfer || is_payment_agent_transfer_visible) &&\n                            (route.path !== routes.cashier_p2p || is_p2p_enabled) &&\n                            (route.path !== routes.cashier_onramp || is_onramp_visible) &&\n                            (route.path !== routes.cashier_acc_transfer || is_account_transfer_visible)\n                        ) {\n                            return (\n                                <MobileDrawer.Item key={index}>\n                                    <MenuLink\n                                        link_to={route.path}\n                                        icon={route.icon_component}\n                                        text={route.getTitle()}\n                                        onClickLink={toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                            );\n                        }\n                        return undefined;\n                    })}\n                {has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        return route.subroutes ? (\n                            <MobileDrawer.SubMenuSection\n                                key={index}\n                                section_icon={route.icon}\n                                section_title={route.getTitle()}\n                            >\n                                {route.subroutes.map((subroute, subindex) => (\n                                    <MenuLink\n                                        key={subindex}\n                                        is_disabled={disableRoute(subroute.path) || subroute.is_disabled}\n                                        link_to={subroute.path}\n                                        text={subroute.getTitle()}\n                                        onClickLink={toggleDrawer}\n                                    />\n                                ))}\n                            </MobileDrawer.SubMenuSection>\n                        ) : (\n                            <MobileDrawer.Item key={index}>\n                                <MenuLink\n                                    link_to={route.path}\n                                    icon={route.icon_component}\n                                    text={route.getTitle()}\n                                    onClickLink={toggleDrawer}\n                                />\n                            </MobileDrawer.Item>\n                        );\n                    })}\n            </MobileDrawer.SubMenu>\n        );\n    };\n\n    const HelpCentreRoute = has_border_bottom => {\n        return (\n            <MobileDrawer.Item className={classNames({ 'header__menu-mobile-theme': has_border_bottom })}>\n                <MenuLink\n                    link_to={getStaticUrl('/help-centre')}\n                    icon='IcHelpCentre'\n                    text={localize('Help centre')}\n                    onClickLink={toggleDrawer}\n                />\n            </MobileDrawer.Item>\n        );\n    };\n\n    const { pathname: route } = useLocation();\n\n    const is_trading_hub_category =\n        route.startsWith(routes.traders_hub) || route.startsWith(routes.cashier) || route.startsWith(routes.account);\n\n    return (\n        <React.Fragment>\n            <a id='dt_mobile_drawer_toggle' onClick={toggleDrawer} className='header__mobile-drawer-toggle'>\n                <Icon\n                    icon={is_appstore && !is_logged_in ? 'IcHamburgerWhite' : 'IcHamburger'}\n                    width='16px'\n                    height='16px'\n                    className='header__mobile-drawer-icon'\n                />\n            </a>\n            <MobileDrawer\n                alignment={is_appstore ? 'right' : 'left'}\n                icon_class='header__menu-toggle'\n                is_open={is_open}\n                transitionExit={transitionExit}\n                toggle={toggleDrawer}\n                id='dt_mobile_drawer'\n                enableApp={enableApp}\n                disableApp={disableApp}\n                title={<MenuTitle />}\n                height='100vh'\n                width='295px'\n                className='pre-appstore'\n            >\n                <Div100vhContainer height_offset='40px'>\n                    <div className='header__menu-mobile-body-wrapper'>\n                        {is_appstore && (\n                            <MobileDrawer.Body>\n                                {primary_routes_config.map((route_config, idx) =>\n                                    getRoutesWithSubMenu(route_config, idx)\n                                )}\n                            </MobileDrawer.Body>\n                        )}\n                        <React.Fragment>\n                            {!is_trading_hub_category && (\n                                <MobileDrawer.SubHeader\n                                    className={classNames({\n                                        'dc-mobile-drawer__subheader--hidden': is_submenu_expanded,\n                                    })}\n                                >\n                                    <PlatformSwitcher\n                                        app_routing_history={app_routing_history}\n                                        is_mobile\n                                        is_landing_company_loaded={is_landing_company_loaded}\n                                        is_logged_in={is_logged_in}\n                                        is_logging_in={is_logging_in}\n                                        platform_config={platform_config}\n                                        toggleDrawer={toggleDrawer}\n                                        current_language={current_language}\n                                        setTogglePlatformType={setTogglePlatformType}\n                                    />\n                                </MobileDrawer.SubHeader>\n                            )}\n                            <MobileDrawer.Body\n                                className={classNames({\n                                    'header__menu-mobile-traders-hub': is_trading_hub_category,\n                                })}\n                            >\n                                <div className='header__menu-mobile-platform-switcher' id='mobile_platform_switcher' />\n                                {is_logged_in && (\n                                    <MobileDrawer.Item>\n                                        <MenuLink\n                                            link_to={is_next_wallet_enabled ? routes.wallets : routes.traders_hub}\n                                            icon={is_dark_mode ? 'IcAppstoreHomeDark' : 'IcAppstoreTradersHubHome'}\n                                            text={localize(\"Trader's Hub\")}\n                                            onClickLink={toggleDrawer}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {!is_trading_hub_category && (\n                                    <MobileDrawer.Item>\n                                        <MenuLink\n                                            link_to={routes.trade}\n                                            icon='IcTrade'\n                                            text={localize('Trade')}\n                                            onClickLink={toggleDrawer}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {primary_routes_config.map((route_config, idx) =>\n                                    getRoutesWithSubMenu(route_config, idx)\n                                )}\n                                <MobileDrawer.Item\n                                    className='header__menu-mobile-theme'\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        toggleTheme(!is_dark_mode);\n                                    }}\n                                >\n                                    <div className={classNames('header__menu-mobile-link')}>\n                                        <Icon className='header__menu-mobile-link-icon' icon={'IcTheme'} />\n                                        <span className='header__menu-mobile-link-text'>{localize('Dark theme')}</span>\n                                        <ToggleSwitch\n                                            id='dt_mobile_drawer_theme_toggler'\n                                            handleToggle={() => toggleTheme(!is_dark_mode)}\n                                            is_enabled={is_dark_mode}\n                                        />\n                                    </div>\n                                </MobileDrawer.Item>\n\n                                {HelpCentreRoute()}\n                                {is_logged_in && (\n                                    <React.Fragment>\n                                        <MobileDrawer.Item>\n                                            <MenuLink\n                                                link_to={routes.account_limits}\n                                                icon='IcAccountLimits'\n                                                text={localize('Account Limits')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                        <MobileDrawer.Item>\n                                            <MenuLink\n                                                link_to={getStaticUrl('/responsible')}\n                                                icon='IcVerification'\n                                                text={localize('Responsible trading')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                        {is_eu && show_eu_related_content && !is_virtual && (\n                                            <MobileDrawer.Item>\n                                                <MenuLink\n                                                    link_to={getStaticUrl('/regulatory')}\n                                                    icon='IcRegulatoryInformation'\n                                                    text={localize('Regulatory information')}\n                                                    onClickLink={toggleDrawer}\n                                                />\n                                            </MobileDrawer.Item>\n                                        )}\n                                        <MobileDrawer.Item className='header__menu-mobile-theme--trader-hub'>\n                                            <MenuLink\n                                                link_to={getStaticUrl('/')}\n                                                icon='IcDerivOutline'\n                                                text={localize('Go to Deriv.com')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                    </React.Fragment>\n                                )}\n                                {liveChat.isReady && (\n                                    <MobileDrawer.Item className='header__menu-mobile-whatsapp'>\n                                        <Icon icon='IcWhatsApp' className='drawer-icon' />\n                                        <a\n                                            className='header__menu-mobile-whatsapp-link'\n                                            href={whatsapp_url}\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            onClick={toggleDrawer}\n                                        >\n                                            {localize('WhatsApp')}\n                                        </a>\n                                    </MobileDrawer.Item>\n                                )}\n                                <MobileDrawer.Item className='header__menu-mobile-livechat'>\n                                    <LiveChat />\n                                </MobileDrawer.Item>\n                                {is_logged_in && (\n                                    <MobileDrawer.Item\n                                        onClick={() => {\n                                            toggleDrawer();\n                                            history.push(routes.index);\n                                            logoutClient().then(() => {\n                                                window.location.href = getStaticUrl('/');\n                                            });\n                                        }}\n                                        className='dc-mobile-drawer__item'\n                                    >\n                                        <MenuLink icon='IcLogout' text={localize('Log out')} />\n                                    </MobileDrawer.Item>\n                                )}\n                            </MobileDrawer.Body>\n                            <MobileDrawer.Footer className={is_logged_in ? 'dc-mobile-drawer__footer--servertime' : ''}>\n                                <ServerTime is_mobile />\n                                <NetworkStatus is_mobile />\n                            </MobileDrawer.Footer>\n                            {is_mobile_language_menu_open && (\n                                <MobileLanguageMenu expandSubMenu={expandSubMenu} toggleDrawer={toggleDrawer} />\n                            )}\n                        </React.Fragment>\n                    </div>\n                </Div100vhContainer>\n            </MobileDrawer>\n        </React.Fragment>\n    );\n});\n\nToggleMenuDrawer.displayName = 'ToggleMenuDrawer';\n\nexport default ToggleMenuDrawer;\n","import { getPlatformSettings, routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TPlatformConfig = {\n    description: () => string;\n    href?: string;\n    icon: string;\n    link_to?: string;\n    name: string;\n    title: () => string;\n};\n\nconst platform_config: TPlatformConfig[] = [\n    {\n        icon: getPlatformSettings('trader').icon,\n        title: () => getPlatformSettings('trader').name,\n        name: getPlatformSettings('trader').name,\n        description: () => localize('A whole new trading experience on a powerful yet easy to use platform.'),\n        link_to: routes.trade,\n    },\n    {\n        icon: getPlatformSettings('dbot').icon,\n        title: () => getPlatformSettings('dbot').name,\n        name: getPlatformSettings('dbot').name,\n        description: () => localize('Automated trading at your fingertips. No coding needed.'),\n        link_to: routes.bot,\n    },\n    {\n        icon: getPlatformSettings('smarttrader').icon,\n        title: () => getPlatformSettings('smarttrader').name,\n        name: getPlatformSettings('smarttrader').name,\n        description: () => localize('Trade the world’s markets with our popular user-friendly platform.'),\n        href: routes.smarttrader,\n    },\n    {\n        icon: getPlatformSettings('bbot').icon,\n        title: () => getPlatformSettings('bbot').name,\n        name: getPlatformSettings('bbot').name,\n        description: () =>\n            localize(\n                'Our classic “drag-and-drop” tool for creating trading bots, featuring pop-up trading charts, for advanced users.'\n            ),\n        href: routes.binarybot,\n    },\n];\n\nexport default platform_config;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { AccountActions } from 'App/Components/Layout/Header';\n\ntype THeaderAccountActions = {\n    onClickDeposit: () => void;\n};\n\nconst HeaderAccountActions = observer(({ onClickDeposit }: THeaderAccountActions) => {\n    const { client, ui, notifications } = useStore();\n    const { account_type, balance, currency, country_standpoint, is_eu, is_logged_in, is_virtual } = client;\n    const {\n        account_switcher_disabled_message,\n        disableApp,\n        enableApp,\n        is_account_switcher_disabled,\n        is_accounts_switcher_on,\n        openRealAccountSignup,\n        toggleAccountsDialog,\n    } = ui;\n    const { is_notifications_visible, notifications: notifications_array, toggleNotificationsModal } = notifications;\n\n    return (\n        <div id='dt_core_header_acc-info-container' className='acc-info__container'>\n            <AccountActions\n                acc_switcher_disabled_message={account_switcher_disabled_message}\n                account_type={account_type}\n                balance={balance}\n                currency={currency}\n                country_standpoint={country_standpoint}\n                disableApp={disableApp}\n                enableApp={enableApp}\n                is_acc_switcher_on={is_accounts_switcher_on}\n                is_acc_switcher_disabled={is_account_switcher_disabled}\n                is_eu={is_eu}\n                is_notifications_visible={is_notifications_visible}\n                is_logged_in={is_logged_in}\n                is_virtual={is_virtual}\n                onClickDeposit={onClickDeposit}\n                notifications_count={notifications_array.length}\n                toggleAccountsDialog={toggleAccountsDialog}\n                toggleNotifications={toggleNotificationsModal}\n                openRealAccountSignup={openRealAccountSignup}\n            />\n        </div>\n    );\n});\n\nexport default HeaderAccountActions;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getDecimalPlaces, platforms, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport { AccountsInfoLoader } from 'App/Components/Layout/Header/Components/Preloader';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport platform_config from 'App/Constants/platform-config';\nimport { useHistory } from 'react-router-dom';\nimport HeaderAccountActions from './header-account-actions';\n\nconst DefaultHeader = observer(() => {\n    const { client, common, notifications, traders_hub, ui } = useStore();\n    const {\n        currency,\n        is_bot_allowed,\n        is_dxtrade_allowed,\n        is_logged_in,\n        is_logging_in,\n        is_mt5_allowed,\n        is_switching,\n        is_landing_company_loaded,\n    } = client;\n    const { app_routing_history, current_language, platform } = common;\n    const { addNotificationMessage, client_notifications, removeNotificationMessage } = notifications;\n    const { setTogglePlatformType } = traders_hub;\n    const {\n        header_extension,\n        is_desktop,\n        is_mobile,\n        is_app_disabled,\n        is_route_modal_on,\n        is_trading_assessment_for_existing_user_enabled,\n        is_real_acc_signup_on,\n    } = ui;\n\n    const history = useHistory();\n\n    const addUpdateNotification = () => addNotificationMessage(client_notifications?.new_version_available);\n    const removeUpdateNotification = React.useCallback(\n        () => removeNotificationMessage({ key: 'new_version_available' }),\n        [removeNotificationMessage]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('IgnorePWAUpdate', removeUpdateNotification);\n        return () => document.removeEventListener('IgnorePWAUpdate', removeUpdateNotification);\n    }, [removeUpdateNotification]);\n\n    const onClickDeposit = () => history.push(routes.cashier_deposit);\n\n    const filterPlatformsForClients = payload =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            if (config.link_to === routes.dxtrade) {\n                return is_dxtrade_allowed;\n            }\n            if (\n                config.link_to === routes.bot ||\n                config.href === routes.binarybot ||\n                config.href === routes.smarttrader\n            ) {\n                return is_bot_allowed;\n            }\n            return true;\n        });\n\n    return (\n        <header\n            className={classNames('header', {\n                'header--is-disabled': is_app_disabled || is_route_modal_on,\n                'header--is-hidden': platforms[platform],\n            })}\n        >\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {is_desktop && (\n                        <PlatformSwitcher\n                            app_routing_history={app_routing_history}\n                            is_landing_company_loaded={is_landing_company_loaded}\n                            is_logged_in={is_logged_in}\n                            is_logging_in={is_logging_in}\n                            platform_config={filterPlatformsForClients(platform_config)}\n                            setTogglePlatformType={setTogglePlatformType}\n                            current_language={current_language}\n                        />\n                    )}\n                    {is_mobile && (\n                        <React.Fragment>\n                            <ToggleMenuDrawer platform_config={filterPlatformsForClients(platform_config)} />\n                            {header_extension && is_logged_in && (\n                                <div className='header__menu-left-extensions'>{header_extension}</div>\n                            )}\n                        </React.Fragment>\n                    )}\n                    <MenuLinks />\n                </div>\n                <div\n                    className={classNames('header__menu-right', {\n                        'header__menu-right--hidden': is_mobile && is_logging_in,\n                    })}\n                >\n                    {(is_logging_in || is_switching) && (\n                        <div\n                            id='dt_core_header_acc-info-preloader'\n                            className={classNames('acc-info__preloader', {\n                                'acc-info__preloader--no-currency': !currency,\n                                'acc-info__preloader--is-crypto': getDecimalPlaces(currency) > 2,\n                            })}\n                        >\n                            <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={is_mobile} speed={3} />\n                        </div>\n                    )}\n                    <HeaderAccountActions onClickDeposit={onClickDeposit} />\n                </div>\n            </div>\n            {/*\n                Prevent the modals that are part of Real Account signup to get triggered when the corresponding store value changes by\n                removing the parent element from DOM\n            */}\n            {!is_trading_assessment_for_existing_user_enabled && is_real_acc_signup_on && <RealAccountSignup />}\n            <SetAccountCurrencyModal />\n            <NewVersionNotification onUpdate={addUpdateNotification} />\n        </header>\n    );\n});\n\nexport default DefaultHeader;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useFeatureFlags } from '@deriv/hooks';\n\nconst TradersHubHomeButton = observer(() => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const history = useHistory();\n    const location = useLocation();\n    const { pathname } = location;\n    const { is_next_wallet_enabled, is_next_tradershub_enabled } = useFeatureFlags();\n\n    const redirect_routes = () => {\n        if (is_next_wallet_enabled) {\n            return routes.wallets;\n        } else if (is_next_tradershub_enabled) {\n            return routes.traders_hub_v2;\n        }\n\n        return routes.traders_hub;\n    };\n\n    return (\n        <div\n            data-testid='dt_traders_hub_home_button'\n            className={classNames('traders-hub-header__tradershub', {\n                'traders-hub-header__tradershub--active':\n                    pathname === routes.traders_hub || pathname === routes.wallets,\n            })}\n            onClick={() => history.push(redirect_routes())}\n        >\n            <div className='traders-hub-header__tradershub--home-logo'>\n                <Icon\n                    icon={is_dark_mode_on ? 'IcAppstoreHomeDark' : 'IcAppstoreTradersHubHome'}\n                    size={is_dark_mode_on ? 15 : 17}\n                />\n            </div>\n            <Text className='traders-hub-header__tradershub--text'>\n                <Localize i18n_default_text=\"Trader's Hub\" />\n            </Text>\n        </div>\n    );\n});\n\nexport default TradersHubHomeButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { routes, getDecimalPlaces, platforms } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport platform_config from 'App/Constants/platform-config';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport { AccountsInfoLoader } from 'App/Components/Layout/Header/Components/Preloader';\nimport TradersHubHomeButton from './traders-hub-home-button';\nimport HeaderAccountActions from './header-account-actions';\n\nconst DTraderHeader = observer(() => {\n    const { client, common, ui, notifications, traders_hub } = useStore();\n    const {\n        currency,\n        has_any_real_account,\n        is_bot_allowed,\n        is_dxtrade_allowed,\n        is_logged_in,\n        is_logging_in,\n        is_mt5_allowed,\n        is_virtual,\n        is_switching,\n    } = client;\n    const { app_routing_history, platform, current_language } = common;\n    const {\n        header_extension,\n        is_app_disabled,\n        is_desktop,\n        is_mobile,\n        is_route_modal_on,\n        toggleReadyToDepositModal,\n        is_real_acc_signup_on,\n    } = ui;\n    const { addNotificationMessage, client_notifications, removeNotificationMessage } = notifications;\n    const { setTogglePlatformType } = traders_hub;\n\n    const history = useHistory();\n\n    const addUpdateNotification = () => addNotificationMessage(client_notifications?.new_version_available);\n    const removeUpdateNotification = React.useCallback(\n        () => removeNotificationMessage({ key: 'new_version_available' }),\n        [removeNotificationMessage]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('IgnorePWAUpdate', removeUpdateNotification);\n        return () => document.removeEventListener('IgnorePWAUpdate', removeUpdateNotification);\n    }, [removeUpdateNotification]);\n\n    const handleClickCashier = () => {\n        if (!has_any_real_account && is_virtual) {\n            toggleReadyToDepositModal();\n        } else {\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    const filterPlatformsForClients = payload =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            if (config.link_to === routes.dxtrade) {\n                return is_dxtrade_allowed;\n            }\n            if (\n                config.link_to === routes.bot ||\n                config.href === routes.binarybot ||\n                config.href === routes.smarttrader\n            ) {\n                return is_bot_allowed;\n            }\n            return true;\n        });\n\n    return (\n        <header\n            className={classNames('header', {\n                'header--is-disabled': is_app_disabled || is_route_modal_on,\n                'header--is-hidden': platforms[platform],\n            })}\n        >\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {is_desktop && (\n                        <PlatformSwitcher\n                            app_routing_history={app_routing_history}\n                            platform_config={filterPlatformsForClients(platform_config)}\n                            setTogglePlatformType={setTogglePlatformType}\n                            current_language={current_language}\n                        />\n                    )}\n                    {is_mobile && (\n                        <React.Fragment>\n                            <ToggleMenuDrawer platform_config={filterPlatformsForClients(platform_config)} />\n                            {header_extension && is_logged_in && (\n                                <div className='header__menu-left-extensions'>{header_extension}</div>\n                            )}\n                        </React.Fragment>\n                    )}\n                    {is_desktop && <TradersHubHomeButton />}\n                    <MenuLinks />\n                </div>\n\n                <div\n                    className={classNames('header__menu-right', {\n                        'header__menu-right--hidden': is_mobile && is_logging_in,\n                    })}\n                >\n                    {is_desktop && (\n                        <div className='header__menu--dtrader--separator--account'>\n                            <div className='header__menu--dtrader--separator' />\n                        </div>\n                    )}\n                    {(is_logging_in || is_switching) && (\n                        <div\n                            id='dt_core_header_acc-info-preloader'\n                            className={classNames('acc-info__preloader__dtrader', {\n                                'acc-info__preloader__dtrader--no-currency': !currency,\n                                'acc-info__preloader__dtrader--is-crypto': getDecimalPlaces(currency) > 2,\n                            })}\n                        >\n                            <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={is_mobile} speed={3} />\n                        </div>\n                    )}\n                    <HeaderAccountActions onClickDeposit={handleClickCashier} />\n                </div>\n            </div>\n            {is_real_acc_signup_on && <RealAccountSignup />}\n            <SetAccountCurrencyModal />\n            <NewVersionNotification onUpdate={addUpdateNotification} />\n        </header>\n    );\n});\n\nexport default DTraderHeader;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 104 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_34589_443010)\"><path d=\"M20.83 1.09l-1.78 10.1h-6.18C7.11 11.18 1.61 15.84.6 21.6l-.43 2.46C-.85 29.83 3 34.5 8.76 34.5h5.16c4.2 0 8.2-3.4 8.94-7.6L27.61 0l-6.78 1.09zm-4.38 24.86a2.85 2.85 0 01-2.7 2.35h-3.13c-2.59 0-4.32-2.1-3.87-4.7l.27-1.53a5.85 5.85 0 015.53-4.7h5.41l-1.51 8.58zm51.98 8.55l4.06-23h6.41l-4.05 23h-6.42zm.7-22.73l-.97 5.47a16.35 16.35 0 00-7.14-.45L57.9 34.51h-6.42l3.85-21.82a21.7 21.7 0 0113.8-.92zm-26.01-.6h-5c-4.86 0-9.5 3.95-10.36 8.81l-1 5.72c-.87 4.86 2.38 8.8 7.25 8.8h10.62l1.09-6.18h-9.99c-1.62 0-2.7-1.31-2.41-2.93l.03-.2h16.1l.91-5.2c.86-4.87-2.38-8.81-7.25-8.81zm.8 8.32l-.03.33h-9.57l.05-.3c.29-1.61 1.77-3.04 3.4-3.04h3.73c1.6 0 2.7 1.4 2.43 3zm53.6-7.99h6.41c-2.19 5.82-7.2 15.7-12.05 23h-6.42c-2.23-6.95-3.67-16.63-3.94-23h6.42c.11 2.08 1.04 9.79 2.1 15.17a208.42 208.42 0 007.47-15.17z\" fill=\"#FF444F\" /></g><defs><clipPath id=\"clip0_34589_443010\"><path fill=\"#fff\" d=\"M0 0h104v34.51H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { capitalizeFirstLetter } from '@deriv/shared';\nimport { IconProps } from '../types';\n\n// TODO: This probably can be moved somewhere else.\nexport type Currency =\n    | 'AUD'\n    | 'BCH'\n    | 'BTC'\n    | 'BUSD'\n    | 'DAI'\n    | 'ETH'\n    | 'EURCHECK'\n    | 'EUR'\n    | 'EURS'\n    | 'EUSDT'\n    | 'GBP'\n    | 'IDK'\n    | 'LTC'\n    | 'PAX'\n    | 'TUSD'\n    | 'TUSDT'\n    | 'UNKNOWN'\n    | 'USD'\n    | 'USDC'\n    | 'USDK'\n    | 'UST'\n    | 'VIRTUAL';\n\nconst CurrencyIcon = ({ icon, ...props }: IconProps<Currency>) => {\n    return <Icon icon={`IcCurrency${capitalizeFirstLetter(icon.toLowerCase())}`} {...props} />;\n};\n\nexport default CurrencyIcon;\n","import React from 'react';\nimport getStatusBadgeConfig from '@deriv/account/src/Configs/get-status-badge-config';\nimport { Button, Icon, Modal, Money, StatusBadge, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getCurrencyName } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport CurrencyIcon from './currency';\nimport { AccountListDetail } from './types';\nimport classNames from 'classnames';\nimport { useHasSetCurrency, useMFAccountStatus } from '@deriv/hooks';\n\ntype CurrencySelectionModalProps = {\n    is_visible: boolean;\n};\n\nconst CurrencySelectionModal = observer(({ is_visible }: CurrencySelectionModalProps) => {\n    const { client, traders_hub, ui } = useStore();\n    const {\n        account_list,\n        accounts,\n        switchAccount,\n        has_any_real_account,\n        account_status,\n        loginid: current_loginid,\n    } = client;\n    const { closeModal, selected_region, openFailedVerificationModal } = traders_hub;\n    const { openRealAccountSignup, toggleSetCurrencyModal } = ui;\n    const { authentication } = account_status;\n\n    const mf_account_status = useMFAccountStatus();\n    const { text: badge_text, icon: badge_icon } = getStatusBadgeConfig(\n        mf_account_status,\n        openFailedVerificationModal,\n        'multipliers',\n        undefined,\n        { poi_status: authentication?.identity?.status, poa_status: authentication?.document?.status }\n    );\n\n    const hasSetCurrency = useHasSetCurrency();\n    let timeout: ReturnType<typeof setTimeout>;\n\n    return (\n        <Modal is_open={is_visible} toggleModal={closeModal} width='422px' height='422px'>\n            <div className='currency-selection-modal__header'>\n                <Text line-height='m' weight='bold'>\n                    {localize('Select account')}\n                </Text>\n                <Icon className='close-icon' icon='IcCross' onClick={() => closeModal()} />\n            </div>\n            <div className='currency-selection-modal__body'>\n                {(account_list as AccountListDetail[])\n                    .filter(\n                        acc =>\n                            !!acc.is_disabled === false &&\n                            ((!acc.is_virtual && selected_region === 'Non-EU' && acc.loginid.startsWith('CR')) ||\n                                (selected_region === 'EU' && acc.loginid.startsWith('MF')))\n                    )\n                    .map(({ icon, loginid }) => {\n                        const { balance, currency } = accounts[loginid];\n                        const is_selected = current_loginid === loginid;\n                        return (\n                            <div\n                                key={loginid}\n                                className={classNames('currency-item-card', {\n                                    'currency-item-card--active': is_selected,\n                                })}\n                                onClick={async () => {\n                                    if (loginid !== current_loginid) {\n                                        await switchAccount(loginid);\n                                    }\n                                    closeModal();\n                                }}\n                            >\n                                <CurrencyIcon className='currency-item-card__icons' icon={icon} size={32} />\n                                <div className='currency-item-card__details'>\n                                    <Text size='xs'>{getCurrencyName(currency)}</Text>\n                                    <Text color={is_selected ? 'prominent' : 'less-prominent'} size='xxs'>\n                                        {loginid}\n                                    </Text>\n                                </div>\n                                <div className='currency-item-card__balance'>\n                                    {mf_account_status ? (\n                                        <StatusBadge\n                                            account_status={mf_account_status}\n                                            icon={badge_icon}\n                                            text={badge_text}\n                                        />\n                                    ) : (\n                                        <Text size='xs' color='prominent'>\n                                            <Money amount={balance} currency={currency} show_currency />\n                                        </Text>\n                                    )}\n                                </div>\n                            </div>\n                        );\n                    })}\n            </div>\n            <div className='currency-selection-modal__bottom-controls'>\n                <Button\n                    className='block-button'\n                    onClick={() => {\n                        clearTimeout(timeout);\n                        timeout = setTimeout(() => {\n                            if (has_any_real_account && !hasSetCurrency) {\n                                toggleSetCurrencyModal();\n                            } else openRealAccountSignup('manage');\n                        }, 500);\n                        closeModal();\n                    }}\n                    secondary\n                    large\n                >\n                    {localize('Add or manage account')}\n                </Button>\n            </div>\n        </Modal>\n    );\n});\n\nexport default CurrencySelectionModal;\n","import CurrencySelectionModal from './curreny-selection-modal';\nimport './currency-selection-modal.scss';\n\nexport default CurrencySelectionModal;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { ToggleNotifications } from 'App/Components/Layout/Header';\n\nconst ShowNotifications = observer(() => {\n    const { notifications: notifications_store } = useStore();\n    const { is_notifications_visible, notifications, toggleNotificationsModal } = notifications_store;\n\n    return (\n        <div data-testid='dt_traders_hub_show_notifications' className='traders-hub-header__notification'>\n            <ToggleNotifications\n                count={notifications.length}\n                is_visible={is_notifications_visible}\n                toggleDialog={toggleNotificationsModal}\n                tooltip_message={<Localize i18n_default_text='View notifications' />}\n            />\n        </div>\n    );\n});\n\nexport default ShowNotifications;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Icon, Popover } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useFeatureFlags } from '@deriv/hooks';\nimport { useLocalStorage } from 'usehooks-ts';\n\nconst TradersHubOnboarding = observer(() => {\n    const history = useHistory();\n    const { traders_hub, ui } = useStore();\n    const { setIsOnboardingVisited, setIsFirstTimeVisit } = traders_hub;\n    const { is_dark_mode_on, is_mobile } = ui;\n    const { is_next_wallet_enabled } = useFeatureFlags();\n    const [, setWalletsOnboarding] = useLocalStorage('walletsOnboarding', '');\n\n    const onClickHandler = is_next_wallet_enabled\n        ? () => {\n              setWalletsOnboarding('started');\n          }\n        : () => {\n              history.push(routes.onboarding);\n              setIsOnboardingVisited(false);\n              setIsFirstTimeVisit(false);\n          };\n\n    return (\n        <div data-testid='dt_traders_hub_onboarding'>\n            <div className='traders-hub-header__tradershub--onboarding--logo'>\n                <Popover\n                    classNameBubble='account-settings-toggle__tooltip'\n                    alignment='bottom'\n                    message={!is_mobile && <Localize i18n_default_text='View onboarding' />}\n                    should_disable_pointer_events\n                    zIndex='9999'\n                >\n                    <Icon\n                        data_testid='dt_traders_hub_onboarding_icon'\n                        icon={is_dark_mode_on ? 'IcAppstoreTradingHubOnboardingDark' : 'IcAppstoreTradingHubOnboarding'}\n                        size={20}\n                        onClick={onClickHandler}\n                    />\n                </Popover>\n            </div>\n        </div>\n    );\n});\n\nexport default TradersHubOnboarding;\n","import React from 'react';\n\nimport { Button, Icon } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\nimport { BinaryLink } from 'App/Components/Routes';\n\nimport ShowNotifications from './show-notifications';\nimport TradersHubOnboarding from './traders-hub-onboarding';\nimport { useFeatureFlags } from '@deriv/hooks';\n\ntype TDefaultMobileLinks = {\n    handleClickCashier: () => void;\n};\n\nconst DefaultMobileLinks = React.memo(({ handleClickCashier }: TDefaultMobileLinks) => {\n    const { is_next_wallet_enabled } = useFeatureFlags();\n    return (\n        <React.Fragment>\n            <div className='traders-hub-header__menu-right--items--onboarding'>\n                <TradersHubOnboarding />\n            </div>\n            <div className='traders-hub-header__menu-right--items--notifications'>\n                <ShowNotifications />\n            </div>\n            <BinaryLink className='traders-hub-header__setting' to={routes.personal_details}>\n                <Icon icon='IcUserOutline' size={20} />\n            </BinaryLink>\n            {!is_next_wallet_enabled && (\n                <div className='traders-hub-header__cashier-button'>\n                    <Button primary small onClick={handleClickCashier}>\n                        <Localize i18n_default_text='Cashier' />\n                    </Button>\n                </div>\n            )}\n        </React.Fragment>\n    );\n});\n\nDefaultMobileLinks.displayName = 'DefaultMobileLinks';\n\nexport default DefaultMobileLinks;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Icon, Popover, StaticUrl } from '@deriv/components';\nimport { useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { routes, platforms, formatMoney } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { MenuLinks } from 'App/Components/Layout/Header';\nimport platform_config from 'App/Constants/platform-config';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport { BinaryLink } from 'App/Components/Routes';\nimport DerivBrandLogo from 'Assets/SvgComponents/header/deriv-rebranding-logo.svg';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport AccountInfo from 'App/Components/Layout/Header/account-info';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport CurrencySelectionModal from '../../CurrencySelectionModal';\nimport DefaultMobileLinks from './default-mobile-links';\nimport ShowNotifications from './show-notifications';\nimport TradersHubOnboarding from './traders-hub-onboarding';\nimport TradersHubHomeButton from './traders-hub-home-button';\n\ntype TPlatformConfig = typeof platform_config;\ntype TPlatforms = typeof platforms;\n\nconst TradersHubHeader = observer(() => {\n    const { client, common, traders_hub, ui } = useStore();\n    const {\n        account_type,\n        balance,\n        country_standpoint,\n        currency,\n        has_any_real_account,\n        is_eu,\n        is_logged_in,\n        is_mt5_allowed,\n        is_virtual,\n    } = client;\n    const { platform } = common;\n    const { modal_data } = traders_hub;\n    const {\n        header_extension,\n        is_accounts_switcher_on,\n        is_app_disabled,\n        is_desktop,\n        is_mobile,\n        is_route_modal_on,\n        account_switcher_disabled_message,\n        toggleAccountsDialog,\n        toggleNeedRealAccountForCashierModal,\n        toggleReadyToDepositModal,\n        is_real_acc_signup_on,\n    } = ui;\n\n    const history = useHistory();\n    const { pathname } = useLocation();\n    const cashier_routes = pathname.startsWith(routes.cashier);\n    const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n    const account_balance = formatMoney(currency, balance ?? '', true);\n\n    const filterPlatformsForClients = (payload: TPlatformConfig) =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            return true;\n        });\n\n    const toggleModal = () => {\n        if (!has_any_real_account) {\n            toggleReadyToDepositModal();\n        } else if (window.location.pathname === routes.traders_hub) {\n            toggleNeedRealAccountForCashierModal();\n        }\n    };\n\n    const handleClickCashier = () => {\n        if ((!has_any_real_account && is_virtual) || real_account_needed_for_cashier) {\n            toggleModal();\n        } else {\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    return (\n        <header\n            className={classNames('traders-hub-header', {\n                'traders-hub-header--is-disabled': is_app_disabled || is_route_modal_on,\n                'traders-hub-header--is-hidden': platforms[platform as keyof TPlatforms],\n            })}\n        >\n            <div className='traders-hub-header__menu-left'>\n                {is_mobile && (\n                    <React.Fragment>\n                        <ToggleMenuDrawer {...{ platform_config: filterPlatformsForClients(platform_config) }} />\n                        {header_extension && is_logged_in && <div>{header_extension}</div>}\n                    </React.Fragment>\n                )}\n                <div\n                    className={classNames('traders-hub-header__logo-wrapper', {\n                        'traders-hub-header__logo-wrapper--cashier': cashier_routes,\n                    })}\n                >\n                    <StaticUrl href='/'>\n                        <DerivBrandLogo className='traders-hub-header__logo' />\n                    </StaticUrl>\n                </div>\n                {is_desktop && (\n                    <React.Fragment>\n                        <div className='traders-hub-header__divider' />\n                        <TradersHubHomeButton />\n                    </React.Fragment>\n                )}\n                <MenuLinks {...{ is_traders_hub_routes: true }} />\n            </div>\n            {is_desktop && (\n                <React.Fragment>\n                    <div className='traders-hub-header__menu-right'>\n                        <div className='traders-hub-header__divider' />\n                        <div className='traders-hub-header__menu-right--items'>\n                            <div className='traders-hub-header__menu-right--items--onboarding'>\n                                <TradersHubOnboarding />\n                            </div>\n                            <div className='traders-hub-header__menu-right--items--notifications'>\n                                <ShowNotifications />\n                            </div>\n                            <Popover\n                                classNameBubble='account-settings-toggle__tooltip'\n                                alignment='bottom'\n                                message={<Localize i18n_default_text='Manage account settings' />}\n                                should_disable_pointer_events\n                                zIndex='9999'\n                            >\n                                <BinaryLink className='traders-hub-header__setting' to={routes.personal_details}>\n                                    <Icon icon='IcUserOutline' size={20} />\n                                </BinaryLink>\n                            </Popover>\n                            {cashier_routes && (\n                                <div className='traders-hub-header__menu-right--items--account-toggle'>\n                                    <AccountInfo\n                                        acc_switcher_disabled_message={account_switcher_disabled_message}\n                                        account_type={account_type}\n                                        balance={account_balance}\n                                        country_standpoint={country_standpoint}\n                                        currency={currency}\n                                        is_dialog_on={is_accounts_switcher_on}\n                                        is_disabled={false}\n                                        is_eu={is_eu}\n                                        is_virtual={is_virtual}\n                                        toggleDialog={toggleAccountsDialog}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    {is_real_acc_signup_on && <RealAccountSignup />}\n                </React.Fragment>\n            )}\n            {is_mobile && (\n                <React.Fragment>\n                    <div className='traders-hub-header__mobile-parent'>\n                        <div className='traders-hub-header__menu-middle'>\n                            {cashier_routes ? (\n                                <React.Fragment>\n                                    <div className='traders-hub-header__menu-right--items--notifications__cashier'>\n                                        <ShowNotifications />\n                                    </div>\n                                    <div className='traders-hub-header__menu-right--items--account-toggle'>\n                                        <AccountInfo\n                                            acc_switcher_disabled_message={account_switcher_disabled_message}\n                                            account_type={account_type}\n                                            balance={account_balance}\n                                            country_standpoint={country_standpoint}\n                                            currency={currency}\n                                            is_dialog_on={is_accounts_switcher_on}\n                                            is_disabled={false}\n                                            is_eu={is_eu}\n                                            is_virtual={is_virtual}\n                                            toggleDialog={toggleAccountsDialog}\n                                        />\n                                    </div>\n                                </React.Fragment>\n                            ) : (\n                                <DefaultMobileLinks handleClickCashier={handleClickCashier} />\n                            )}\n                        </div>\n                    </div>\n                    <RealAccountSignup />\n                </React.Fragment>\n            )}\n            <SetAccountCurrencyModal />\n            <CurrencySelectionModal is_visible={modal_data.active_modal === 'currency_selection'} />\n        </header>\n    );\n});\n\nexport default TradersHubHeader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\ntype TAccountsInfoLoaderWallets = {\n    is_mobile: boolean;\n    is_logged_in: boolean;\n    speed: number;\n};\n\nconst AccountsInfoLoaderWallets = ({ is_mobile, is_logged_in, speed }: TAccountsInfoLoaderWallets) => (\n    <ContentLoader\n        height={is_mobile ? 42 : 46}\n        width={is_mobile ? 216 : 450}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        {is_logged_in ? <LoggedInPreloader is_mobile={is_mobile} /> : <LoggedOutPreloader is_mobile={is_mobile} />}\n    </ContentLoader>\n);\n\nconst LoggedOutPreloader = ({ is_mobile }: Pick<TAccountsInfoLoaderWallets, 'is_mobile'>) => (\n    <React.Fragment>\n        <rect x={is_mobile ? 42 : 166} y='8' rx='4' ry='4' width='66' height='32' />\n        <rect x={is_mobile ? 120 : 250} y='8' rx='4' ry='4' width='80' height='32' />\n    </React.Fragment>\n);\n\nconst LoggedInPreloader = ({ is_mobile }: Pick<TAccountsInfoLoaderWallets, 'is_mobile'>) =>\n    is_mobile ? (\n        <React.Fragment>\n            <circle cx='97' cy='22' r='13' />\n            <circle cx='59' cy='22' r='13' />\n            <rect x='128' y='19' rx='4' ry='4' width='76' height='7' />\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            <circle cx='14' cy='22' r='12' />\n            <circle cx='58' cy='22' r='12' />\n            <rect x='87' y='8' rx='4' ry='4' width='1' height='30' />\n            <circle cx='118' cy='24' r='13' />\n            <rect x='150' y='20' rx='4' ry='4' width='150' height='7' />\n            <rect x='330' y='8' rx='4' ry='4' width='122' height='32' />\n        </React.Fragment>\n    );\n\nexport default AccountsInfoLoaderWallets;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { routes, platforms } from '@deriv/shared';\nimport { MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport { AccountActionsWallets } from 'App/Components/Layout/Header/wallets/account-actions-wallets';\nimport platform_config from 'App/Constants/platform-config';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport AccountsInfoLoaderWallets from 'App/Components/Layout/Header/wallets/accounts-info-loader-wallets';\nimport TradersHubHomeButton from './traders-hub-home-button';\n\nconst Divider = () => <div className='header__menu--dtrader--separator' />;\n\nconst MenuLeft = observer(() => {\n    const { client, common, ui, traders_hub } = useStore();\n    const { is_bot_allowed, is_logged_in, is_mt5_allowed, is_dxtrade_allowed } = client;\n    const { app_routing_history, current_language } = common;\n    const { header_extension } = ui;\n    const { setTogglePlatformType } = traders_hub;\n\n    const filterPlatformsForClients = (payload: typeof platform_config) =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            if (config.link_to === routes.dxtrade) {\n                return is_dxtrade_allowed;\n            }\n            if (\n                config.link_to === routes.bot ||\n                config.href === routes.binarybot ||\n                config.href === routes.smarttrader\n            ) {\n                return is_bot_allowed;\n            }\n            return true;\n        });\n\n    return (\n        <div className='header__menu-left'>\n            <DesktopWrapper>\n                <PlatformSwitcher\n                    app_routing_history={app_routing_history}\n                    platform_config={filterPlatformsForClients(platform_config)}\n                    setTogglePlatformType={setTogglePlatformType}\n                    current_language={current_language}\n                />\n            </DesktopWrapper>\n            <MobileWrapper>\n                <ToggleMenuDrawer platform_config={filterPlatformsForClients(platform_config)} />\n                {header_extension && is_logged_in && (\n                    <div className='header__menu-left-extensions'>{header_extension}</div>\n                )}\n            </MobileWrapper>\n            <DesktopWrapper>\n                <TradersHubHomeButton />\n            </DesktopWrapper>\n            <MenuLinks />\n        </div>\n    );\n});\n\nconst MenuRight = observer(() => {\n    const { client, ui } = useStore();\n    const { is_logged_in, is_logging_in, is_switching, accounts, loginid, is_crypto } = client;\n    const { is_mobile } = ui;\n\n    const active_account = accounts?.[loginid ?? ''];\n    const currency = active_account?.currency ?? '';\n\n    return (\n        <div\n            className={classNames('header__menu-right', {\n                'header__menu-right--hidden': is_mobile && is_logging_in,\n            })}\n        >\n            <DesktopWrapper>\n                <div className='header__menu--dtrader--separator--account'>\n                    <Divider />\n                </div>\n            </DesktopWrapper>\n            {(is_logging_in || is_switching) && (\n                <div\n                    id='dt_core_header_acc-info-preloader'\n                    className={classNames('acc-info__preloader__dtrader acc-info__preloader__dtrader--wallets', {\n                        'acc-info__preloader__dtrader--no-currency': !currency,\n                        'acc-info__preloader__dtrader--is-crypto': is_crypto(currency),\n                    })}\n                >\n                    <AccountsInfoLoaderWallets is_logged_in={is_logged_in} is_mobile={is_mobile} speed={3} />\n                </div>\n            )}\n            <div id={'dt_core_header_acc-info-container'} className='acc-info__container'>\n                <AccountActionsWallets />\n            </div>\n        </div>\n    );\n});\n\nconst DTraderHeaderWallets = observer(() => {\n    const { common, ui, notifications } = useStore();\n    const { platform } = common;\n    const { is_app_disabled, is_route_modal_on } = ui;\n    const { addNotificationMessage, client_notifications, removeNotificationMessage } = notifications;\n\n    const addUpdateNotification = () => addNotificationMessage(client_notifications.new_version_available);\n    const removeUpdateNotification = React.useCallback(\n        () => removeNotificationMessage({ key: 'new_version_available' }),\n        [removeNotificationMessage]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('IgnorePWAUpdate', removeUpdateNotification);\n        return () => document.removeEventListener('IgnorePWAUpdate', removeUpdateNotification);\n    }, [removeUpdateNotification]);\n\n    return (\n        <header\n            className={classNames('header', {\n                'header--is-disabled': is_app_disabled || is_route_modal_on,\n                'header--is-hidden': platforms[platform],\n            })}\n        >\n            <div className='header__menu-items'>\n                <MenuLeft />\n                <MenuRight />\n            </div>\n            <RealAccountSignup />\n            <SetAccountCurrencyModal />\n            <NewVersionNotification onUpdate={addUpdateNotification} />\n        </header>\n    );\n});\n\nexport default withRouter(DTraderHeaderWallets);\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useFeatureFlags, useStoreWalletAccountsList } from '@deriv/hooks';\nimport DefaultHeader from './default-header';\nimport DTraderHeader from './dtrader-header';\nimport TradersHubHeader from './traders-hub-header';\nimport DTraderHeaderWallets from './dtrader-header-wallets';\nimport { useReadLocalStorage } from 'usehooks-ts';\n\nconst Header = observer(() => {\n    const { client } = useStore();\n    const { accounts, is_logged_in, setAccounts, loginid, switchAccount } = client;\n    const { pathname } = useLocation();\n    const is_wallets_cashier_route = pathname.includes(routes.wallets_cashier);\n\n    const traders_hub_routes =\n        [\n            routes.traders_hub,\n            routes.traders_hub_v2,\n            routes.account,\n            routes.cashier,\n            routes.wallets,\n            routes.wallets_compare_accounts,\n            routes.compare_cfds,\n        ].includes(pathname) ||\n        pathname.startsWith(routes.compare_cfds) ||\n        is_wallets_cashier_route;\n\n    const client_accounts = useReadLocalStorage('client.accounts');\n    const { is_next_wallet_enabled } = useFeatureFlags();\n    const { has_wallet } = useStoreWalletAccountsList();\n    const should_show_wallets = is_next_wallet_enabled && has_wallet;\n\n    React.useEffect(() => {\n        if (should_show_wallets && is_logged_in) {\n            const accounts_keys = Object.keys(accounts ?? {});\n            const client_accounts_keys = Object.keys(client_accounts ?? {});\n            if (client_accounts_keys.length > accounts_keys.length) {\n                setAccounts(\n                    client_accounts as Record<string, ReturnType<typeof useStore>['client']['accounts'][number]>\n                );\n                const active_loginig_from_local_storage = localStorage.getItem('active_loginid') ?? '';\n                if (loginid !== active_loginig_from_local_storage) switchAccount(active_loginig_from_local_storage);\n            }\n        }\n    }, [accounts, client_accounts, is_logged_in, loginid, setAccounts, should_show_wallets, switchAccount]);\n\n    if (is_logged_in) {\n        let result;\n        if (traders_hub_routes) {\n            result = <TradersHubHeader />;\n        } else if (pathname === routes.onboarding) {\n            result = null;\n        } else {\n            result = should_show_wallets ? <DTraderHeaderWallets /> : <DTraderHeader />;\n        }\n        return result;\n    } else if (pathname === routes.onboarding) {\n        return null;\n    }\n    return <DefaultHeader />;\n});\n\nexport default Header;\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport './deriv-real-account-required-modal.scss';\n\nconst DerivRealAccountRequiredModal = observer(() => {\n    const { ui, traders_hub } = useStore();\n    const { is_eu_user } = traders_hub;\n    const {\n        is_deriv_account_needed_modal_visible: is_open,\n        openDerivRealAccountNeededModal: onClose,\n        disableApp,\n        enableApp,\n        openRealAccountSignup,\n    } = ui;\n    const createAccount = () => {\n        if (is_eu_user) {\n            onClose();\n            openRealAccountSignup('maltainvest');\n        } else {\n            onClose();\n            openRealAccountSignup('svg');\n        }\n    };\n\n    return (\n        <Dialog\n            className='open-real-account-dialog'\n            title={localize('You’ll need a Deriv account')}\n            confirm_button_text={localize('Add Deriv Account')}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Cancel')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n        >\n            {localize('A Deriv account will allow you to fund (and withdraw from) your CFDs account(s).')}\n        </Dialog>\n    );\n});\n\nexport default DerivRealAccountRequiredModal;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MT5AccountNeededModal = observer(() => {\n    const { client, ui } = useStore();\n    const {\n        is_account_needed_modal_on,\n        account_needed_modal_props: { target, target_label, target_dmt5_label },\n        closeAccountNeededModal,\n        disableApp,\n        enableApp,\n        openRealAccountSignup,\n    } = ui;\n    const { is_eu } = client;\n    const dmt5_label = is_eu ? localize('CFDs') : localize('Deriv MT5');\n    const deriv_label = is_eu ? localize('Deriv Multipliers') : localize('Deriv');\n\n    const createAccount = () => {\n        closeAccountNeededModal();\n        openRealAccountSignup(target);\n    };\n\n    return (\n        <Dialog\n            title={localize('You’ll need a {{deriv_account}} account', {\n                deriv_account: target_label,\n            })}\n            confirm_button_text={localize('Add {{deriv_account}} account', {\n                deriv_account: target_label,\n            })}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Cancel')}\n            onCancel={closeAccountNeededModal}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_account_needed_modal_on}\n        >\n            <Localize\n                i18n_default_text='Please add a {{deriv_account}} account first before adding a {{dmt5_account}} account. Deposits and withdrawals for your {{dmt5_label}} account are done by transferring funds to and from your {{deriv_label}} account.'\n                values={{\n                    deriv_account: target_label,\n                    dmt5_account: target_dmt5_label,\n                    dmt5_label,\n                    deriv_label,\n                }}\n            />\n        </Dialog>\n    );\n});\n\nexport default MT5AccountNeededModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Dialog } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getCurrentProductionDomain } from '@deriv/shared';\n\nconst RedirectNoticeModal = ({ is_logged_in, is_eu, portal_id }) => {\n    const [dialog_status, setDialogStatus] = React.useState(false);\n    const [external_link, setExternalLink] = React.useState('');\n\n    const isThirdPartyLink = href => {\n        let destination;\n        try {\n            destination = new URL(href);\n        } catch (e) {\n            return false;\n        }\n        return (\n            !!destination.host &&\n            !new RegExp(`^.*\\\\.${getCurrentProductionDomain() || 'binary\\\\.com'}$`).test(destination.host) && // destination host is not binary subdomain\n            !new RegExp('^.*\\\\.binary\\\\.bot$').test(destination.host) && // destination host is not binary subdomain\n            !/www\\.(betonmarkets|xodds)\\.com/.test(destination.host) && // destination host is not binary old domain\n            !/deriv.(app|com)/.test(destination.host) && // destination host is not deriv\n            window.location.host !== destination.host\n        );\n    };\n    const onCancelDialog = () => {\n        setDialogStatus(false);\n    };\n    const onConfirmDialog = () => {\n        setDialogStatus(false);\n        window.open(external_link);\n    };\n\n    const onClickExternalLink = e => {\n        const link_element = e.target.tagName === 'A' ? e.target : e.target.closest('a');\n        if (link_element) {\n            if (isThirdPartyLink(link_element.href) && is_logged_in && is_eu) {\n                e.preventDefault();\n                e.stopPropagation();\n                setExternalLink(link_element.href);\n                setDialogStatus(true);\n            }\n        }\n    };\n\n    React.useEffect(() => {\n        document.addEventListener('click', onClickExternalLink);\n        return () => {\n            document.removeEventListener('click', onClickExternalLink);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_logged_in, is_eu]);\n\n    return ReactDOM.createPortal(\n        <Dialog\n            className='redirect-notice'\n            is_visible={dialog_status}\n            title='Redirect notice'\n            cancel_button_text={localize('Cancel')}\n            confirm_button_text={localize('Proceed')}\n            onCancel={onCancelDialog}\n            onConfirm={onConfirmDialog}\n            dismissable={onCancelDialog}\n        >\n            {localize('You are being redirected to an external website.')}\n        </Dialog>,\n        document.getElementById(portal_id)\n    );\n};\n\nexport default RedirectNoticeModal;\n","import RedirectNoticeModal from './redirect-notice-modal.jsx';\n\nexport default RedirectNoticeModal;\n","import { Button, Icon, Modal, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport React from 'react';\nimport { observer, useStore } from '@deriv/stores';\n\nconst CompletedAssessmentModal = observer(() => {\n    const { ui } = useStore();\n    const { should_show_assessment_complete_modal, setShouldShowAssessmentCompleteModal } = ui;\n    const handleOnClick = () => {\n        setShouldShowAssessmentCompleteModal(false);\n    };\n\n    return (\n        <Modal\n            width='44rem'\n            has_close_icon={false}\n            className='center-risk-modal'\n            is_open={should_show_assessment_complete_modal}\n        >\n            <Modal.Body>\n                <Icon icon='IcVerificationSuccess' color='green' size={80} />\n                <Text as='p' align='center' weight='bold' className='verified-account__text'>\n                    <Localize i18n_default_text='Assessment Completed<0/><0/>' components={[<br key={0} />]} />\n                </Text>\n                <Text as='p' size='xs' align='center'>\n                    <Localize\n                        i18n_default_text='Thank you! Your response has been recorded into our system.<0/><0/>Please click ‘OK’ to continue.'\n                        components={[<br key={0} />]}\n                    />\n                </Text>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button type='button' large text={localize('OK')} primary onClick={handleOnClick} />\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CompletedAssessmentModal;\n","import React from 'react';\nimport { Dialog, Text } from '@deriv/components';\nimport { useHasMFAccountDeposited } from '@deriv/hooks';\nimport { Localize, localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport './ready-to-verify-modal.scss';\n\nconst ReadyToVerifyModal = observer(() => {\n    const { ui } = useStore();\n    const {\n        should_show_account_success_modal,\n        setShouldTriggerTourGuide,\n        toggleAccountSuccessModal,\n        disableApp,\n        enableApp,\n        setIsVerificationModalVisible,\n        setIsFromSuccessDepositModal,\n        is_mobile,\n    } = ui;\n    const { has_mf_account_deposited } = useHasMFAccountDeposited();\n\n    const onConfirmModal = () => {\n        if (has_mf_account_deposited) {\n            setIsFromSuccessDepositModal(true);\n        }\n        toggleAccountSuccessModal();\n        setIsVerificationModalVisible(true); // route to poi-poa modal\n    };\n\n    const onClose = () => {\n        toggleAccountSuccessModal();\n        setShouldTriggerTourGuide(true); // route to onboarding -switch accounts\n    };\n\n    return (\n        <Dialog\n            className='ready-to-verify-dialog'\n            title={has_mf_account_deposited ? localize('Successfully deposited') : localize('Account added')}\n            confirm_button_text={localize('Verify now')}\n            onConfirm={onConfirmModal}\n            cancel_button_text={localize('Maybe later')}\n            onCancel={onClose}\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_visible={should_show_account_success_modal}\n            dismissable={true}\n            has_close_icon={false}\n            onEscapeButtonCancel={onClose}\n        >\n            <Text align='center' size={is_mobile ? 'xxs' : 'xs'}>\n                {has_mf_account_deposited ? (\n                    <Localize i18n_default_text='Your funds will be available for trading once the verification of your account is complete.' />\n                ) : (\n                    <Localize i18n_default_text='Your account will be available for trading once the verification of your account is complete.' />\n                )}\n            </Text>\n        </Dialog>\n    );\n});\n\nexport default ReadyToVerifyModal;\n","import ReadyToVerifyModal from './ready-to-verify-modal';\n\nexport default ReadyToVerifyModal;\n","import React from 'react';\nimport { Button, Icon, Modal, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { formatDate, formatTime, isMobile } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\nconst CooldownWarningModal = observer(() => {\n    const { client, ui } = useStore();\n    const { real_account_creation_unlock_date } = client;\n    const { should_show_cooldown_modal, setShouldShowCooldownModal } = ui;\n    const unblock_date = formatDate(real_account_creation_unlock_date, 'DD MMMM');\n    const unblock_time = formatTime(real_account_creation_unlock_date, 'hh:mm [GMT]');\n    const real_account_unblock_date = localize('{{unblock_date}} at {{unblock_time}}', { unblock_date, unblock_time });\n    const handleToggleModal = () => setShouldShowCooldownModal(!should_show_cooldown_modal);\n\n    return (\n        <Modal\n            width='44rem'\n            title={localize('Account creation paused for 24 hours')}\n            is_open={should_show_cooldown_modal}\n            toggleModal={handleToggleModal}\n            className='center-risk-modal'\n            has_close_icon={!isMobile()}\n        >\n            <Modal.Body>\n                <Icon icon='IcRedWarning' size={63} />\n                <Text as='p' size='xs' align='center' className='risk-acceptance__text'>\n                    <Localize\n                        i18n_default_text=\"Sorry, you're unable to create an account at this time. As you declined our previous risk warnings, we need you to wait for 24 hours after your first account creation attempt before you can proceed.<0/><0/>\"\n                        components={<br key={0} />}\n                    />\n                    <Localize\n                        i18n_default_text='We take your financial well-being seriously and want to ensure you are fully aware of the risks before trading.<0/><0/>'\n                        components={<br key={0} />}\n                    />\n                    <Localize\n                        i18n_default_text='Thank you for your understanding. You can create your account on {{real_account_unblock_date}} or later.'\n                        values={{ real_account_unblock_date }}\n                    />\n                </Text>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    type='button'\n                    large\n                    text={localize('OK')}\n                    primary\n                    onClick={() => {\n                        setShouldShowCooldownModal(false);\n                    }}\n                />\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CooldownWarningModal;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { mt5_community_url } from '@deriv/shared';\n\ntype TMT5NotificationDescription = {\n    setMT5NotificationModal: (value: boolean) => void;\n};\nconst MT5NotificationDescription = ({ setMT5NotificationModal }: TMT5NotificationDescription) => {\n    return (\n        <div className={'mt5-notification-modal-description'}>\n            <ol className='mt5-notification-list-container'>\n                <li className='mt5-notification-list'>\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='Log back in to MT5 after 7:30 GMT on 20 Oct 2023 if you’re having difficulty logging in to MT5 as we’re making some updates to our MT5 platform. <0>Follow these steps</0> to log back in to MT5.'\n                            components={[\n                                <a\n                                    className='mt5-notification-list__link'\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href={mt5_community_url}\n                                    key={0}\n                                    onClick={() => {\n                                        setMT5NotificationModal(false);\n                                    }}\n                                />,\n                            ]}\n                        />\n                    </Text>\n                </li>\n                <li className='mt5-notification-list'>\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='If you need further assistance, let us know via <0>live chat</0>.'\n                            components={[\n                                <a\n                                    className='mt5-notification-list__link'\n                                    onClick={() => {\n                                        window.LC_API.open_chat_window();\n                                        setMT5NotificationModal(false);\n                                    }}\n                                    key={0}\n                                />,\n                            ]}\n                        />\n                    </Text>\n                </li>\n            </ol>\n        </div>\n    );\n};\n\nexport default MT5NotificationDescription;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Modal, DesktopWrapper, MobileDialog, MobileWrapper, UILoader, Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport MT5NotificationDescription from './mt5-notification-description';\n\nconst MT5Notification = observer(() => {\n    const { traders_hub } = useStore();\n    const { setMT5NotificationModal, is_mt5_notification_modal_visible } = traders_hub;\n    const clickHandler = () => {\n        setMT5NotificationModal(!is_mt5_notification_modal_visible);\n    };\n\n    return (\n        <React.Suspense fallback={<UILoader />}>\n            <DesktopWrapper>\n                <Modal\n                    has_close_icon={false}\n                    is_open={is_mt5_notification_modal_visible}\n                    title={localize('Deriv MT5: Your action is needed')}\n                    toggleModal={clickHandler}\n                    className='mt5-notification-modal'\n                    width='510px'\n                >\n                    <Modal.Body className='mt5-notification-modal-body'>\n                        <MT5NotificationDescription setMT5NotificationModal={setMT5NotificationModal} />\n                    </Modal.Body>\n                    <Modal.Footer has_separator>\n                        <Button\n                            primary\n                            onClick={() => {\n                                setMT5NotificationModal(false);\n                            }}\n                        >\n                            {localize('OK')}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    wrapper_classname='mt5-notification-modal-description'\n                    title={localize('Deriv MT5: Your action is needed')}\n                    visible={is_mt5_notification_modal_visible}\n                    onClose={() => {\n                        setMT5NotificationModal(false);\n                    }}\n                    has_full_height\n                    has_close_icon={false}\n                    footer={\n                        <div className='mt5-notification-modal-description--footer'>\n                            <Button\n                                className='mt5-notification-modal-description--button'\n                                primary\n                                onClick={() => setMT5NotificationModal(false)}\n                            >\n                                {localize('OK')}\n                            </Button>\n                        </div>\n                    }\n                >\n                    <MT5NotificationDescription setMT5NotificationModal={setMT5NotificationModal} />\n                </MobileDialog>\n            </MobileWrapper>\n        </React.Suspense>\n    );\n});\n\nexport default MT5Notification;\n","import MT5Notification from './mt5-notification';\nimport './mt5-notification.scss';\n\nexport default MT5Notification;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport './need-real-account-for-cashier-modal.scss';\n\nconst NeedRealAccountForCashierModal = observer(() => {\n    const { ui, traders_hub } = useStore();\n    const { is_eu_user, selectRegion } = traders_hub;\n    const {\n        is_need_real_account_for_cashier_modal_visible: is_open,\n        toggleNeedRealAccountForCashierModal,\n        disableApp,\n        enableApp,\n        openRealAccountSignup,\n    } = ui;\n\n    const history = useHistory();\n\n    const createAccount = () => {\n        toggleNeedRealAccountForCashierModal();\n        return is_eu_user ? openRealAccountSignup('maltainvest') : openRealAccountSignup('svg');\n    };\n\n    const switchRegulation = () => {\n        return is_eu_user ? selectRegion('Non-EU') : selectRegion('EU');\n    };\n\n    const onClose = async () => {\n        toggleNeedRealAccountForCashierModal();\n        await switchRegulation();\n        history.push(routes.cashier_deposit);\n    };\n\n    const regulation = is_eu_user ? 'EU' : 'non-EU';\n\n    const active_real_regulation = is_eu_user ? 'non-EU' : 'EU';\n\n    return (\n        <Dialog\n            className='need-real-account-for-cashier-dialog'\n            title={localize('The cashier is for real accounts only')}\n            confirm_button_text={localize('Add account')}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Switch account')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n            dismissable={false}\n            has_close_icon\n            onClose={toggleNeedRealAccountForCashierModal}\n        >\n            <Localize\n                i18n_default_text='It looks like you don’t have a real {{regulation}} account. To use the cashier, switch to your {{active_real_regulation}} real account, or get an {{regulation}} real account.'\n                values={{ regulation, active_real_regulation }}\n            />\n        </Dialog>\n    );\n});\n\nexport default NeedRealAccountForCashierModal;\n","import NeedRealAccountForCashierModal from './need-real-account-for-cashier-modal';\nimport './need-real-account-for-cashier-modal.scss';\n\nexport default NeedRealAccountForCashierModal;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport './ready-to-deposit-modal.scss';\n\nconst ReadyToDepositModal = observer(() => {\n    const { ui, traders_hub, client } = useStore();\n    const { is_eu_user } = traders_hub;\n    const {\n        is_ready_to_deposit_modal_visible: is_open,\n        toggleReadyToDepositModal: onClose,\n        disableApp,\n        enableApp,\n        openRealAccountSignup,\n        setShouldShowCooldownModal,\n    } = ui;\n    const { real_account_creation_unlock_date } = client;\n\n    const createAccount = () => {\n        onClose();\n        if (real_account_creation_unlock_date) {\n            return setShouldShowCooldownModal(true);\n        } else if (is_eu_user) {\n            return openRealAccountSignup('maltainvest');\n        }\n        return openRealAccountSignup('svg');\n    };\n\n    return (\n        <Dialog\n            className='ready-to-deposit-dialog'\n            title={localize('Ready to deposit and trade for real?')}\n            confirm_button_text={localize('Add real account')}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Maybe later')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n            dismissable={true}\n            has_close_icon={false}\n            onEscapeButtonCancel={onClose}\n        >\n            {localize('You need a real Deriv account to access the cashier.')}\n        </Dialog>\n    );\n});\n\nexport default ReadyToDepositModal;\n","import ReadyToDepositModal from './ready-to-deposit-modal';\n\nexport default ReadyToDepositModal;\n","import { TestWarningModal } from '@deriv/account';\nimport { Button, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared';\nimport React from 'react';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RiskAcceptTestWarningModal = observer(() => {\n    const { ui } = useStore();\n    const {\n        should_show_risk_accept_modal,\n        setShouldShowWarningModal,\n        setShouldShowAssessmentCompleteModal,\n        setIsTradingAssessmentForNewUserEnabled,\n    } = ui;\n    const handleAcceptAppropriatenessTestWarning = () => {\n        setShouldShowWarningModal(false);\n        if (window.location.href.includes(routes.trading_assessment)) {\n            setShouldShowAssessmentCompleteModal(false);\n        } else {\n            setShouldShowAssessmentCompleteModal(true);\n            setIsTradingAssessmentForNewUserEnabled(true);\n        }\n    };\n\n    return (\n        <TestWarningModal\n            show_risk_modal={should_show_risk_accept_modal}\n            body_content={\n                <Text as='p' size='xs'>\n                    <Localize\n                        i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                        components={[<br key={0} />]}\n                    />\n                    <Localize\n                        i18n_default_text='Based on your answers, it looks like you have insufficient knowledge and experience in trading CFDs. CFD trading is risky and you could potentially lose all of your capital.<0/><0/>'\n                        components={[<br key={0} />]}\n                    />\n                    <Localize i18n_default_text='Please note that by clicking ‘OK’, you may be exposing yourself to risks. You may not have the knowledge or experience to properly assess or mitigate these risks, which may be significant, including the risk of losing the entire sum you have invested.' />\n                </Text>\n            }\n            footer_content={\n                <Button\n                    type='button'\n                    large\n                    text={localize('OK')}\n                    primary\n                    onClick={handleAcceptAppropriatenessTestWarning}\n                />\n            }\n        />\n    );\n});\n\nexport default RiskAcceptTestWarningModal;\n","import React from 'react';\nimport { Button, Icon, Modal, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TradingExperienceModal = observer(() => {\n    const { client, ui } = useStore();\n    const { is_trading_experience_incomplete, cfd_score } = client;\n    const {\n        setShouldShowTradingAssessmentModal,\n        should_show_trading_assessment_modal,\n        setShouldShowTradeAssessmentForm,\n    } = ui;\n    React.useEffect(() => {\n        setShouldShowTradingAssessmentModal(cfd_score === 0);\n    }, []);\n\n    const handleOnSubmit = () => {\n        setShouldShowTradingAssessmentModal(false);\n        setShouldShowTradeAssessmentForm(true);\n    };\n\n    return (\n        <Modal\n            width='44rem'\n            className='center-risk-modal'\n            is_open={is_trading_experience_incomplete && should_show_trading_assessment_modal}\n        >\n            <Modal.Body>\n                <Icon icon='IcCurrencyEurCheck' size={95} />\n                <Text as='p' align='center' weight='bold' className='verified-account__text'>\n                    <Localize i18n_default_text='Trading Experience Assessment<0/>' components={[<br key={0} />]} />\n                </Text>\n                <Text as='p' size='xs' align='center'>\n                    <Localize\n                        i18n_default_text='As per our regulatory obligations, we are required to assess your trading knowledge and experience.<0/><0/>Please click ‘OK’ to continue'\n                        components={[<br key={0} />]}\n                    />\n                </Text>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button type='button' large text={localize('OK')} primary onClick={handleOnSubmit} />\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default TradingExperienceModal;\n","import React from 'react';\nimport { Modal, DesktopWrapper, MobileDialog, MobileWrapper } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport TradingAssessmentForm from '@deriv/account/src/Components/trading-assessment/trading-assessment-form';\nimport tradingAssessmentConfig from '@deriv/account/src/Configs/trading-assessment-config';\nimport RiskToleranceWarningModal from '@deriv/account/src/Components/trading-assessment/risk-tolerance-warning-modal';\nimport TradingExperienceModal from './trading-experience-modal.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TradingAssessmentExistingUser = observer(() => {\n    // Get the Trading assessment questions and initial_value\n    const { client, ui } = useStore();\n    const {\n        setFinancialAndTradingAssessment,\n        updateAccountStatus,\n        landing_company_shortcode: active_account_landing_company,\n    } = client;\n    const {\n        should_show_risk_warning_modal,\n        setShouldShowRiskWarningModal,\n        setShouldShowWarningModal,\n        should_show_trade_assessment_form,\n        setShouldShowTradeAssessmentForm,\n        setShouldShowAssessmentCompleteModal,\n        setIsTradingAssessmentForExistingUserEnabled,\n        setIsTradingAssessmentForNewUserEnabled,\n        setShouldShowTradingAssessmentModal,\n        setSubSectionIndex,\n    } = ui;\n    const [form_values, setFormValue] = React.useState({});\n    const [assessment_questions, setAssessmentQuestions] = React.useState({});\n    const [should_move_to_next, setShouldMoveToNext] = React.useState(false);\n\n    React.useEffect(() => {\n        localStorage.removeItem('current_question_index');\n        setIsTradingAssessmentForExistingUserEnabled(true);\n        const { form_value, props } = tradingAssessmentConfig(\n            { real_account_signup_target: active_account_landing_company },\n            null\n        );\n        setFormValue(form_value);\n        setAssessmentQuestions(props.assessment_questions ?? []);\n        return () => setIsTradingAssessmentForExistingUserEnabled(false);\n    }, []);\n\n    const handleSubmit = async values => {\n        if (values.risk_tolerance === 'No') {\n            setShouldShowTradeAssessmentForm(false);\n            setShouldShowRiskWarningModal(true);\n        } else {\n            const form_payload = {\n                trading_experience_regulated: { ...values },\n            };\n            const response = await setFinancialAndTradingAssessment(form_payload);\n            const { trading_score } = response.set_financial_assessment ?? {};\n            await updateAccountStatus();\n            setShouldShowTradeAssessmentForm(false);\n            if (trading_score === 0) {\n                setShouldShowWarningModal(true);\n            } else {\n                setShouldShowAssessmentCompleteModal(true);\n            }\n            setIsTradingAssessmentForNewUserEnabled(true);\n        }\n    };\n\n    const handleAcceptRisk = () => {\n        setFormValue(prev_state => ({ ...prev_state, risk_tolerance: 'Yes' }));\n        setShouldMoveToNext(true);\n        setShouldShowRiskWarningModal(false);\n        setShouldShowTradeAssessmentForm(true);\n    };\n\n    const handleCancel = () => {\n        setShouldShowTradingAssessmentModal(true);\n        setShouldShowTradeAssessmentForm(false);\n    };\n\n    if (should_show_risk_warning_modal) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={should_show_risk_warning_modal}\n                title={localize('Risk Tolerance Warning')}\n                button_text={localize('Yes, I understand the risk.')}\n                handleAcceptRisk={handleAcceptRisk}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, you must confirm that you understand your capital is at risk.'\n                        components={[<br key={0} />]}\n                    />\n                }\n                has_icon\n                has_sub_header\n            />\n        );\n    } else if (should_show_trade_assessment_form) {\n        return (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Modal\n                        is_open={should_show_trade_assessment_form}\n                        title={localize('Trading Experience Assessment')}\n                        width='904px'\n                        has_close_icon={false}\n                        height='688px'\n                        className='real-account-signup-modal'\n                    >\n                        <TradingAssessmentForm\n                            assessment_questions={assessment_questions}\n                            form_value={form_values}\n                            onSubmit={handleSubmit}\n                            onCancel={handleCancel}\n                            setSubSectionIndex={setSubSectionIndex}\n                            class_name='trading-assessment--existing-user'\n                            should_move_to_next={should_move_to_next}\n                        />\n                    </Modal>\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <MobileDialog\n                        visible={should_show_trade_assessment_form}\n                        title={localize('Trading Experience Assessment')}\n                        portal_element_id='modal_root'\n                        has_close_icon={false}\n                    >\n                        <TradingAssessmentForm\n                            assessment_questions={assessment_questions}\n                            form_value={form_values}\n                            onSubmit={handleSubmit}\n                            onCancel={handleCancel}\n                            setSubSectionIndex={setSubSectionIndex}\n                            class_name='trading-assessment--existing-user'\n                            should_move_to_next={should_move_to_next}\n                        />\n                    </MobileDialog>\n                </MobileWrapper>\n            </React.Fragment>\n        );\n    }\n    return <TradingExperienceModal />;\n});\n\nexport default TradingAssessmentExistingUser;\n","import React from 'react';\nimport { Div100vhContainer } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\nimport ProofOfAddressContainer from '@deriv/account/src/Sections/Verification/ProofOfAddress/proof-of-address-container';\nimport ProofOfIdentityContainer from '@deriv/account/src/Sections/Verification/ProofOfIdentity/proof-of-identity-container';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TVerificationModalContent = {\n    onFinish: () => void;\n};\n\ntype TItemsState = {\n    body: typeof ProofOfIdentityContainer | typeof ProofOfAddressContainer;\n};\n\nconst VerificationModalContent = observer((props: TVerificationModalContent) => {\n    const [step, setStep] = React.useState(0);\n    const [form_error, setFormError] = React.useState('');\n    const state_index = step;\n    let is_mounted = React.useRef(true).current;\n\n    const { client, notifications } = useStore();\n\n    const { authentication_status, fetchStatesList } = client;\n    const { refreshNotifications } = notifications;\n\n    const poi_config: TItemsState = {\n        body: ProofOfIdentityContainer,\n    };\n\n    const poa_config: TItemsState = {\n        body: ProofOfAddressContainer,\n    };\n\n    const should_show_poi = !['pending', 'verified'].includes(authentication_status.identity_status);\n    const should_show_poa = !['pending', 'verified'].includes(authentication_status.document_status);\n\n    const verification_configs = [...(should_show_poi ? [poi_config] : []), ...(should_show_poa ? [poa_config] : [])];\n\n    const [items, setItems] = React.useState<TItemsState[]>(verification_configs);\n\n    const clearError = () => {\n        setFormError('');\n    };\n\n    React.useEffect(() => {\n        refreshNotifications();\n    }, [items, refreshNotifications]);\n\n    React.useEffect(() => {\n        fetchStatesList();\n    }, [fetchStatesList]);\n\n    const unmount = () => {\n        is_mounted = false;\n        props.onFinish();\n    };\n\n    const saveFormData = () => {\n        if (!is_mounted) return; // avoiding state update on unmounted component\n        const cloned_items: TItemsState[] = [...items];\n        setItems(cloned_items);\n    };\n\n    const nextStep = () => {\n        clearError();\n        if (step + 1 < items.length) {\n            saveFormData();\n            setStep(step + 1);\n        } else unmount();\n    };\n\n    const prevStep = () => {\n        if (step - 1 >= 0) {\n            setStep(step - 1);\n            setFormError('');\n        } else unmount();\n    };\n\n    const getCurrent = (key?: keyof TItemsState) => {\n        return key ? items[state_index][key] : items[state_index];\n    };\n\n    const onStateChange = () => {\n        saveFormData();\n        nextStep();\n    };\n\n    const BodyComponent = getCurrent('body');\n\n    return (\n        <Div100vhContainer\n            className='proof-of-identity'\n            id='verification_modal_content'\n            is_disabled={isDesktop()}\n            height_offset='40px'\n        >\n            <div className='proof-of-identity__main-container' data-testid='dt_verification_modal_body'>\n                <BodyComponent\n                    index={state_index}\n                    onSubmit={nextStep}\n                    onStateChange={onStateChange}\n                    height='auto'\n                    onCancel={prevStep}\n                    onSave={saveFormData}\n                    form_error={form_error}\n                />\n            </div>\n        </Div100vhContainer>\n    );\n});\n\nexport default VerificationModalContent;\n","import React from 'react';\nimport { DesktopWrapper, MobileDialog, MobileWrapper, Modal, UILoader } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport VerificationModalContent from './verification-modal-content';\n\nimport './verification-modal.scss';\nimport { localize } from '@deriv/translations';\n\nconst VerificationModal = observer(() => {\n    const { ui, client } = useStore();\n    const { authentication_status } = client;\n    const { is_verification_modal_visible, setIsVerificationModalVisible, setIsVerificationSubmitted } = ui;\n\n    const should_show_poi = !['pending', 'verified'].includes(authentication_status.identity_status);\n    const should_show_poa = !['pending', 'verified'].includes(authentication_status.document_status);\n\n    let modal_title;\n\n    if (should_show_poi && should_show_poa) {\n        modal_title = localize('Submit your proof of identity and address');\n    } else if (should_show_poi && !should_show_poa) {\n        modal_title = localize('Submit your proof of identity');\n    } else {\n        modal_title = localize('Submit your proof of address');\n    }\n\n    return (\n        <React.Suspense fallback={<UILoader />}>\n            <DesktopWrapper>\n                <Modal\n                    className='verification-modal'\n                    is_open={is_verification_modal_visible}\n                    title={modal_title}\n                    toggleModal={() => setIsVerificationModalVisible(false)}\n                    height='70rem'\n                    width='99.6rem'\n                    exit_classname='verification-modal--custom-exit'\n                >\n                    <VerificationModalContent\n                        onFinish={() => {\n                            setIsVerificationModalVisible(false);\n                            setIsVerificationSubmitted(true);\n                        }}\n                    />\n                </Modal>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <MobileDialog\n                    portal_element_id='deriv_app'\n                    title={modal_title}\n                    wrapper_classname='verification-modal'\n                    visible={is_verification_modal_visible}\n                    onClose={() => setIsVerificationModalVisible(false)}\n                >\n                    <VerificationModalContent\n                        onFinish={() => {\n                            setIsVerificationModalVisible(false);\n                            setIsVerificationSubmitted(true);\n                        }}\n                    />\n                </MobileDialog>\n            </MobileWrapper>\n        </React.Suspense>\n    );\n});\n\nexport default VerificationModal;\n","import verificationModal from './verification-modal';\n\nexport default verificationModal;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { ContentFlag, moduleLoader, routes, SessionStore } from '@deriv/shared';\n\nimport DerivRealAccountRequiredModal from 'App/Components/Elements/Modals/deriv-real-account-required-modal.jsx';\nimport MT5AccountNeededModal from 'App/Components/Elements/Modals/mt5-account-needed-modal.jsx';\nimport RedirectNoticeModal from 'App/Components/Elements/Modals/RedirectNotice';\nimport { observer, useStore } from '@deriv/stores';\n\nimport CompletedAssessmentModal from './completed-assessment-modal.jsx';\nimport ReadyToVerifyModal from './ready-to-verify-modal';\nimport CooldownWarningModal from './cooldown-warning-modal.jsx';\nimport MT5Notification from './mt5-notification';\nimport NeedRealAccountForCashierModal from './need-real-account-for-cashier-modal';\nimport ReadyToDepositModal from './ready-to-deposit-modal';\nimport RiskAcceptTestWarningModal from './risk-accept-test-warning-modal';\nimport TradingAssessmentExistingUser from './trading-assessment-existing-user.jsx';\nimport VerificationModal from '../VerificationModal';\n\nconst AccountSignupModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"account-signup-modal\" */ '../AccountSignupModal'))\n);\nconst ResetOrUnlinkPasswordModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"reset-or-unlink-password-modal\" */ '../ResetOrUnlinkPasswordModal'))\n);\n\nconst UnlinkPasswordModal = React.lazy(() =>\n    import(/* webpackChunkName: \"reset-or-unlink-password-modal\" */ '../UnlinkPasswordModal')\n);\n\nconst RedirectToLoginModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"reset-password-modal\" */ '../RedirectToLoginModal'))\n);\nconst SetResidenceModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"set-residence-modal\"  */ '../SetResidenceModal'))\n);\nconst ResetEmailModal = React.lazy(() => import(/* webpackChunkName: \"reset-email-modal\"  */ '../ResetEmailModal'));\n\nconst UpdateEmailModal = React.lazy(() => import(/* webpackChunkName: \"update-email-modal\"  */ '../UpdateEmailModal'));\n\nconst WarningScamMessageModal = React.lazy(() =>\n    import(/* webpackChunkName: \"warning-scam-message\" */ '../WarningScamMessageModal')\n);\n\nconst WarningCloseCreateRealAccountModal = React.lazy(() =>\n    import(/* webpackChunkName: \"warning-close-create-real-account\" */ '../WarningCloseCreateRealAccountModal')\n);\n\nconst VerificationDocumentSubmitted = React.lazy(() =>\n    import(/* webpackChunkName: \"verification-document-submitted-modal\" */ './VerificationDocumentSubmitted')\n);\n\nconst OneTimeDepositModal = React.lazy(() =>\n    import(/* webpackChunkName: \"one-time-deposit-modal\" */ '../OneTimeDepositModal')\n);\n\nconst AdditionalKycInfoModal = React.lazy(() =>\n    import(\n        /* webpackChunkName: \"additional-kyc-info-modal\" */ '@deriv/account/src/Components/additional-kyc-info-modal'\n    )\n);\n\nconst InformationSubmittedModal = React.lazy(() =>\n    import(/* webpackChunkName: \"information-submitted-modal\" */ './information-submitted-modal')\n);\n\nconst AppModals = observer(() => {\n    const { client, ui, traders_hub } = useStore();\n    const {\n        is_logged_in,\n        fetchFinancialAssessment,\n        setCFDScore,\n        landing_company_shortcode: active_account_landing_company,\n        is_trading_experience_incomplete,\n    } = client;\n    const { is_mt5_notification_modal_visible, content_flag } = traders_hub;\n    const {\n        is_account_needed_modal_on,\n        is_closing_create_real_account_modal,\n        is_set_residence_modal_visible,\n        should_show_cooldown_modal,\n        should_show_assessment_complete_modal,\n        toggleAccountSignupModal,\n        is_trading_assessment_for_new_user_enabled,\n        is_deriv_account_needed_modal_visible,\n        is_warning_scam_message_modal_visible,\n        is_ready_to_deposit_modal_visible,\n        is_need_real_account_for_cashier_modal_visible,\n        should_show_risk_accept_modal,\n        is_additional_kyc_info_modal_open,\n        is_kyc_information_submitted_modal_open,\n        is_verification_modal_visible,\n        is_verification_submitted,\n        should_show_one_time_deposit_modal,\n        should_show_account_success_modal,\n    } = ui;\n    const temp_session_signup_params = SessionStore.get('signup_query_param');\n    const url_params = new URLSearchParams(useLocation().search || temp_session_signup_params);\n    const url_action_param = url_params.get('action');\n\n    const is_eu_user = [ContentFlag.LOW_RISK_CR_EU, ContentFlag.EU_REAL, ContentFlag.EU_DEMO].includes(content_flag);\n\n    React.useEffect(() => {\n        if (is_logged_in) {\n            fetchFinancialAssessment().then(response => {\n                setCFDScore(response?.cfd_score ?? 0);\n            });\n        }\n    }, [is_logged_in]);\n    if (temp_session_signup_params && window.location.href.includes(routes.onboarding)) {\n        toggleAccountSignupModal(true);\n    } else {\n        SessionStore.remove('signup_query_param');\n        toggleAccountSignupModal(false);\n    }\n\n    let ComponentToLoad = null;\n    switch (url_action_param) {\n        case 'redirect_to_login':\n            ComponentToLoad = <RedirectToLoginModal />;\n            break;\n        case 'reset_password':\n            ComponentToLoad = <ResetOrUnlinkPasswordModal />;\n            break;\n        case 'signup':\n            ComponentToLoad = <AccountSignupModal />;\n            break;\n        case 'request_email':\n            ComponentToLoad = <ResetEmailModal />;\n            break;\n        case 'social_email_change':\n            ComponentToLoad = <UnlinkPasswordModal />;\n            break;\n        case 'system_email_change':\n            ComponentToLoad = <UpdateEmailModal />;\n            break;\n        default:\n            if (is_set_residence_modal_visible) {\n                ComponentToLoad = <SetResidenceModal />;\n            }\n            break;\n    }\n\n    if (\n        is_logged_in &&\n        active_account_landing_company === 'maltainvest' &&\n        !is_trading_assessment_for_new_user_enabled &&\n        is_trading_experience_incomplete &&\n        content_flag !== ContentFlag.LOW_RISK_CR_EU &&\n        content_flag !== ContentFlag.LOW_RISK_CR_NON_EU\n    ) {\n        ComponentToLoad = <TradingAssessmentExistingUser />;\n    } else if (is_warning_scam_message_modal_visible) {\n        ComponentToLoad = <WarningScamMessageModal />;\n    } else if (is_closing_create_real_account_modal) {\n        ComponentToLoad = <WarningCloseCreateRealAccountModal />;\n    } else if (is_account_needed_modal_on) {\n        ComponentToLoad = <MT5AccountNeededModal />;\n    } else if (should_show_cooldown_modal) {\n        ComponentToLoad = <CooldownWarningModal />;\n    } else if (is_mt5_notification_modal_visible) {\n        ComponentToLoad = <MT5Notification />;\n    } else if (should_show_assessment_complete_modal) {\n        ComponentToLoad = <CompletedAssessmentModal />;\n    } else if (is_deriv_account_needed_modal_visible) {\n        ComponentToLoad = <DerivRealAccountRequiredModal />;\n    } else if (should_show_risk_accept_modal) {\n        ComponentToLoad = <RiskAcceptTestWarningModal />;\n    }\n    if (is_ready_to_deposit_modal_visible) {\n        ComponentToLoad = <ReadyToDepositModal />;\n    }\n\n    if (is_need_real_account_for_cashier_modal_visible) {\n        ComponentToLoad = <NeedRealAccountForCashierModal />;\n    }\n\n    if (is_verification_modal_visible) {\n        ComponentToLoad = <VerificationModal />;\n    }\n\n    if (is_verification_submitted) {\n        ComponentToLoad = <VerificationDocumentSubmitted />;\n    }\n\n    if (should_show_one_time_deposit_modal) {\n        ComponentToLoad = <OneTimeDepositModal />;\n    }\n\n    if (should_show_account_success_modal) {\n        ComponentToLoad = <ReadyToVerifyModal />;\n    }\n    if (is_additional_kyc_info_modal_open) {\n        ComponentToLoad = <AdditionalKycInfoModal />;\n    }\n\n    if (is_kyc_information_submitted_modal_open) {\n        ComponentToLoad = <InformationSubmittedModal />;\n    }\n\n    return (\n        <>\n            <RedirectNoticeModal is_logged_in={is_logged_in} is_eu={is_eu_user} portal_id='popup_root' />\n            {ComponentToLoad ? <React.Suspense fallback={<div />}>{ComponentToLoad}</React.Suspense> : null}\n        </>\n    );\n});\n\nexport default AppModals;\n","import AppModals from './app-modals.jsx';\n\nexport default AppModals;\n","import React from 'react';\nimport { PlatformContext } from '@deriv/shared';\n\nconst DERIV_APPSTORE_KEY = 'is_appstore';\n\nconst PlatformContainer = props => {\n    // TODO: set is_appstore based on a flag from BE.\n    const is_appstore_storage = window.localStorage.getItem(DERIV_APPSTORE_KEY) === 'true';\n    const [is_appstore, setIsAppStore] = React.useState(is_appstore_storage);\n\n    const platform_store = {\n        is_appstore,\n        setIsAppStore,\n        DERIV_APPSTORE_KEY,\n    };\n\n    return <PlatformContext.Provider value={platform_store} {...props} />;\n};\n\nexport default PlatformContainer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { urlForLanguage } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport BinaryRoutes from 'App/Components/Routes';\nimport { observer, useStore } from '@deriv/stores';\n\nconst Error = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: UILoader,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst Routes = observer(({ history, location, passthrough }) => {\n    const { client, common } = useStore();\n    const { is_logged_in, is_logging_in } = client;\n    const { error, has_error, setAppRouterHistory, addRouteHistoryItem, setInitialRouteHistoryItem } = common;\n    const initial_route = React.useRef(null);\n    const unlisten_to_change = React.useRef(null);\n\n    React.useEffect(() => {\n        if (!unlisten_to_change.current && !initial_route.current) {\n            initial_route.current = location.pathname;\n        }\n\n        setInitialRouteHistoryItem(history.location);\n\n        unlisten_to_change.current = history.listen((route_to, action) => {\n            if (['PUSH', 'POP'].includes(action)) addRouteHistoryItem({ ...route_to, action });\n        });\n\n        setAppRouterHistory(history);\n\n        return () => {\n            if (typeof unlisten_to_change.current === 'function') {\n                unlisten_to_change.current();\n                unlisten_to_change.current = null;\n                initial_route.current = null;\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const lang = getLanguage();\n    const lang_regex = /[?&]lang=/;\n    const has_lang = lang_regex.test(location.search);\n\n    if (has_error) {\n        return <Error {...error} />;\n    }\n\n    // we need to replace state of history object on every route\n    // to prevent language query parameter from disappering\n    // for non-english languages. Upon visiting with a\n    // non-supported language, the language still\n    // shows up in the URL. This is not in sync\n    // with the default language (EN), so we\n    // will remove it.\n    if ((!has_lang && lang !== 'EN') || (has_lang && lang === 'EN')) {\n        window.history.replaceState({}, document.title, urlForLanguage(lang));\n    }\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n});\n\nRoutes.propTypes = {\n    history: PropTypes.object,\n    location: PropTypes.object,\n    passthrough: PropTypes.object,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(Routes);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div100vhContainer, Toast } from '@deriv/components';\nimport 'Sass/app/_common/components/app-toast-message.scss';\nimport { observer, useStore } from '@deriv/stores';\n\nconst AppToastMessages = observer(() => {\n    const { ui } = useStore();\n    const { toasts, removeToast } = ui;\n    if (toasts.length === 0) return null;\n\n    const top_toasts = toasts.filter(t => !t.is_bottom);\n    const bottom_toasts = toasts.filter(t => t.is_bottom);\n\n    const createToast = toast_config => {\n        const { key, content, ...config } = toast_config;\n        return (\n            <Toast key={key} {...config} onClose={() => removeToast(key)}>\n                {content}\n            </Toast>\n        );\n    };\n\n    const toast_messages = (\n        <Div100vhContainer className='toast-messages' height_offset='15px'>\n            <div className='toast-messages__top'>{top_toasts.map(createToast)}</div>\n            <div className='toast-messages__bottom'>{bottom_toasts.map(createToast)}</div>\n        </Div100vhContainer>\n    );\n\n    return ReactDOM.createPortal(toast_messages, document.getElementById('popup_root'));\n});\n\nexport default AppToastMessages;\n","import React, { useState } from 'react';\nimport { Button, Checkbox, Input } from '@deriv/components';\nimport { getAppId, getDebugServiceWorker, getSocketURL } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useFormik } from 'formik';\nimport './Devtools.scss';\n\nconst EndpointSection = observer(() => {\n    const formik = useFormik({\n        initialValues: {\n            app_id: getAppId(),\n            server: getSocketURL(),\n            is_debug_service_worker_enabled: !!getDebugServiceWorker(),\n        },\n        onSubmit: values => {\n            localStorage.setItem('config.app_id', values.app_id.toString());\n            localStorage.setItem('config.server_url', values.server);\n            localStorage.setItem('debug_service_worker', (values.is_debug_service_worker_enabled ? 1 : 0).toString());\n            sessionStorage.removeItem('config.platform');\n            location.reload();\n        },\n        validate: values => {\n            const errors: Record<string, string> = {};\n\n            if (!values.app_id) {\n                errors.app_id = 'App ID is required.';\n            } else if (!/^\\d+$/.test(values.app_id.toString())) {\n                errors.app_id = 'Please enter a valid app ID.';\n            }\n\n            if (!values.server) {\n                errors.server = 'Server is required.';\n            } else if (!/^[\\w|\\-|.]+$/.test(values.server)) {\n                errors.server = 'Please enter a valid server.';\n            }\n\n            return errors;\n        },\n    });\n\n    return (\n        <div className='devtools__endpoint-container'>\n            <Input\n                type='text'\n                autoComplete='off'\n                maxLength={30}\n                error={formik.touched.server ? formik.errors.server : undefined}\n                label='Server'\n                hint='e.g. frontend.derivws.com'\n                {...formik.getFieldProps('server')}\n            />\n            <Input\n                type='text'\n                autoComplete='off'\n                maxLength={30}\n                error={formik.touched.app_id ? formik.errors.app_id : undefined}\n                label='OAuth App ID'\n                hint={\n                    <React.Fragment>\n                        Register an{' '}\n                        <a href='https://developers.binary.com/applications/' target='_blank' rel='noopener noreferrer'>\n                            app ID\n                        </a>{' '}\n                        to use the above server for logging in.\n                    </React.Fragment>\n                }\n                {...formik.getFieldProps('app_id')}\n            />\n            <Checkbox\n                classNameLabel={'devtools__checkbox-label'}\n                label='Enable Service Worker registration for this URL'\n                {...formik.getFieldProps('is_debug_service_worker_enabled')}\n            />\n            <div className='devtools__endpoint-actions'>\n                <Button\n                    type='submit'\n                    is_disabled={!formik.isValid || !formik.dirty}\n                    text='Submit'\n                    primary\n                    onClick={() => formik.handleSubmit()}\n                />\n                <Button\n                    type='button'\n                    onClick={() => {\n                        localStorage.removeItem('config.app_id');\n                        localStorage.removeItem('config.server_url');\n                        location.reload();\n                    }}\n                    text='Reset to original settings'\n                />\n            </div>\n        </div>\n    );\n});\n\nconst FeatureFlagsSection = observer(() => {\n    const { feature_flags } = useStore();\n\n    if (!feature_flags.data) return null;\n\n    return (\n        <div className='devtools__checkbox-container'>\n            {Object.keys(feature_flags.data).map(flag => {\n                const flag_name = flag as keyof typeof feature_flags.data;\n\n                return (\n                    <Checkbox\n                        key={flag_name}\n                        className='devtools__checkbox'\n                        classNameLabel={'devtools__checkbox-label'}\n                        label={flag_name}\n                        value={feature_flags.data?.[flag_name]}\n                        // @ts-expect-error Checkbox onChange type is not correct and need to be fixed.\n                        onChange={e => feature_flags.update(old => ({ ...old, [flag_name]: e.target.checked }))}\n                    />\n                );\n            })}\n        </div>\n    );\n});\n\nconst Devtools = observer(() => {\n    const [is_devtool_open, setIsDevtoolOpen] = useState(false);\n\n    return (\n        <div>\n            <div className={`devtools__panel devtools__panel${is_devtool_open ? '--open' : '--close'}`}>\n                <div className='devtools__panel-left'>\n                    <p className='devtools__panel-title'>Endpoint</p>\n                    <EndpointSection />\n                </div>\n                <div className='devtools__panel-right'>\n                    <p className='devtools__panel-title'>Feature flags</p>\n                    <FeatureFlagsSection />\n                </div>\n                <button onClick={() => setIsDevtoolOpen(!is_devtool_open)} className='devtools__close-button'>\n                    Close\n                </button>\n            </div>\n            <button onClick={() => setIsDevtoolOpen(!is_devtool_open)} className='devtools__toggle-button'>\n                {`</>`}\n            </button>\n        </div>\n    );\n});\n\n// @ts-expect-error Here we check if the code is running on the production environment,\n// we will return a null component instead of the actual devtools component. Hence the TS error is expected.\nconst ProductionSafeDevtools: typeof Devtools = process.env.NODE_ENV !== 'development' ? () => null : Devtools;\n\nexport default ProductionSafeDevtools;\n","import React from 'react';\nimport { DesktopWrapper } from '@deriv/components';\nimport { useFeatureFlags } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport BinaryBotIFrame from 'Modules/BinaryBotIFrame';\nimport SmartTraderIFrame from 'Modules/SmartTraderIFrame';\nimport ErrorBoundary from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents from './Containers/Layout/app-contents.jsx';\nimport Footer from './Containers/Layout/footer.jsx';\nimport Header from './Containers/Layout/header';\nimport AppModals from './Containers/Modals';\nimport PlatformContainer from './Containers/PlatformContainer/PlatformContainer.jsx';\nimport Routes from './Containers/Routes/routes.jsx';\nimport AppToastMessages from './Containers/app-toast-messages.jsx';\nimport Devtools from './Devtools';\n\nconst AppContent: React.FC<{ passthrough: unknown }> = observer(({ passthrough }) => {\n    const { is_next_wallet_enabled } = useFeatureFlags();\n    const store = useStore();\n\n    return (\n        <PlatformContainer>\n            <Header />\n            <ErrorBoundary root_store={store}>\n                <AppContents>\n                    {/* TODO: [trader-remove-client-base] */}\n                    <Routes passthrough={passthrough} />\n                </AppContents>\n            </ErrorBoundary>\n            <DesktopWrapper>\n                <Footer />\n            </DesktopWrapper>\n            <ErrorBoundary root_store={store}>\n                <AppModals />\n            </ErrorBoundary>\n            <SmartTraderIFrame />\n            <BinaryBotIFrame />\n            <AppToastMessages />\n            {is_next_wallet_enabled && <Devtools />}\n        </PlatformContainer>\n    );\n});\n\nexport default AppContent;\n","import React from 'react';\nimport { APIProvider } from '@deriv/api';\nimport { CashierStore } from '@deriv/cashier';\nimport { CFDStore } from '@deriv/cfd';\nimport {\n    POIProvider,\n    initFormErrorMessages,\n    setSharedCFDText,\n    setUrlLanguage,\n    setWebsocket,\n    useOnLoadTranslation,\n} from '@deriv/shared';\nimport { StoreProvider, ExchangeRatesProvider } from '@deriv/stores';\nimport { getLanguage, initializeTranslations } from '@deriv/translations';\nimport WS from 'Services/ws-methods';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CFD_TEXT } from '../Constants/cfd-text';\nimport { FORM_ERROR_MESSAGES } from '../Constants/form-error-messages';\nimport AppContent from './AppContent';\nimport 'Sass/app.scss';\nimport { Analytics } from '@deriv/analytics';\nimport initHotjar from '../Utils/Hotjar';\n\nconst AppWithoutTranslation = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    const has_base = /^\\/(br_)/.test(l.pathname);\n    const [is_translation_loaded] = useOnLoadTranslation();\n    const initCashierStore = () => {\n        root_store.modules.attachModule('cashier', new CashierStore(root_store, WS));\n        root_store.modules.cashier.general_store.init();\n    };\n    // TODO: investigate the order of cashier store initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(initCashierStore, []);\n    const initCFDStore = () => {\n        root_store.modules.attachModule('cfd', new CFDStore({ root_store, WS }));\n    };\n\n    React.useEffect(initCFDStore, []);\n\n    React.useEffect(() => {\n        const loadSmartchartsStyles = () => {\n            import('@deriv/deriv-charts/dist/smartcharts.css');\n        };\n\n        initializeTranslations();\n        if (process.env.RUDDERSTACK_KEY) {\n            Analytics.initialise({\n                growthbookKey: process.env.GROWTHBOOK_CLIENT_KEY,\n                growthbookDecryptionKey: process.env.GROWTHBOOK_DECRYPTION_KEY,\n                rudderstackKey: process.env.RUDDERSTACK_KEY,\n            });\n        }\n\n        // TODO: [translation-to-shared]: add translation implemnentation in shared\n        setUrlLanguage(getLanguage());\n        initFormErrorMessages(FORM_ERROR_MESSAGES);\n        setSharedCFDText(CFD_TEXT);\n        root_store.common.setPlatform();\n        loadSmartchartsStyles();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        initHotjar(root_store.client);\n    }, []);\n\n    const platform_passthrough = {\n        root_store,\n        WS,\n    };\n\n    setWebsocket(WS);\n\n    React.useEffect(() => {\n        if (!root_store.client.email) {\n            Analytics.reset();\n        }\n    }, [root_store.client.email]);\n\n    return (\n        <>\n            {is_translation_loaded ? (\n                <Router basename={has_base ? `/${base}` : null}>\n                    <StoreProvider store={root_store}>\n                        <APIProvider>\n                            <POIProvider>\n                                <StoreProvider store={root_store}>\n                                    <ExchangeRatesProvider>\n                                        <AppContent passthrough={platform_passthrough} />\n                                    </ExchangeRatesProvider>\n                                </StoreProvider>\n                            </POIProvider>\n                        </APIProvider>\n                    </StoreProvider>\n                </Router>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\n\nAppWithoutTranslation.propTypes = {\n    root_store: PropTypes.object,\n};\nconst App = withTranslation()(AppWithoutTranslation);\n\nexport default App;\n","import { action } from 'mobx';\nimport NetworkMonitorBase from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = store => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore, store.client);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { localize } from '@deriv/translations';\nimport { getPropertyValue } from '@deriv/shared';\n\nexport const getClientAccountType = loginid => {\n    let account_type;\n    if (/^VR/.test(loginid)) account_type = 'virtual';\n    else if (/^MF/.test(loginid)) account_type = 'financial';\n    else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n    return account_type;\n};\n\nconst TypesMapConfig = (() => {\n    let types_map_config;\n\n    const initTypesMap = () => ({\n        default: localize('Real'),\n        financial: localize('Investment'),\n        gaming: localize('Gaming'),\n        virtual: localize('Virtual'),\n    });\n\n    return {\n        get: () => {\n            if (!types_map_config) {\n                types_map_config = initTypesMap();\n            }\n            return types_map_config;\n        },\n    };\n})();\n\nexport const getAccountTitle = loginid => {\n    const types_map = TypesMapConfig.get();\n    return types_map[getClientAccountType(loginid)] || types_map.default;\n};\n\nexport const getAvailableAccount = market_type => {\n    if (market_type === 'all') {\n        return 'all';\n    }\n    return 'financial';\n};\n\nexport const getLandingCompanyValue = ({ loginid, landing_company, isAccountOfType }) => {\n    const key = 'changeable_fields';\n    let landing_company_object;\n\n    if (loginid.financial || isAccountOfType('financial')) {\n        landing_company_object = getPropertyValue(landing_company, 'financial_company');\n    } else if (loginid.real || isAccountOfType('real')) {\n        landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n        // handle accounts that don't have gaming company\n        if (!landing_company_object) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        }\n    } else {\n        const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n        const gaming_company = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n        landing_company_object = financial_company.concat(gaming_company);\n        return landing_company_object;\n    }\n    return (landing_company_object || {})[key];\n};\n","import { CookieStorage } from '@deriv/shared';\n\nexport const getCookieObject = cookie_name => {\n    const cookie_object = new CookieStorage(cookie_name.includes('utm') ? 'utm_data' : cookie_name);\n    return cookie_object;\n};\n\nexport const setDeviceDataCookie = (cookie_name, cookie_value) => {\n    const cookie_object = getCookieObject(cookie_name);\n\n    if (!cookie_object.get(cookie_name)) {\n        cookie_object.set(cookie_name, cookie_value);\n    }\n\n    return cookie_object;\n};\n","import { action, intercept, makeObservable, observable, reaction, toJS, when } from 'mobx';\n\nimport { isEmptyObject, isProduction, Validator } from '@deriv/shared';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                async () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                async () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import Cookies from 'js-cookie';\nimport { action, computed, makeObservable, observable, reaction, runInAction, toJS, when } from 'mobx';\nimport moment from 'moment';\n\nimport {\n    CFD_PLATFORMS,\n    deriv_urls,\n    excludeParamsFromUrlQuery,\n    filterUrlQuery,\n    getPropertyValue,\n    getUrlBinaryBot,\n    getUrlSmartTrader,\n    isCryptocurrency,\n    isDesktopOs,\n    isEmptyObject,\n    isLocal,\n    isProduction,\n    isStaging,\n    isTestLink,\n    LocalStore,\n    redirectToLogin,\n    removeCookies,\n    routes,\n    SessionStore,\n    setCurrencies,\n    State,\n    toMoment,\n    urlForLanguage,\n    getAppId,\n} from '@deriv/shared';\nimport { Analytics } from '@deriv/analytics';\nimport { getLanguage, localize, getRedirectionLanguage } from '@deriv/translations';\n\nimport { requestLogout, WS } from 'Services';\nimport BinarySocketGeneral from 'Services/socket-general';\n\nimport { getAccountTitle, getAvailableAccount, getClientAccountType } from './Helpers/client';\nimport { setDeviceDataCookie } from './Helpers/device';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\nimport BaseStore from './base-store';\n\nimport BinarySocket from '_common/base/socket_base';\nimport * as SocketCache from '_common/base/socket_cache';\nimport { getRegion, isEuCountry, isMultipliersOnly, isOptionsBlocked } from '_common/utility';\n\nconst LANGUAGE_KEY = 'i18n_language';\nconst storage_key = 'client.accounts';\nconst store_name = 'client_store';\nconst eu_shortcode_regex = new RegExp('^(maltainvest|malta|iom)$');\nconst eu_excluded_regex = new RegExp('^mt$');\n\nexport default class ClientStore extends BaseStore {\n    loginid;\n    preferred_language;\n    upgrade_info;\n    email;\n    accounts = {};\n    trading_platform_available_accounts = [];\n    pre_switch_broadcast = false;\n    switched = '';\n    is_switching = false;\n    switch_broadcast = false;\n    initialized_broadcast = false;\n    currencies_list = {};\n    residence_list = [];\n    states_list = [];\n    citizen = '';\n    selected_currency = '';\n    is_populating_account_list = false;\n    is_populating_mt5_account_list = true;\n    is_populating_dxtrade_account_list = true;\n    website_status = {};\n    account_settings = {};\n    account_status = {};\n    device_data = {};\n    is_authorize = false;\n    is_logging_in = false;\n    has_logged_out = false;\n    is_landing_company_loaded = false;\n    is_account_setting_loaded = false;\n    has_enabled_two_fa = false;\n    has_changed_two_fa = false;\n    landing_companies = {};\n\n    // All possible landing companies of user between all\n    standpoint = {\n        iom: false,\n        svg: false,\n        malta: false,\n        maltainvest: false,\n        gaming_company: false,\n        financial_company: false,\n    };\n\n    upgradeable_landing_companies = [];\n    mt5_disabled_signup_types = { real: false, demo: false };\n    mt5_login_list = [];\n    mt5_login_list_error = null;\n    dxtrade_accounts_list = [];\n    ctrader_accounts_list = [];\n    dxtrade_accounts_list_error = null;\n    dxtrade_disabled_signup_types = { real: false, demo: false };\n    statement = [];\n    obj_total_balance = {\n        amount_real: undefined,\n        amount_mt5: undefined,\n        amount_dxtrade: undefined,\n        currency: '',\n    };\n\n    verification_code = {\n        signup: '',\n        reset_password: '',\n        payment_withdraw: '',\n        payment_agent_withdraw: '',\n        trading_platform_mt5_password_reset: '',\n        trading_platform_dxtrade_password_reset: '',\n        request_email: '',\n        social_email_change: '',\n        system_email_change: '',\n    };\n\n    new_email = {\n        system_email_change: '',\n        social_email_change: '',\n    };\n\n    account_limits = {};\n    self_exclusion = {};\n\n    local_currency_config = {\n        currency: '',\n        decimal_places: undefined,\n    };\n    has_cookie_account = false;\n\n    financial_assessment = null;\n\n    mt5_trading_servers = [];\n    dxtrade_trading_servers = [];\n    is_cfd_poi_completed = false;\n\n    cfd_score = 0;\n\n    is_mt5_account_list_updated = false;\n\n    prev_real_account_loginid = '';\n    p2p_advertiser_info = {};\n    prev_account_type = 'demo';\n    external_url_params = {};\n    is_already_attempted = false;\n\n    constructor(root_store) {\n        const local_storage_properties = ['device_data'];\n        super({ root_store, local_storage_properties, store_name });\n\n        makeObservable(this, {\n            loginid: observable,\n            external_url_params: observable,\n            setExternalParams: action.bound,\n            redirectToLegacyPlatform: action.bound,\n            preferred_language: observable,\n            upgrade_info: observable,\n            email: observable,\n            accounts: observable,\n            trading_platform_available_accounts: observable,\n            pre_switch_broadcast: observable,\n            switched: observable,\n            is_switching: observable,\n            switch_broadcast: observable,\n            initialized_broadcast: observable,\n            currencies_list: observable,\n            residence_list: observable,\n            states_list: observable,\n            citizen: observable,\n            selected_currency: observable,\n            is_populating_account_list: observable,\n            is_populating_mt5_account_list: observable,\n            is_populating_dxtrade_account_list: observable,\n            website_status: observable,\n            account_settings: observable,\n            account_status: observable,\n            device_data: observable,\n            is_authorize: observable,\n            is_logging_in: observable,\n            has_logged_out: observable,\n            is_landing_company_loaded: observable,\n            is_account_setting_loaded: observable,\n            has_enabled_two_fa: observable,\n            has_changed_two_fa: observable,\n            landing_companies: observable,\n            standpoint: observable,\n            upgradeable_landing_companies: observable,\n            mt5_disabled_signup_types: observable,\n            mt5_login_list: observable,\n            mt5_login_list_error: observable,\n            dxtrade_accounts_list: observable,\n            ctrader_accounts_list: observable,\n            dxtrade_accounts_list_error: observable,\n            dxtrade_disabled_signup_types: observable,\n            statement: observable,\n            cfd_score: observable,\n            obj_total_balance: observable,\n            verification_code: observable,\n            new_email: observable,\n            account_limits: observable,\n            self_exclusion: observable,\n            local_currency_config: observable,\n            has_cookie_account: observable,\n            financial_assessment: observable,\n            mt5_trading_servers: observable,\n            dxtrade_trading_servers: observable,\n            is_cfd_poi_completed: observable,\n            prev_real_account_loginid: observable,\n            p2p_advertiser_info: observable,\n            prev_account_type: observable,\n            is_already_attempted: observable,\n            balance: computed,\n            account_open_date: computed,\n            is_svg: computed,\n            has_active_real_account: computed,\n            has_maltainvest_account: computed,\n            has_any_real_account: computed,\n            first_switchable_real_loginid: computed,\n            can_change_fiat_currency: computed,\n            legal_allowed_currencies: computed,\n            upgradeable_currencies: computed,\n            current_currency_type: computed,\n            available_crypto_currencies: computed,\n            has_fiat: computed,\n            current_fiat_currency: computed,\n            current_landing_company: computed,\n            account_list: computed,\n            has_real_mt5_login: computed,\n            has_real_dxtrade_login: computed,\n            has_account_error_in_mt5_real_list: computed,\n            has_account_error_in_mt5_demo_list: computed,\n            has_account_error_in_dxtrade_real_list: computed,\n            has_account_error_in_dxtrade_demo_list: computed,\n            active_accounts: computed,\n            all_loginids: computed,\n            account_title: computed,\n            currency: computed,\n            is_crypto: action.bound,\n            default_currency: computed,\n            should_allow_authentication: computed,\n            should_allow_poinc_authentication: computed,\n            is_financial_assessment_incomplete: computed,\n            is_financial_assessment_needed: computed,\n            is_authentication_needed: computed,\n            is_identity_verification_needed: computed,\n            is_poa_expired: computed,\n            real_account_creation_unlock_date: computed,\n            is_tnc_needed: computed,\n            is_social_signup: computed,\n            isEligibleForMoreDemoMt5Svg: action.bound,\n            isEligibleForMoreRealMt5: action.bound,\n            setIsCfdPoiCompleted: action.bound,\n            setCitizen: action.bound,\n            is_mt5_password_not_set: computed,\n            is_dxtrade_password_not_set: computed,\n            is_financial_information_incomplete: computed,\n            is_deposit_lock: computed,\n            is_withdrawal_lock: computed,\n            is_trading_experience_incomplete: computed,\n            authentication_status: computed,\n            social_identity_provider: computed,\n            is_from_restricted_country: computed,\n            is_fully_authenticated: computed,\n            is_pending_authentication: computed,\n            is_financial_account: computed,\n            is_age_verified: computed,\n            landing_company_shortcode: computed,\n            landing_company: computed,\n            is_valid_login: computed,\n            is_logged_in: computed,\n            has_restricted_mt5_account: computed,\n            has_mt5_account_with_rejected_poa: computed,\n            should_restrict_bvi_account_creation: computed,\n            should_restrict_vanuatu_account_creation: computed,\n            should_show_eu_content: computed,\n            should_show_eu_error: computed,\n            is_virtual: computed,\n            is_eu: computed,\n            is_uk: computed,\n            is_brazil: computed,\n            country_standpoint: computed,\n            can_upgrade: computed,\n            can_upgrade_to: computed,\n            virtual_account_loginid: computed,\n            is_single_currency: computed,\n            account_type: computed,\n            is_mt5_allowed: computed,\n            is_dxtrade_allowed: computed,\n            is_bot_allowed: computed,\n            clients_country: computed,\n            is_eu_country: computed,\n            is_options_blocked: computed,\n            is_multipliers_only: computed,\n            is_pending_proof_of_ownership: computed,\n            resetLocalStorageValues: action.bound,\n            getBasicUpgradeInfo: action.bound,\n            setMT5DisabledSignupTypes: action.bound,\n            setCFDDisabledSignupTypes: action.bound,\n            getLimits: action.bound,\n            setPreferredLanguage: action.bound,\n            setCookieAccount: action.bound,\n            setCFDScore: action.bound,\n            updateSelfExclusion: action.bound,\n            responsePayoutCurrencies: action.bound,\n            responseAuthorize: action.bound,\n            setWebsiteStatus: action.bound,\n            accountRealReaction: action.bound,\n            setLoginInformation: action.bound,\n            realAccountSignup: action.bound,\n            setAccountCurrency: action.bound,\n            updateAccountCurrency: action.bound,\n            createCryptoAccount: action.bound,\n            residence: computed,\n            email_address: computed,\n            is_website_status_ready: computed,\n            updateAccountList: action.bound,\n            switchAccount: action.bound,\n            resetVirtualBalance: action.bound,\n            switchEndSignal: action.bound,\n            init: action.bound,\n            resetMt5AccountListPopulation: action.bound,\n            responseWebsiteStatus: action.bound,\n            responseLandingCompany: action.bound,\n            setStandpoint: action.bound,\n            setLoginId: action.bound,\n            setAccounts: action.bound,\n            setSwitched: action.bound,\n            setIsAuthorize: action.bound,\n            setIsLoggingIn: action.bound,\n            setPreSwitchAccount: action.bound,\n            broadcastAccountChange: action.bound,\n            switchAccountHandler: action.bound,\n            registerReactions: action.bound,\n            setBalanceActiveAccount: action.bound,\n            setBalanceOtherAccounts: action.bound,\n            selectCurrency: action.bound,\n            setResidence: action.bound,\n            setEmail: action.bound,\n            setAccountSettings: action.bound,\n            setAccountStatus: action.bound,\n            updateAccountStatus: action.bound,\n            setInitialized: action.bound,\n            cleanUp: action.bound,\n            logout: action.bound,\n            setLogout: action.bound,\n            storeClientAccounts: action.bound,\n            setUserLogin: action.bound,\n            canStoreClientAccounts: action.bound,\n            setVerificationCode: action.bound,\n            setNewEmail: action.bound,\n            setDeviceData: action.bound,\n            getSignupParams: action.bound,\n            onSetResidence: action.bound,\n            onSetCitizen: action.bound,\n            onSignup: action.bound,\n            fetchAccountSettings: action.bound,\n            fetchResidenceList: action.bound,\n            setResidenceList: action.bound,\n            fetchStatesList: action.bound,\n            resetMt5ListPopulatedState: action.bound,\n            updateMt5LoginList: action.bound,\n            responseMT5TradingServers: action.bound,\n            responseMt5LoginList: action.bound,\n            responseDxtradeTradingServers: action.bound,\n            responseTradingPlatformAvailableAccounts: action.bound,\n            responseTradingPlatformAccountsList: action.bound,\n            responseStatement: action.bound,\n            getChangeableFields: action.bound,\n            syncWithLegacyPlatforms: action.bound,\n            is_high_risk: computed,\n            is_low_risk: computed,\n            has_residence: computed,\n            fetchFinancialAssessment: action.bound,\n            setFinancialAndTradingAssessment: action.bound,\n            setTwoFAStatus: action.bound,\n            setTwoFAChangedStatus: action.bound,\n            is_eu_or_multipliers_only: computed,\n            getTwoFAStatus: action.bound,\n            updateMT5Status: action.bound,\n            isEuropeCountry: action.bound,\n            setPrevRealAccountLoginid: action.bound,\n            setP2pAdvertiserInfo: action.bound,\n            setPrevAccountType: action.bound,\n            setIsAlreadyAttempted: action.bound,\n        });\n\n        reaction(\n            () => [\n                this.is_logged_in,\n                this.loginid,\n                this.email,\n                this.landing_company,\n                this.currency,\n                this.residence,\n                this.account_settings,\n                this.preferred_language,\n            ],\n            () => {\n                this.setCookieAccount();\n            }\n        );\n\n        reaction(\n            () => [this.account_settings],\n            () => {\n                const language = getRedirectionLanguage(this.account_settings?.preferred_language);\n                window.history.replaceState({}, document.title, urlForLanguage(language));\n\n                this.setPreferredLanguage(language);\n                LocalStore.set(LANGUAGE_KEY, language);\n            }\n        );\n\n        when(\n            () => !this.is_logged_in && this.root_store.ui && this.root_store.ui.is_real_acc_signup_on,\n            () => this.root_store.ui.closeRealAccountSignup()\n        );\n    }\n\n    get balance() {\n        if (isEmptyObject(this.accounts)) return undefined;\n        return this.accounts[this.loginid] && 'balance' in this.accounts[this.loginid]\n            ? this.accounts[this.loginid].balance.toString()\n            : undefined;\n    }\n\n    get account_open_date() {\n        if (isEmptyObject(this.accounts)) return undefined;\n        return Object.keys(this.accounts[this.loginid]).includes('created_at')\n            ? this.accounts[this.loginid].created_at\n            : undefined;\n    }\n\n    get is_svg() {\n        if (!this.landing_company_shortcode) {\n            return false;\n        }\n        return this.landing_company_shortcode === 'svg' || this.landing_company_shortcode === 'costarica';\n    }\n\n    get has_active_real_account() {\n        return this.active_accounts.some(acc => acc.is_virtual === 0);\n    }\n\n    get has_maltainvest_account() {\n        return this.active_accounts.some(acc => acc.landing_company_shortcode === 'maltainvest');\n    }\n\n    hasAnyRealAccount = () => {\n        return this.account_list.some(acc => acc.is_virtual === 0);\n    };\n\n    get has_any_real_account() {\n        return this.hasAnyRealAccount();\n    }\n\n    get first_switchable_real_loginid() {\n        const result = this.active_accounts.find(\n            acc => acc.is_virtual === 0 && acc.landing_company_shortcode === 'svg'\n        );\n        return result.loginid || undefined;\n    }\n\n    get can_change_fiat_currency() {\n        const has_no_mt5 = !this.has_real_mt5_login;\n        const has_no_dxtrade = !this.has_real_dxtrade_login;\n        const has_no_transaction = this.statement.count === 0 && this.statement.transactions.length === 0;\n        const has_no_deposit_attempt_account_status = !this.account_status?.status?.includes('deposit_attempt');\n        const has_account_criteria =\n            has_no_transaction && has_no_mt5 && has_no_dxtrade && has_no_deposit_attempt_account_status;\n        return !this.is_virtual && has_account_criteria && this.current_currency_type === 'fiat';\n    }\n\n    get legal_allowed_currencies() {\n        const getDefaultAllowedCurrencies = () => {\n            if (this.landing_companies?.gaming_company) {\n                return this.landing_companies?.gaming_company?.legal_allowed_currencies;\n            }\n            if (this.landing_companies?.financial_company) {\n                return this.landing_companies?.financial_company?.legal_allowed_currencies;\n            }\n            return [];\n        };\n\n        if (!this.landing_companies || !this.root_store.ui) {\n            return [];\n        }\n        if (!this.root_store.ui.real_account_signup_target) {\n            return getDefaultAllowedCurrencies();\n        }\n        if (\n            ['set_currency', 'manage'].includes(this.root_store.ui.real_account_signup_target) &&\n            this.current_landing_company\n        ) {\n            return this.current_landing_company.legal_allowed_currencies;\n        }\n        const target = this.root_store.ui.real_account_signup_target === 'maltainvest' ? 'financial' : 'gaming';\n\n        if (this.landing_companies[`${target}_company`]) {\n            return this.landing_companies[`${target}_company`].legal_allowed_currencies;\n        }\n\n        return getDefaultAllowedCurrencies();\n    }\n\n    get upgradeable_currencies() {\n        if (!this.legal_allowed_currencies || !this.website_status.currencies_config) return [];\n        return this.legal_allowed_currencies.map(currency => ({\n            value: currency,\n            ...this.website_status.currencies_config[currency],\n        }));\n    }\n\n    get current_currency_type() {\n        if (this.account_type === 'virtual') return 'virtual';\n        if (\n            this.website_status &&\n            this.website_status.currencies_config &&\n            this.website_status.currencies_config[this.currency]\n        ) {\n            return this.website_status.currencies_config[this.currency].type;\n        }\n\n        return undefined;\n    }\n\n    get available_crypto_currencies() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            acc.push(item.currency);\n            return acc;\n        }, []);\n\n        return this.upgradeable_currencies.filter(acc => !values.includes(acc.value) && acc.type === 'crypto');\n    }\n\n    get has_fiat() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            if (!item.is_virtual && item.landing_company_shortcode === this.landing_company_shortcode) {\n                acc.push(item.currency);\n            }\n            return acc;\n        }, []);\n        return !!this.upgradeable_currencies.filter(acc => values.includes(acc.value) && acc.type === 'fiat').length;\n    }\n\n    get current_fiat_currency() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            if (!item.is_virtual) {\n                acc.push(item.currency);\n            }\n            return acc;\n        }, []);\n\n        return this.has_fiat\n            ? this.upgradeable_currencies.filter(acc => values.includes(acc.value) && acc.type === 'fiat')[0].value\n            : undefined;\n    }\n\n    // return the landing company object that belongs to the current client by matching shortcode\n    // note that it will be undefined for logged out and virtual clients\n    get current_landing_company() {\n        const landing_company =\n            this.landing_companies &&\n            Object.keys(this.landing_companies).find(\n                company => this.landing_companies[company]?.shortcode === this.landing_company_shortcode\n            );\n        return landing_company ? this.landing_companies[landing_company] : undefined;\n    }\n\n    get account_list() {\n        return this.all_loginids.map(id => this.getAccountInfo(id)).filter(account => account);\n    }\n\n    get has_real_mt5_login() {\n        return this.mt5_login_list.some(account => account.account_type === 'real');\n    }\n\n    get has_real_dxtrade_login() {\n        return this.dxtrade_accounts_list.some(account => account.account_type === 'real');\n    }\n\n    get has_real_ctrader_login() {\n        return this.ctrader_accounts_list.some(account => account.account_type === 'real');\n    }\n\n    hasAccountErrorInCFDList = (platform, account_type) => {\n        if (!this.is_logged_in) return false;\n        let list;\n        switch (platform) {\n            case CFD_PLATFORMS.MT5:\n                list = this.mt5_login_list;\n                break;\n            case CFD_PLATFORMS.DXTRADE:\n                list = this.dxtrade_accounts_list;\n                break;\n            default:\n                return false;\n        }\n        return list?.some(account => !!account.has_error && account.account_type === account_type);\n    };\n\n    get has_account_error_in_mt5_real_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.MT5, 'real');\n    }\n\n    get has_account_error_in_mt5_demo_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.MT5, 'demo');\n    }\n\n    get has_account_error_in_dxtrade_real_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.DXTRADE, 'real');\n    }\n\n    get has_account_error_in_dxtrade_demo_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.DXTRADE, 'demo');\n    }\n\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    get all_loginids() {\n        return !isEmptyObject(this.accounts) ? Object.keys(this.accounts) : [];\n    }\n\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n\n        return this.default_currency;\n    }\n\n    is_crypto(currency) {\n        return isCryptocurrency(currency || this.currency);\n    }\n\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            // Fix for edge case when logging out from crypto accounts causes Fiat list to be empty\n            if (this.currencies_list[localize('Fiat')]?.length < 1) return 'USD';\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        }\n\n        return 'USD';\n    }\n\n    get should_allow_authentication() {\n        return this.account_status?.status?.some(\n            status => status === 'allow_document_upload' || status === 'allow_poi_resubmission'\n        );\n    }\n\n    get should_allow_poinc_authentication() {\n        return (\n            this.is_fully_authenticated && this.account_status?.authentication?.needs_verification?.includes('income')\n        );\n    }\n\n    get is_financial_assessment_incomplete() {\n        return this.account_status?.status?.includes('financial_assessment_not_complete');\n    }\n\n    get is_financial_assessment_needed() {\n        return this.account_status?.status?.includes('financial_assessment_notification');\n    }\n\n    get is_poa_expired() {\n        return this.account_status?.status?.includes('poa_expired');\n    }\n\n    get is_authentication_needed() {\n        return !this.is_fully_authenticated && !!this.account_status?.authentication?.needs_verification?.length;\n    }\n\n    get is_identity_verification_needed() {\n        const needs_verification = this.account_status?.authentication?.needs_verification;\n        return needs_verification?.length === 1 && needs_verification?.includes('identity');\n    }\n\n    get real_account_creation_unlock_date() {\n        const { cooling_off_expiration_date } = this.account_settings;\n        return cooling_off_expiration_date;\n    }\n\n    get is_tnc_needed() {\n        if (this.is_virtual) return false;\n        const { client_tnc_status } = this.account_settings || {};\n        const { terms_conditions_version } = this.website_status || {};\n\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== terms_conditions_version;\n    }\n\n    get is_social_signup() {\n        return this.account_status?.status?.includes('social_signup');\n    }\n\n    get is_mt5_password_not_set() {\n        return this.account_status?.status?.includes('mt5_password_not_set');\n    }\n\n    get is_dxtrade_password_not_set() {\n        return this.account_status?.status?.includes('dxtrade_password_not_set');\n    }\n\n    get is_financial_information_incomplete() {\n        return this.account_status?.status?.some(status => status === 'financial_information_not_complete');\n    }\n\n    get is_deposit_lock() {\n        return this.account_status?.status?.some(status_name => status_name === 'deposit_locked');\n    }\n\n    get is_withdrawal_lock() {\n        return this.account_status?.status?.some(status_name => status_name === 'withdrawal_locked');\n    }\n\n    get is_trading_experience_incomplete() {\n        return this.account_status?.status?.some(status => status === 'trading_experience_not_complete');\n    }\n\n    get authentication_status() {\n        const document_status = this.account_status?.authentication?.document?.status;\n        const identity_status = this.account_status?.authentication?.identity?.status;\n        return { document_status, identity_status };\n    }\n\n    get social_identity_provider() {\n        return this.account_status?.social_identity_provider;\n    }\n\n    get is_from_restricted_country() {\n        return this.residence_list.find(item => item.value === this.residence)?.disabled === 'DISABLED';\n    }\n\n    get is_fully_authenticated() {\n        return this.account_status?.status?.some(status => status === 'authenticated');\n    }\n\n    get is_pending_authentication() {\n        return this.account_status?.status?.some(status => status === 'document_under_review');\n    }\n\n    get is_financial_account() {\n        if (!this.landing_companies) return false;\n        return this.account_type === 'financial';\n    }\n\n    get is_age_verified() {\n        return this.account_status?.status?.some(status => status === 'age_verification');\n    }\n\n    get landing_company_shortcode() {\n        if (this.accounts[this.loginid]) {\n            return this.accounts[this.loginid].landing_company_shortcode;\n        }\n        return undefined;\n    }\n\n    get landing_company() {\n        return this.landing_companies;\n    }\n\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MF|MFW|VRTC|VRW|MLT|CR|CRW)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    get is_logged_in() {\n        return !!(\n            !isEmptyObject(this.accounts) &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    get has_restricted_mt5_account() {\n        return !!this.mt5_login_list.filter(mt5_account => mt5_account?.status?.includes('poa_failed')).length;\n    }\n\n    get has_mt5_account_with_rejected_poa() {\n        return !!this.mt5_login_list.filter(mt5_account => mt5_account?.status?.includes('poa_rejected')).length;\n    }\n\n    get should_restrict_bvi_account_creation() {\n        return !!this.mt5_login_list.filter(\n            item => item?.landing_company_short === 'bvi' && item?.status === 'poa_failed'\n        ).length;\n    }\n\n    get should_restrict_vanuatu_account_creation() {\n        return !!this.mt5_login_list.filter(\n            item => item?.landing_company_short === 'vanuatu' && item?.status === 'poa_failed'\n        ).length;\n    }\n\n    get should_show_eu_content() {\n        const is_current_mf = this.landing_company_shortcode === 'maltainvest';\n        return (!this.is_logged_in && this.is_eu_country) || this.is_eu || is_current_mf;\n    }\n\n    get should_show_eu_error() {\n        if (!this.is_landing_company_loaded) {\n            return false;\n        }\n        return this.is_eu && !this.is_low_risk;\n    }\n\n    get is_virtual() {\n        return !isEmptyObject(this.accounts) && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    get is_eu() {\n        if (!this.landing_companies) return false;\n        const { gaming_company, financial_company, mt_gaming_company } = this.landing_companies;\n        const financial_shortcode = financial_company?.shortcode;\n        const gaming_shortcode = gaming_company?.shortcode;\n        const mt_gaming_shortcode = mt_gaming_company?.financial.shortcode || mt_gaming_company?.swap_free.shortcode;\n        const is_current_mf = this.landing_company_shortcode === 'maltainvest';\n        return (\n            is_current_mf || //is_currently logged in mf account via tradershub\n            (financial_shortcode || gaming_shortcode || mt_gaming_shortcode\n                ? (eu_shortcode_regex.test(financial_shortcode) && gaming_shortcode !== 'svg') ||\n                  eu_shortcode_regex.test(gaming_shortcode)\n                : eu_excluded_regex.test(this.residence))\n        );\n    }\n\n    get is_brazil() {\n        return this.clients_country === 'br';\n    }\n\n    get is_uk() {\n        return this.residence === 'gb';\n    }\n\n    get country_standpoint() {\n        const result = {\n            is_united_kingdom: this.is_uk,\n            is_isle_of_man: this.residence === 'im',\n            is_france: this.residence === 'fr',\n            is_belgium: this.residence === 'be',\n            // Other EU countries: Germany, Spain, Italy, Luxembourg and Greece\n            is_other_eu:\n                this.residence === 'de' ||\n                this.residence === 'es' ||\n                this.residence === 'it' ||\n                this.residence === 'lu' ||\n                this.residence === 'gr',\n        };\n\n        result.is_rest_of_eu =\n            this.is_eu && !result.is_uk && !result.is_france && !result.is_belgium && !result.is_other_eu;\n\n        return result;\n    }\n\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    get can_upgrade_to() {\n        return this.upgrade_info && this.upgrade_info.can_upgrade_to;\n    }\n\n    get virtual_account_loginid() {\n        return this.all_loginids.find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    get is_single_currency() {\n        return (\n            Object.keys(this.currencies_list)\n                .map(type => Object.values(this.currencies_list[type]).length)\n                .reduce((acc, cur) => acc + cur, 0) === 1\n        );\n    }\n\n    get account_type() {\n        return getClientAccountType(this.loginid);\n    }\n\n    get is_mt5_allowed() {\n        return this.isMT5Allowed(this.landing_companies);\n    }\n\n    get is_dxtrade_allowed() {\n        return this.isDxtradeAllowed(this.landing_companies);\n    }\n\n    get is_bot_allowed() {\n        return this.isBotAllowed();\n    }\n\n    setExternalParams = params => {\n        this.external_url_params = params;\n    };\n\n    redirectToLegacyPlatform = () => {\n        const { url, should_redirect } = this.external_url_params;\n        if (should_redirect) {\n            window.location.replace(url);\n        }\n    };\n\n    getIsMarketTypeMatching = (account, market_type) => {\n        if (market_type === 'synthetic') {\n            return account.market_type === market_type || account.market_type === 'gaming';\n        } else if (market_type === 'all') {\n            return account.market_type === 'all';\n        }\n        return account.market_type === 'financial';\n    };\n\n    isEligibleForMoreDemoMt5Svg(market_type) {\n        const is_synthetic = market_type === 'synthetic';\n        const available_account = getAvailableAccount(market_type);\n        const existing_demo_accounts = this.mt5_login_list.filter(\n            account => account.account_type === 'demo' && this.getIsMarketTypeMatching(account, market_type)\n        );\n        const has_matching_account = this.trading_platform_available_accounts.some(account => {\n            return (is_synthetic ? 'gaming' : available_account) === account.market_type && account.shortcode === 'svg';\n        });\n        const has_no_svg_account = existing_demo_accounts.every(account => {\n            return !(account.landing_company_short === 'svg');\n        });\n\n        return has_matching_account && has_no_svg_account;\n    }\n\n    isEligibleForMoreRealMt5(market_type) {\n        const is_synthetic = market_type === 'synthetic';\n        const available_account = getAvailableAccount(market_type);\n        const existing_real_accounts = this.mt5_login_list.filter(\n            account => account.account_type === 'real' && this.getIsMarketTypeMatching(account, market_type)\n        );\n        const available_real_accounts_shortcodes = this.trading_platform_available_accounts\n            .filter(\n                account =>\n                    (is_synthetic ? 'gaming' : available_account) === account.market_type &&\n                    account.shortcode !== 'maltainvest'\n            )\n            .map(account => account.shortcode);\n        const has_no_matching_accounts = available_real_accounts_shortcodes.every(shortcode => {\n            if (market_type === 'all') {\n                // as Swapfree only have SVG account for now we need to check if there is any real svg account available\n                return existing_real_accounts.some(account => account.landing_company_short === shortcode);\n            }\n            return existing_real_accounts.some(account => account.landing_company_short === shortcode);\n        });\n\n        return !has_no_matching_accounts;\n    }\n\n    isMT5Allowed = landing_companies => {\n        // default allowing mt5 to true before landing_companies gets populated\n        // since most clients are allowed to use mt5\n        if (!landing_companies || !Object.keys(landing_companies).length) return true;\n\n        if (!this.mt5_login_list.some(acc => acc.market_type === 'synthetic')) {\n            if (this.country_standpoint.is_belgium || this.country_standpoint.is_france) return false;\n        }\n\n        return 'mt_financial_company' in landing_companies || 'mt_gaming_company' in landing_companies;\n    };\n\n    isDxtradeAllowed = landing_companies => {\n        // Stop showing DerivX for non-logged in EU users\n        if (\n            (!this.is_logged_in && this.is_eu_country) ||\n            (this.is_logged_in && this.root_store.traders_hub.show_eu_related_content)\n        )\n            return false;\n\n        if (!this.website_status?.clients_country || !landing_companies || !Object.keys(landing_companies).length)\n            return true;\n\n        // TODO: Remove two first conditions after real released\n        return (\n            'dxtrade_financial_company' in landing_companies ||\n            'dxtrade_gaming_company' in landing_companies ||\n            'dxtrade_all_company' in landing_companies ||\n            (!this.is_logged_in && !this.is_eu && !this.is_eu_country)\n        );\n    };\n\n    isBotAllowed = () => {\n        // Stop showing Bot, DBot, DSmartTrader for logged out EU IPs\n        if (!this.is_logged_in && this.is_eu_country) return false;\n        const is_mf = this.landing_company_shortcode === 'maltainvest';\n        return this.is_virtual ? this.is_eu_or_multipliers_only : !is_mf && !this.is_options_blocked;\n    };\n\n    get is_eu_or_multipliers_only() {\n        // Check whether account is multipliers only and if the account is from eu countries\n        return !this.is_multipliers_only ? !isEuCountry(this.residence) : !this.is_multipliers_only;\n    }\n\n    get clients_country() {\n        return this.website_status?.clients_country;\n    }\n\n    get is_eu_country() {\n        const country = this.website_status.clients_country;\n        if (country) return isEuCountry(country);\n        return false;\n    }\n\n    isEuropeCountry() {\n        return this.is_eu_country || this.is_eu;\n    }\n\n    get is_options_blocked() {\n        return isOptionsBlocked(this.residence);\n    }\n\n    get is_multipliers_only() {\n        return isMultipliersOnly(this.residence);\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.syncWithLegacyPlatforms(loginid, toJS(this.accounts));\n        this.loginid = loginid;\n    }\n\n    setIsAuthorize(value) {\n        this.is_authorize = value;\n    }\n\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = [\n            ...new Set(State.getResponse('authorize.upgradeable_landing_companies')),\n        ];\n        let can_open_multi = false;\n        let type, can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi =\n                upgradeable_landing_companies.indexOf(this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) =>\n                landing_companies.find(\n                    landing_company =>\n                        landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                        upgradeable_landing_companies.indexOf(landing_company) !== -1\n                );\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    setMT5DisabledSignupTypes(disabled_types_obj) {\n        const current_list = this.mt5_disabled_signup_types;\n        this.mt5_disabled_signup_types = { ...current_list, ...disabled_types_obj };\n    }\n\n    setCFDDisabledSignupTypes(platform, disabled_types_obj) {\n        if (platform === CFD_PLATFORMS.DXTRADE) {\n            const current_list = this.dxtrade_disabled_signup_types;\n            this.dxtrade_disabled_signup_types = { current_list, ...disabled_types_obj };\n        }\n    }\n\n    getLimits() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getLimits().then(data => {\n                runInAction(() => {\n                    if (data.error) {\n                        this.account_limits = {\n                            api_initial_load_error: data.error.message,\n                        };\n                        resolve(data);\n                    } else {\n                        this.account_limits = {\n                            ...data.get_limits,\n                            is_loading: false,\n                        };\n                        resolve(data);\n                    }\n                });\n            });\n        });\n    }\n\n    setPreferredLanguage = lang => {\n        this.preferred_language = lang;\n        LocalStore.setObject(LANGUAGE_KEY, lang);\n    };\n\n    setCookieAccount() {\n        const domain = /deriv\\.(com|me)/.test(window.location.hostname) ? deriv_urls.DERIV_HOST_NAME : 'binary.sx';\n\n        // eslint-disable-next-line max-len\n        const {\n            loginid,\n            email,\n            landing_company_shortcode,\n            currency,\n            residence,\n            account_settings,\n            preferred_language,\n            user_id,\n        } = this;\n\n        const { first_name, last_name, name } = account_settings;\n        if (loginid && email) {\n            const client_information = {\n                loginid,\n                email,\n                landing_company_shortcode,\n                currency,\n                residence,\n                first_name,\n                last_name,\n                name,\n                preferred_language,\n                user_id,\n            };\n            Cookies.set('region', getRegion(landing_company_shortcode, residence), { domain });\n            Cookies.set('client_information', client_information, { domain });\n            // need to find other way to get the boolean value and set this cookie since `this.is_p2p_enabled` is deprecated and we can't use hooks here\n            Cookies.set('is_p2p_disabled', !this.is_p2p_enabled, { domain });\n\n            this.has_cookie_account = true;\n        } else {\n            removeCookies('region', 'client_information', 'is_p2p_disabled');\n            this.has_cookie_account = false;\n        }\n    }\n\n    // CFD score is the computed points based on the CFD related questions that the user answers in trading-assessment.\n    setCFDScore(score) {\n        this.cfd_score = score;\n    }\n\n    getSelfExclusion() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getSelfExclusion().then(data => {\n                runInAction(() => {\n                    if (data.get_self_exclusion) {\n                        this.self_exclusion = data.get_self_exclusion;\n                    } else {\n                        this.self_exclusion = false;\n                    }\n                    resolve(data);\n                });\n            });\n        });\n    }\n    updateSelfExclusion(values) {\n        return new Promise(resolve => {\n            WS.authorized.storage.setSelfExclusion(values).then(data => {\n                if (!data.error) {\n                    this.getSelfExclusion();\n                }\n                resolve(data);\n            });\n        });\n    }\n\n    responsePayoutCurrencies(response) {\n        const list = response?.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(Array.isArray(list) ? list : []);\n        this.selectCurrency('');\n    }\n\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email = response.authorize.email;\n        this.accounts[this.loginid].currency = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.accounts[this.loginid].country = response.country;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id = response.authorize.user_id;\n        localStorage.setItem('active_user_id', this.user_id);\n        this.upgradeable_landing_companies = [...new Set(response.authorize.upgradeable_landing_companies)];\n        this.local_currency_config.currency = Object.keys(response.authorize.local_currencies)[0];\n\n        // delete all notifications key when set new account except notifications for this account\n        // need this because when the user switchs accounts we don't use logout\n        const notification_messages = LocalStore.getObject('notification_messages');\n        const messages = notification_messages[this.loginid] ?? [];\n        LocalStore.setObject('notification_messages', {\n            [this.loginid]: messages,\n        });\n\n        // For residences without local currency (e.g. ax)\n        const default_fractional_digits = 2;\n        this.local_currency_config.decimal_places = isEmptyObject(response.authorize.local_currencies)\n            ? default_fractional_digits\n            : +response.authorize.local_currencies[this.local_currency_config.currency].fractional_digits;\n    }\n\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        this.responseWebsiteStatus(response);\n        setCurrencies(this.website_status);\n\n        // TODO: remove the below lines after full smartcharts v2 launch.\n        const domain = /deriv\\.(com|me)/.test(window.location.hostname)\n            ? deriv_urls.DERIV_HOST_NAME\n            : window.location.hostname;\n        const { clients_country } = this.website_status;\n\n        const options = {\n            domain,\n            expires: 7,\n        };\n\n        try {\n            const cookie = Cookies.get('website_status') ? JSON.parse(Cookies.get('website_status')) : {};\n            cookie.clients_country = clients_country;\n            Cookies.set('website_status', cookie, options);\n        } catch (e) {\n            Cookies.set('website_status', { clients_country }, options);\n        }\n    }\n\n    async accountRealReaction(response) {\n        return new Promise(resolve => {\n            let client_accounts;\n            const has_client_accounts = !!LocalStore.get(storage_key);\n\n            runInAction(() => {\n                this.is_populating_account_list = true;\n            });\n\n            if (this.is_logged_in && !has_client_accounts) {\n                localStorage.setItem(storage_key, JSON.stringify(this.accounts));\n                LocalStore.set(storage_key, JSON.stringify(this.accounts));\n                this.syncWithLegacyPlatforms(client_id, this.accounts);\n            }\n\n            try {\n                client_accounts = JSON.parse(LocalStore.get(storage_key));\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error('JSON parse failed, invalid value (client.accounts): ', error);\n            }\n\n            const { oauth_token, client_id } = response.new_account_real ?? response.new_account_maltainvest;\n            BinarySocket.authorize(oauth_token)\n                .then(authorize_response => {\n                    const new_data = {};\n                    new_data.token = oauth_token;\n                    new_data.residence = authorize_response.authorize.country;\n                    new_data.currency = authorize_response.authorize.currency;\n                    new_data.is_virtual = authorize_response.authorize.is_virtual;\n                    new_data.landing_company_name = authorize_response.authorize.landing_company_fullname;\n                    new_data.landing_company_shortcode = authorize_response.authorize.landing_company_name;\n                    runInAction(() => (client_accounts[client_id] = new_data));\n                    this.setLoginInformation(client_accounts, client_id);\n                    WS.authorized.storage.getSettings().then(get_settings_response => {\n                        this.setAccountSettings(get_settings_response.get_settings);\n                        resolve();\n                    });\n                    this.syncWithLegacyPlatforms(client_id, client_accounts);\n                })\n                .catch(error => {\n                    // eslint-disable-next-line no-console\n                    console.error('Something went wrong while registering a real account: ', error);\n                });\n        });\n    }\n\n    setLoginInformation(client_accounts, client_id) {\n        this.setAccounts(client_accounts);\n        localStorage.setItem(storage_key, JSON.stringify(client_accounts));\n        LocalStore.set(storage_key, JSON.stringify(client_accounts));\n        this.is_populating_account_list = false;\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.setSwitched(client_id);\n        this.syncWithLegacyPlatforms(client_id, client_accounts);\n    }\n\n    async realAccountSignup(form_values) {\n        const DEFAULT_CRYPTO_ACCOUNT_CURRENCY = 'BTC';\n        const is_maltainvest_account = this.root_store.ui.real_account_signup_target === 'maltainvest';\n        const is_samoa_account = this.root_store.ui.real_account_signup_target === 'samoa';\n        let currency = '';\n        form_values.residence = this.residence;\n        if (is_maltainvest_account) {\n            currency = form_values.currency;\n        }\n        this.root_store.ui.setRealAccountSignupParams(form_values);\n        const { document_number, document_type, document_additional, ...required_form_values } = form_values;\n        required_form_values.citizen = form_values?.citizen || this.account_settings?.citizen || this.residence;\n\n        const response = is_maltainvest_account\n            ? await WS.newAccountRealMaltaInvest(required_form_values)\n            : await WS.newAccountReal(required_form_values);\n\n        if (!response.error) {\n            await this.accountRealReaction(response);\n            if (is_samoa_account) {\n                await this.setAccountCurrency(DEFAULT_CRYPTO_ACCOUNT_CURRENCY);\n            }\n            localStorage.removeItem('real_account_signup_wizard');\n            await this.root_store.gtm.pushDataLayer({ event: 'real_signup' });\n\n            return Promise.resolve({\n                ...response,\n                ...(is_maltainvest_account\n                    ? {\n                          new_account_maltainvest: {\n                              ...response.new_account_maltainvest,\n                              currency,\n                          },\n                      }\n                    : {}),\n                ...(is_samoa_account\n                    ? {\n                          new_account_samoa: {\n                              currency,\n                          },\n                      }\n                    : {}),\n            });\n        }\n        return Promise.reject(response.error);\n    }\n\n    async setAccountCurrency(currency) {\n        const response = await WS.setAccountCurrency(currency, {\n            previous_currency: this.currency,\n        });\n        if (!response.error) {\n            await this.updateAccountCurrency(currency);\n            return Promise.resolve(response);\n        }\n        return Promise.reject(response.error);\n    }\n\n    async updateAccountCurrency(currency, is_set_storage = true) {\n        runInAction(() => {\n            const new_account = { ...this.accounts[this.loginid] };\n            new_account.currency = currency;\n            if (!('balance' in new_account)) new_account.balance = 0;\n            this.accounts[this.loginid] = new_account;\n        });\n        if (is_set_storage) {\n            localStorage.setItem(storage_key, JSON.stringify(this.accounts));\n            LocalStore.setObject(storage_key, JSON.parse(JSON.stringify(this.accounts)));\n        }\n        this.selectCurrency(currency);\n        this.root_store.notifications.removeNotificationMessage({\n            key: 'currency',\n        });\n        this.root_store.notifications.removeNotificationByKey({\n            key: 'currency',\n        });\n        await this.init();\n    }\n\n    async createCryptoAccount(currency) {\n        const residence = this.residence;\n        const { date_of_birth, first_name, last_name } = this.account_settings;\n        const data = {\n            residence,\n            currency,\n            first_name,\n            last_name,\n            date_of_birth: toMoment(date_of_birth).format('YYYY-MM-DD'),\n        };\n\n        const response = await WS.newAccountReal(data);\n        if (!response.error) {\n            await this.accountRealReaction(response);\n            return Promise.resolve(response);\n        }\n        return Promise.reject(response.error);\n    }\n\n    get residence() {\n        if (this.is_logged_in) {\n            return this.account_settings?.country_code ?? '';\n        }\n        return '';\n    }\n\n    get email_address() {\n        if (this.accounts && this.accounts[this.loginid]) {\n            return this.accounts[this.loginid].email;\n        }\n\n        return '';\n    }\n\n    get is_website_status_ready() {\n        return this.website_status && !BinarySocket.getAvailability().is_down;\n    }\n\n    isEuCountrySelected = selected_country => {\n        if (selected_country) return isEuCountry(selected_country);\n        return false;\n    };\n\n    isAccountOfType = type => {\n        const client_account_type = getClientAccountType(this.loginid);\n\n        return (\n            ((type === 'virtual' && client_account_type === 'virtual') ||\n                (type === 'real' && client_account_type !== 'virtual') ||\n                type === client_account_type) &&\n            !this.isDisabled()\n        );\n    };\n\n    isAccountOfTypeDisabled = type => {\n        const filtered_list = this.account_list.filter(acc => getClientAccountType(acc.loginid) === type);\n        return filtered_list.length > 0 && filtered_list.every(acc => acc.is_disabled);\n    };\n\n    shouldCompleteTax = () => {\n        if (!this.isAccountOfType('financial')) return false;\n\n        return !/crs_tin_information/.test((this.account_status || {})?.status);\n    };\n\n    updateAccountList(account_list) {\n        account_list.forEach(account => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach(param => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    async switchAccount(loginid) {\n        if (!loginid) return;\n\n        this.setPreSwitchAccount(true);\n        this.setIsLoggingIn(true);\n        this.root_store.notifications.removeNotifications(true);\n        this.root_store.notifications.removeTradeNotifications();\n        this.root_store.notifications.removeAllNotificationMessages(true);\n        if (!this.is_virtual && /VRTC|VRW/.test(loginid)) {\n            this.setPrevRealAccountLoginid(this.loginid);\n        }\n        this.setSwitched(loginid);\n        this.responsePayoutCurrencies(await WS.authorized.payoutCurrencies());\n    }\n\n    async resetVirtualBalance() {\n        this.root_store.notifications.removeNotificationByKey({ key: 'reset_virtual_balance' });\n        this.root_store.notifications.removeNotificationMessage({\n            key: 'reset_virtual_balance',\n            should_show_again: true,\n        });\n        await WS.authorized.topupVirtual();\n    }\n\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     */\n    async init(login_new_user) {\n        // delete walletsOnbaording key after page refresh\n        /** will be removed later when header for the wallets is created) */\n        localStorage.removeItem('walletsOnboarding');\n\n        const search = SessionStore.get('signup_query_param') || window.location.search;\n        const search_params = new URLSearchParams(search);\n        const redirect_url = search_params?.get('redirect_url');\n        const code_param = search_params?.get('code');\n        const action_param = search_params?.get('action');\n        const loginid_param = search_params?.get('loginid');\n        const unused_params = [\n            'type',\n            'acp',\n            'label',\n            'server',\n            'interface',\n            'cid',\n            'age',\n            'utm_source',\n            'first_name',\n            'second_name',\n            'email',\n            'phone',\n            '_filteredParams',\n        ];\n\n        const authorize_response = await this.setUserLogin(login_new_user);\n\n        if (action_param === 'signup') {\n            this.root_store.ui.setIsNewAccount();\n        }\n\n        if (search) {\n            if (code_param && action_param) this.setVerificationCode(code_param, action_param);\n            document.addEventListener('DOMContentLoaded', () => {\n                setTimeout(() => {\n                    // timeout is needed to get the token (code) from the URL before we hide it from the URL\n                    // and from LiveChat that gets the URL from Window, particularly when initialized via HTML script on mobile\n                    history.replaceState(null, null, window.location.search.replace(/&?code=[^&]*/i, ''));\n                }, 0);\n            });\n        }\n\n        this.setDeviceData();\n\n        // On case of invalid token, no need to continue with additional api calls.\n        if (authorize_response?.error) {\n            await this.logout();\n            this.root_store.common.setError(true, {\n                header: authorize_response.error.message,\n                message: localize('Please Log in'),\n                should_show_refresh: false,\n                redirect_label: localize('Log in'),\n                redirectOnClick: () => redirectToLogin(false, getLanguage()),\n            });\n            this.setIsLoggingIn(false);\n            this.setInitialized(false);\n            this.setSwitched('');\n            return false;\n        }\n\n        if (action_param === 'payment_withdraw' && loginid_param) this.setLoginId(loginid_param);\n        else this.setLoginId(LocalStore.get('active_loginid'));\n        this.user_id = LocalStore.get('active_user_id');\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n\n                // Client comes back from oauth and logs in\n                Analytics.setAttributes({\n                    app_id: getAppId(),\n                    account_type: this.loginid.substring(0, 2),\n                });\n                Analytics?.identifyEvent();\n                const current_page = window.location.hostname + window.location.pathname;\n                Analytics?.pageView(current_page);\n\n                await this.root_store.gtm.pushDataLayer({\n                    event: 'login',\n                });\n            } else {\n                // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.authorize(client.token);\n            }\n            if (redirect_url) {\n                const redirect_route = routes[redirect_url].length > 1 ? routes[redirect_url] : '';\n                const has_action = ['payment_agent_withdraw', 'payment_withdraw', 'reset_password'].includes(\n                    action_param\n                );\n\n                if (has_action) {\n                    const query_string = filterUrlQuery(search, ['platform', 'code', 'action']);\n                    if ([routes.cashier_withdrawal, routes.cashier_pa].includes(redirect_route)) {\n                        // Set redirect path for cashier withdrawal and payment agent withdrawal (after getting PTA redirect_url)\n                        window.location.replace(`/redirect?${query_string}`);\n                    } else {\n                        window.location.replace(`${redirect_route}/redirect?${query_string}`);\n                    }\n                } else {\n                    window.location.replace(`${redirect_route}/?${filterUrlQuery(search, ['platform'])}`);\n                }\n            }\n            runInAction(() => {\n                this.is_populating_account_list = false;\n            });\n            const language = getRedirectionLanguage(authorize_response.authorize.preferred_language);\n            const stored_language = LocalStore.get(LANGUAGE_KEY);\n            if (language !== 'EN' && stored_language && language !== stored_language) {\n                window.history.replaceState({}, document.title, urlForLanguage(language));\n                await this.root_store.common.changeSelectedLanguage(language);\n            }\n            if (this.citizen) {\n                await this.onSetCitizen(this.citizen);\n            }\n            if (!this.is_virtual) {\n                this.setPrevRealAccountLoginid(this.loginid);\n            }\n            const no_cr_account = this.active_accounts.some(acc => acc.landing_company_shortcode === 'svg');\n\n            if (!no_cr_account && this.is_low_risk) {\n                this.switchAccount(this.virtual_account_loginid);\n            }\n        }\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.authorized.payoutCurrencies());\n        if (this.is_logged_in) {\n            await WS.mt5LoginList().then(this.responseMt5LoginList);\n            WS.tradingServers(CFD_PLATFORMS.MT5).then(this.responseMT5TradingServers);\n\n            WS.tradingPlatformAvailableAccounts(CFD_PLATFORMS.MT5).then(this.responseTradingPlatformAvailableAccounts);\n            WS.tradingPlatformAccountsList(CFD_PLATFORMS.DXTRADE).then(this.responseTradingPlatformAccountsList);\n            WS.tradingPlatformAccountsList(CFD_PLATFORMS.CTRADER).then(this.responseTradingPlatformAccountsList);\n            WS.tradingServers(CFD_PLATFORMS.DXTRADE).then(this.responseDxtradeTradingServers);\n\n            this.responseStatement(\n                await BinarySocket.send({\n                    statement: 1,\n                })\n            );\n            if (Object.keys(this.account_settings).length === 0) {\n                this.setAccountSettings((await WS.authorized.cache.getSettings()).get_settings);\n            }\n\n            if (this.account_settings) this.setPreferredLanguage(this.account_settings.preferred_language);\n            this.loginid !== 'null' && Analytics.setAttributes({ account_type: this.loginid.substring(0, 2) });\n            await this.fetchResidenceList();\n            await this.getTwoFAStatus();\n            if (this.account_settings && !this.account_settings.residence) {\n                this.root_store.ui.toggleSetResidenceModal(true);\n            }\n            if (this.residence) {\n                await WS.authorized.cache.landingCompany(this.residence).then(this.responseLandingCompany);\n                await this.fetchStatesList();\n            }\n            if (!this.is_virtual) await this.getLimits();\n\n            await WS.p2pAdvertiserInfo().then(this.setP2pAdvertiserInfo);\n        } else {\n            this.resetMt5AccountListPopulation();\n        }\n        this.responseWebsiteStatus(await WS.wait('website_status'));\n\n        this.registerReactions();\n        this.setIsLoggingIn(false);\n        this.setInitialized(true);\n\n        // delete search params if it's signup when signin completed\n        if (action_param === 'signup') {\n            const filteredQuery = filterUrlQuery(search, ['lang']);\n            history.replaceState(\n                null,\n                null,\n                window.location.href.replace(`${search}`, filteredQuery === '' ? '' : `?${filteredQuery}`)\n            );\n        }\n\n        history.replaceState(\n            null,\n            null,\n            window.location.href.replace(`${search}`, excludeParamsFromUrlQuery(search, unused_params))\n        );\n\n        return true;\n    }\n\n    resetMt5AccountListPopulation() {\n        this.is_populating_mt5_account_list = false;\n    }\n\n    responseWebsiteStatus(response) {\n        this.website_status = response.website_status;\n    }\n\n    responseLandingCompany(response) {\n        this.landing_companies = response.landing_company;\n        this.is_landing_company_loaded = true;\n        this.setStandpoint(this.landing_companies);\n    }\n\n    setP2pAdvertiserInfo(response) {\n        this.p2p_advertiser_info = response.p2p_advertiser_info;\n    }\n\n    setStandpoint(landing_companies) {\n        if (!landing_companies) return;\n        const { gaming_company, financial_company } = landing_companies;\n        if (gaming_company?.shortcode) {\n            this.standpoint = {\n                ...this.standpoint,\n                [gaming_company.shortcode]: !!gaming_company?.shortcode,\n                gaming_company: gaming_company?.shortcode ?? false,\n            };\n        }\n        if (financial_company?.shortcode) {\n            this.standpoint = {\n                ...this.standpoint,\n                [financial_company.shortcode]: !!financial_company?.shortcode,\n                financial_company: financial_company?.shortcode ?? false,\n            };\n        }\n    }\n\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    setIsCfdPoiCompleted(is_completed) {\n        this.is_cfd_poi_completed = is_completed;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account = this.getAccount(loginid);\n        const currency = account.currency;\n        const is_disabled = account.is_disabled;\n        const is_virtual = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : this.account_title;\n\n        return {\n            loginid,\n            is_disabled,\n            is_virtual,\n            icon: account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    setIsLoggingIn(bool) {\n        this.is_logging_in = bool;\n    }\n\n    setPreSwitchAccount(is_pre_switch) {\n        this.pre_switch_broadcast = is_pre_switch;\n    }\n\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    broadcastAccountChangeAfterAuthorize() {\n        return BinarySocket.wait('authorize').then(() => {\n            this.broadcastAccountChange();\n        });\n    }\n\n    handleNotFoundLoginId() {\n        // Logout if the switched_account doesn't belong to any loginid.\n        this.root_store.notifications.addNotificationMessage({\n            message: localize('Could not switch to default account.'),\n            type: 'danger',\n        });\n        // request a logout\n        this.logout();\n    }\n\n    isUnableToFindLoginId() {\n        return !this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid;\n    }\n\n    async switchAccountHandler() {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched)?.token) {\n            if (this.isUnableToFindLoginId()) {\n                this.handleNotFoundLoginId();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.notifications.addNotificationMessage({\n                message: localize('Switching to default account.'),\n                type: 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n\n        runInAction(() => (this.is_switching = true));\n        this.setIsAuthorize(false);\n        const from_login_id = this.loginid;\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n\n        // if real to virtual --> switch to blue\n        // if virtual to real --> switch to green\n        // else keep the existing connection\n        const should_switch_socket_connection = this.is_virtual || /VRTC|VRW/.test(from_login_id);\n\n        if (should_switch_socket_connection) {\n            BinarySocket.closeAndOpenNewConnection();\n            await BinarySocket.wait('authorize');\n        } else {\n            await WS.forgetAll('balance');\n            await BinarySocket.authorize(this.getToken());\n        }\n        if (this.root_store.common.has_error) this.root_store.common.setError(false, null);\n        sessionStorage.setItem('active_tab', '1');\n\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n\n        await this.init();\n\n        // broadcastAccountChange is already called after new connection is authorized\n        if (!should_switch_socket_connection) this.broadcastAccountChange();\n\n        if (!this.is_virtual) this.getLimits();\n\n        runInAction(() => (this.is_switching = false));\n    }\n\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            () => {\n                // Remove real account notifications upon switching to virtual\n                if (this.accounts[this.switched]?.is_virtual) {\n                    this.root_store.notifications.removeNotifications(true);\n                    this.root_store.notifications.removeAllNotificationMessages();\n                }\n\n                this.switchAccountHandler();\n            }\n        );\n    }\n\n    setBalanceActiveAccount(obj_balance) {\n        if (this.accounts[obj_balance?.loginid] && obj_balance.loginid === this.loginid) {\n            this.accounts[obj_balance.loginid].balance = obj_balance.balance;\n            if (this.accounts[obj_balance.loginid].is_virtual) {\n                this.root_store.notifications.resetVirtualBalanceNotification(obj_balance.loginid);\n            }\n\n            //temporary workaround to sync this.loginid with selected wallet loginid\n            if (window.location.pathname.includes(routes.wallets_cashier)) {\n                this.resetLocalStorageValues(localStorage.getItem('active_loginid') ?? this.loginid);\n                return;\n            }\n\n            this.resetLocalStorageValues(this.loginid);\n        }\n    }\n\n    // This callback is used for balance: all\n    // Balance: all is very slow\n    // --> so we keep a separate balance subscription for the active account\n    setBalanceOtherAccounts(obj_balance) {\n        // Balance subscription response received when mt5 transfer is in progress should be ignored.\n        // After mt5 transfer is done, `balanceAll` is requested along with `mt5LoginList` in order to update the correct balance.\n        if (this.root_store.modules?.cashier?.account_transfer?.is_mt5_transfer_in_progress) return;\n\n        // Only the first response of balance:all will include all accounts\n        // subsequent requests will be single account balance updates\n        if (this.accounts[obj_balance?.loginid] && !obj_balance.accounts && obj_balance.loginid !== this.loginid) {\n            this.accounts[obj_balance.loginid].balance = obj_balance.balance;\n        }\n\n        if (this.accounts[obj_balance?.loginid] && obj_balance.accounts) {\n            Object.keys(obj_balance.accounts).forEach(account_id => {\n                const is_active_account_id = account_id === this.loginid;\n\n                if (!is_active_account_id && this.accounts[account_id]) {\n                    this.accounts[account_id].balance = +obj_balance.accounts[account_id].balance;\n                }\n            });\n        }\n\n        if (obj_balance?.total) {\n            const total_real = getPropertyValue(obj_balance, ['total', 'deriv']);\n            const total_mt5 = getPropertyValue(obj_balance, ['total', CFD_PLATFORMS.MT5]);\n            const total_dxtrade = getPropertyValue(obj_balance, ['total', CFD_PLATFORMS.DXTRADE]);\n            // in API streaming responses MT5 balance is not re-sent, so we need to reuse the first mt5 total sent\n            const has_mt5 = !isEmptyObject(total_mt5);\n            const has_dxtrade = !isEmptyObject(total_dxtrade);\n            this.obj_total_balance = {\n                amount_real: +total_real.amount,\n                amount_mt5: has_mt5 ? +total_mt5.amount : this.obj_total_balance.amount_mt5,\n                amount_dxtrade: has_dxtrade ? +total_dxtrade.amount : this.obj_total_balance.amount_dxtrade,\n                currency: total_real.currency,\n            };\n        }\n    }\n\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    setResidence(residence) {\n        if (this.loginid) {\n            this.accounts[this.loginid].residence = residence;\n        }\n    }\n\n    setCitizen(citizen) {\n        this.citizen = citizen;\n    }\n\n    setEmail(email) {\n        if (this.loginid) {\n            this.accounts[this.loginid].email = email;\n            this.email = email;\n        }\n    }\n\n    setAccountSettings(settings) {\n        const is_equal_settings = JSON.stringify(settings) === JSON.stringify(this.account_settings);\n        if (!is_equal_settings) {\n            this.account_settings = settings;\n            this.is_account_setting_loaded = true;\n        }\n    }\n\n    setAccountStatus(status) {\n        this.account_status = status;\n    }\n\n    async updateAccountStatus() {\n        const account_status_response = await WS.authorized.getAccountStatus();\n        if (!account_status_response.error) {\n            this.setAccountStatus(account_status_response.get_account_status);\n        }\n    }\n\n    setInitialized(is_initialized) {\n        this.initialized_broadcast = is_initialized;\n    }\n\n    cleanUp() {\n        // delete all notifications keys for this account when logout\n        const notification_messages = LocalStore.getObject('notification_messages');\n        if (notification_messages && this.loginid) {\n            delete notification_messages[this.loginid];\n            LocalStore.setObject('notification_messages', {\n                ...notification_messages,\n            });\n        }\n\n        this.root_store.gtm.pushDataLayer({\n            event: 'log_out',\n        });\n        this.loginid = null;\n        this.user_id = null;\n        this.upgrade_info = undefined;\n        this.accounts = {};\n        this.mt5_login_list = [];\n        this.dxtrade_accounts_list = [];\n        this.ctrader_accounts_list = [];\n        this.landing_companies = {};\n        localStorage.removeItem('readScamMessage');\n        localStorage.removeItem('isNewAccount');\n        LocalStore.set('marked_notifications', JSON.stringify([]));\n        localStorage.setItem('active_loginid', this.loginid);\n        localStorage.setItem('active_user_id', this.user_id);\n        localStorage.setItem('client.accounts', JSON.stringify(this.accounts));\n\n        runInAction(async () => {\n            this.responsePayoutCurrencies(await WS.payoutCurrencies());\n        });\n        this.root_store.notifications.removeAllNotificationMessages(true);\n        this.syncWithLegacyPlatforms(this.loginid, this.accounts);\n    }\n\n    async logout() {\n        // TODO: [add-client-action] - Move logout functionality to client store\n        const response = await requestLogout();\n\n        if (response?.logout === 1) {\n            this.cleanUp();\n\n            this.setLogout(true);\n        }\n\n        return response;\n    }\n\n    setLogout(is_logged_out) {\n        this.has_logged_out = is_logged_out;\n        if (this.root_store.common.has_error) this.root_store.common.setError(false, null);\n    }\n\n    /* eslint-disable */\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country: 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        if (obj_params.selected_acct) {\n            active_loginid = obj_params.selected_acct;\n        }\n\n        account_list.forEach(function (account) {\n            Object.keys(account).forEach(function (param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (!account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) {\n                            // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${i}`]) {\n            const loginid = obj_params[`acct${i}`];\n            const token = obj_params[`token${i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n            this.syncWithLegacyPlatforms(active_loginid, this.accounts);\n        }\n    }\n\n    async setUserLogin(login_new_user) {\n        // login_new_user is populated only on virtual sign-up\n        let obj_params = {};\n        const search = window.location.search;\n\n        let is_social_signup_provider = false;\n\n        if (search) {\n            let search_params = new URLSearchParams(window.location.search);\n\n            search_params.forEach((value, key) => {\n                const account_keys = ['acct', 'token', 'cur'];\n                const is_account_param = account_keys.some(\n                    account_key => key?.includes(account_key) && key !== 'affiliate_token'\n                );\n\n                if (is_account_param) {\n                    obj_params[key] = value;\n                    is_social_signup_provider = true;\n                }\n            });\n\n            // delete account query params - but keep other query params (e.g. utm)\n            Object.keys(obj_params).forEach(key => search_params.delete(key));\n            search_params.delete('state'); // remove unused state= query string\n            search_params = search_params?.toString();\n            const search_param_without_account = search_params ? `?${search_params}` : '/';\n            history.replaceState(null, null, `${search_param_without_account}${window.location.hash}`);\n        }\n\n        const is_client_logging_in = login_new_user ? login_new_user.token1 : obj_params.token1;\n\n        if (is_client_logging_in) {\n            this.setIsLoggingIn(true);\n\n            const redirect_url = sessionStorage.getItem('redirect_url');\n\n            if (\n                (redirect_url?.endsWith('/') || redirect_url?.endsWith(routes.bot)) &&\n                (isTestLink() || isProduction() || isLocal() || isStaging())\n            ) {\n                window.history.replaceState({}, document.title, '/appstore/traders-hub');\n            } else {\n                window.history.replaceState({}, document.title, sessionStorage.getItem('redirect_url'));\n            }\n            SocketCache.clear();\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.authorize(is_client_logging_in);\n\n            if (is_social_signup_provider) {\n                const { get_account_status } = await WS.authorized.getAccountStatus();\n\n                Analytics.trackEvent('ce_virtual_signup_form', {\n                    action: 'signup_continued',\n                    signup_provider: get_account_status?.social_identity_provider,\n                    form_name: this.root_store?.ui?.is_mobile\n                        ? 'virtual_signup_web_mobile_default'\n                        : 'virtual_signup_web_desktop_default',\n                });\n            }\n\n            if (login_new_user) {\n                // overwrite obj_params if login is for new virtual account\n                obj_params = login_new_user;\n            }\n\n            if (authorize_response.error) {\n                return authorize_response;\n            }\n\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                this.upgradeable_landing_companies = [...new Set(authorize_response.upgradeable_landing_companies)];\n\n                if (this.canStoreClientAccounts(obj_params, account_list)) {\n                    this.storeClientAccounts(obj_params, account_list);\n                } else {\n                    // Since there is no API error, we have to add this to manually trigger checks in other parts of the code.\n                    authorize_response.error = {\n                        code: 'MismatchedAcct',\n                        message: localize('Invalid token'),\n                    };\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    canStoreClientAccounts(obj_params, account_list) {\n        const is_ready_to_process = account_list && isEmptyObject(this.accounts);\n        const accts = Object.keys(obj_params).filter(value => /^acct./.test(value));\n\n        const is_cross_checked = accts.every(acct =>\n            account_list.some(account => account.loginid === obj_params[acct])\n        );\n\n        return is_ready_to_process && is_cross_checked;\n    }\n\n    setVerificationCode(code, action) {\n        this.verification_code[action] = code;\n        if (code) {\n            LocalStore.set(`verification_code.${action}`, code);\n        } else {\n            LocalStore.remove(`verification_code.${action}`);\n        }\n        if (action === 'signup') {\n            // TODO: add await if error handling needs to happen before AccountSignup is initialised\n            this.fetchResidenceList(); // Prefetch for use in account signup process\n        }\n    }\n\n    setNewEmail(email, action) {\n        this.new_email[action] = email;\n        if (email) {\n            LocalStore.set(`new_email.${action}`, email);\n        } else {\n            LocalStore.remove(`new_email.${action}`);\n        }\n    }\n\n    setDeviceData() {\n        setDeviceDataCookie('signup_device', isDesktopOs() ? 'desktop' : 'mobile');\n    }\n\n    getSignupParams() {\n        const param_list = [\n            'date_first_contact',\n            'signup_device',\n            'gclid_url',\n            'utm_source',\n            'utm_ad_id',\n            'utm_adgroup_id',\n            'utm_adrollclk_id',\n            'utm_campaign_id',\n            'utm_campaign',\n            'utm_fbcl_id',\n            'utm_gl_client_id',\n            'utm_msclk_id',\n            'utm_medium',\n            'utm_term',\n            'utm_content',\n            'affiliate_token',\n        ];\n        const signup_params = {};\n        const url_params = new URLSearchParams(window.location.search);\n\n        param_list.forEach(key => {\n            if (url_params.get(key)) {\n                signup_params[key] = url_params.get(key);\n            }\n        });\n\n        return signup_params;\n    }\n\n    onSetResidence({ residence }, cb) {\n        if (!residence) return;\n        WS.setSettings({\n            residence,\n        }).then(async response => {\n            if (response.error) {\n                cb(response.error.message);\n            } else {\n                await this.setResidence(residence);\n                await WS.authorized.storage\n                    .landingCompany(this.accounts[this.loginid].residence)\n                    .then(this.responseLandingCompany);\n                await WS.authorized.storage.getSettings().then(async response => {\n                    this.setAccountSettings(response.get_settings);\n                });\n                runInAction(async () => {\n                    await BinarySocket.authorize(this.getToken()).then(() => {\n                        runInAction(() => (this.upgrade_info = this.getBasicUpgradeInfo()));\n                    });\n                });\n                cb();\n            }\n        });\n    }\n\n    async onSetCitizen(citizen) {\n        if (!citizen) return;\n        WS.setSettings({\n            set_settings: 1,\n            citizen,\n        });\n    }\n\n    onSignup({ citizenship, password, residence }, cb) {\n        if (!this.verification_code.signup || !password || !residence || !citizenship) return;\n        WS.newAccountVirtual(this.verification_code.signup, password, residence, this.getSignupParams()).then(\n            async response => {\n                if (response.error) {\n                    cb(response.error.message);\n                } else {\n                    cb();\n                    // Initialize client store with new user login\n                    const { client_id, currency, oauth_token } = response.new_account_virtual;\n                    await this.setCitizen(citizenship);\n                    await this.switchToNewlyCreatedAccount(client_id, oauth_token, currency);\n                    // GTM Signup event\n                    this.root_store.gtm.pushDataLayer({\n                        event: 'virtual_signup',\n                    });\n                }\n            }\n        );\n    }\n\n    async switchToNewlyCreatedAccount(client_id, oauth_token, currency) {\n        this.setPreSwitchAccount(true);\n        const new_user_login = {\n            acct1: client_id,\n            token1: oauth_token,\n            curr1: currency,\n        };\n        await this.init(new_user_login);\n        this.broadcastAccountChange();\n    }\n\n    fetchAccountSettings() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getSettings().then(response => {\n                this.setAccountSettings(response.get_settings);\n                resolve(response);\n            });\n        });\n    }\n\n    fetchResidenceList() {\n        return new Promise(resolve => {\n            WS.storage.residenceList().then(response => {\n                this.setResidenceList(response);\n                resolve(response);\n            });\n        });\n    }\n\n    setResidenceList(residence_list_response) {\n        this.residence_list = residence_list_response.residence_list || [];\n    }\n\n    fetchStatesList() {\n        return new Promise((resolve, reject) => {\n            WS.authorized.storage\n                .statesList({\n                    states_list: this.accounts[this.loginid].residence,\n                })\n                .then(response => {\n                    if (response.error) {\n                        reject(response.error);\n                    } else {\n                        runInAction(() => {\n                            this.states_list = response.states_list || [];\n                        });\n                    }\n                    resolve(response);\n                });\n        });\n    }\n\n    resetMt5ListPopulatedState() {\n        this.is_mt5_account_list_updated = false;\n        this.is_populating_mt5_account_list = true;\n        this.mt5_login_list_error = null;\n    }\n\n    async updateMt5LoginList() {\n        if (this.is_logged_in && !this.is_mt5_account_list_updated && !this.is_populating_mt5_account_list) {\n            const response = await WS.mt5LoginList();\n            this.responseMt5LoginList(response);\n        }\n    }\n\n    responseMT5TradingServers(response) {\n        if (response.error) {\n            this.mt5_trading_servers = [];\n            return;\n        }\n        this.mt5_trading_servers = response.trading_servers;\n    }\n\n    responseMt5LoginList(response) {\n        this.is_populating_mt5_account_list = false;\n        this.is_mt5_account_list_updated = true;\n        this.mt5_login_list_error = null;\n        /** we need to update mt5_login_list on mount of account switcher\n         *  to get the new MT5 balances (balance does not stream for MT5 accounts due to API restriction)\n         *  but to avoid spamming this call since the rate limit is strict\n         *  keep the current mt5_login_list response cached for one minute\n         *  after one minute consider it outdated and allow re-requesting it */\n        setTimeout(() => {\n            this.is_mt5_account_list_updated = false;\n        }, 60000);\n\n        if (!response.error) {\n            this.mt5_login_list = response.mt5_login_list.map(account => {\n                const display_login = (account.error ? account.error.details.login : account.login).replace(\n                    /^(MT[DR]?)/i,\n                    ''\n                );\n                if (account.error) {\n                    const { account_type, server } = account.error.details;\n                    this.setMT5DisabledSignupTypes({\n                        [account_type]: true,\n                    });\n                    if (platform === CFD_PLATFORMS.CTRADER) {\n                        this.setCFDDisabledSignupTypes(platform, {\n                            [account_type]: true,\n                        });\n                    }\n                    return {\n                        account_type,\n                        display_login,\n                        has_error: true,\n                        server,\n                    };\n                }\n                return {\n                    ...account,\n                    display_login,\n                };\n            });\n        } else {\n            this.mt5_login_list_error = response.error;\n        }\n    }\n\n    responseDxtradeTradingServers(response) {\n        if (response.error) {\n            this.dxtrade_trading_servers = [];\n            return;\n        }\n        this.dxtrade_trading_servers = response.trading_servers;\n\n        this.dxtrade_trading_servers.forEach(trading_server => {\n            const { account_type, disabled } = trading_server;\n            if (disabled) {\n                this.setCFDDisabledSignupTypes(CFD_PLATFORMS.DXTRADE, {\n                    [account_type]: true,\n                });\n            }\n        });\n    }\n\n    responseTradingPlatformAvailableAccounts(response) {\n        if (!response.error) {\n            this.trading_platform_available_accounts = response.trading_platform_available_accounts;\n        }\n    }\n\n    responseTradingPlatformAccountsList(response) {\n        const { platform } = response.echo_req || {};\n\n        this[`is_populating_${platform}_account_list`] = false;\n        this[`${platform}_accounts_list_error`] = null;\n\n        if (!response.error) {\n            this[`${platform}_accounts_list`] = response.trading_platform_accounts.map(account => {\n                const display_login = account.error ? account.error.details.account_id : account.account_id;\n                if (account.error) {\n                    const { account_type, server } = account.error.details;\n                    if (platform === CFD_PLATFORMS.DXTRADE) {\n                        this.setCFDDisabledSignupTypes(platform, {\n                            [account_type]: true,\n                        });\n                    }\n                    return {\n                        account_type,\n                        display_login,\n                        has_error: true,\n                        server,\n                    };\n                }\n                return {\n                    ...account,\n                    display_login,\n                };\n            });\n        } else {\n            this[`${platform}_accounts_list_error`] = response.error;\n        }\n    }\n\n    responseStatement(response) {\n        if (!response.error) {\n            this.statement = response.statement;\n        }\n    }\n\n    getChangeableFields() {\n        const readonly_fields = [\n            ...(this.account_settings.immutable_fields || []),\n            ...['immutable_fields', 'email', 'password'],\n        ];\n        return Object.keys(this.account_settings).filter(field => !readonly_fields.includes(field));\n    }\n\n    syncWithLegacyPlatforms(active_loginid, client_accounts) {\n        const smartTrader = {};\n        const binaryBot = {};\n\n        smartTrader.iframe = document.getElementById('localstorage-sync');\n        binaryBot.iframe = document.getElementById('localstorage-sync__bot');\n        smartTrader.origin = getUrlSmartTrader();\n        binaryBot.origin = getUrlBinaryBot(false);\n\n        [smartTrader, binaryBot].forEach(platform => {\n            if (platform.iframe) {\n                // Keep client.accounts in sync (in case user wasn't logged in).\n                platform.iframe.contentWindow.postMessage(\n                    {\n                        key: 'client.accounts',\n                        value: JSON.stringify(client_accounts),\n                    },\n                    platform.origin\n                );\n                platform.iframe.contentWindow.postMessage(\n                    {\n                        key: 'active_loginid',\n                        value: active_loginid,\n                    },\n                    platform.origin\n                );\n            }\n        });\n    }\n\n    get is_high_risk() {\n        if (isEmptyObject(this.account_status)) return false;\n        const { gaming_company, financial_company } = this.landing_companies;\n\n        // This is a conditional check for countries like Australia/Norway which fulfil one of these following conditions.\n        const restricted_countries =\n            financial_company?.shortcode === 'svg' ||\n            (gaming_company?.shortcode === 'svg' && financial_company?.shortcode !== 'maltainvest');\n\n        const high_risk_landing_company = financial_company?.shortcode === 'svg' && gaming_company?.shortcode === 'svg';\n        return high_risk_landing_company || this.account_status.risk_classification === 'high' || restricted_countries;\n    }\n\n    get is_low_risk() {\n        const { gaming_company, financial_company } = this.landing_companies;\n        const low_risk_landing_company =\n            financial_company?.shortcode === 'maltainvest' && gaming_company?.shortcode === 'svg';\n        return (\n            low_risk_landing_company ||\n            (this.upgradeable_landing_companies?.includes('svg') &&\n                this.upgradeable_landing_companies?.includes('maltainvest'))\n        );\n    }\n\n    get has_residence() {\n        return !!this.accounts[this.loginid]?.residence;\n    }\n\n    get is_pending_proof_of_ownership() {\n        return this.account_status?.authentication?.needs_verification?.includes('ownership');\n    }\n\n    fetchFinancialAssessment() {\n        return new Promise(async resolve => {\n            const { get_financial_assessment } = await WS.authorized.storage.getFinancialAssessment();\n\n            runInAction(() => (this.financial_assessment = get_financial_assessment));\n            resolve(get_financial_assessment);\n        });\n    }\n\n    async setFinancialAndTradingAssessment(payload) {\n        const response = await WS.setFinancialAndTradingAssessment(payload);\n        return response;\n    }\n\n    setTwoFAStatus(status) {\n        this.has_enabled_two_fa = status;\n    }\n\n    getTwoFAStatus() {\n        return new Promise(resolve => {\n            WS.authorized.accountSecurity({ account_security: 1, totp_action: 'status' }).then(response => {\n                if (response.error) {\n                    resolve(response.error);\n                } else {\n                    const is_enabled = !!getPropertyValue(response, ['account_security', 'totp', 'is_enabled']);\n                    this.setTwoFAStatus(is_enabled);\n                    resolve(is_enabled);\n                }\n            });\n        });\n    }\n\n    setTwoFAChangedStatus(status) {\n        this.has_changed_two_fa = status;\n    }\n\n    async updateMT5Status() {\n        this.updateAccountStatus();\n        await WS.authorized.mt5LoginList().then(this.root_store.client.responseMt5LoginList);\n    }\n\n    setPrevRealAccountLoginid = logind => {\n        this.prev_real_account_loginid = logind;\n    };\n\n    setPrevAccountType = acc_type => {\n        this.prev_account_type = acc_type;\n    };\n\n    setIsAlreadyAttempted(status) {\n        this.is_already_attempted = status;\n    }\n\n    /** @deprecated Use `useIsP2PEnabled` from `@deriv/hooks` package instead.\n     *\n     * This method is being used in `NotificationStore`, Once we get rid of the usage we can remove this method.\n     *\n     * Please `DO NOT` add the type for this method in `TCoreStores` as it is deprecated and shouldn't be used.\n     * */\n    get is_p2p_enabled() {\n        const is_low_risk_cr_eu_real = this.root_store?.traders_hub?.is_low_risk_cr_eu_real;\n\n        const is_p2p_supported_currency = Boolean(\n            this.website_status?.p2p_config?.supported_currencies.includes(this.currency.toLocaleLowerCase())\n        );\n\n        const is_p2p_visible = is_p2p_supported_currency && !this.is_virtual && !is_low_risk_cr_eu_real;\n\n        return is_p2p_visible;\n    }\n}\n","import { isCryptocurrency, getCurrencyDisplayCode } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const buildCurrenciesList = payout_currencies => {\n    const fiat = [];\n    const crypto = [];\n\n    payout_currencies.forEach(cur => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: getCurrencyDisplayCode(cur), value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]: fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b], []);\n    const default_currency = supported_currencies.find(c => c.value === currency)\n        ? currency\n        : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import * as SocketCache from '_common/base/socket_cache';\nimport { action, computed, makeObservable, observable } from 'mobx';\nimport { changeLanguage, getAllowedLanguages } from '@deriv/translations';\nimport { getAppId, getUrlBinaryBot, getUrlSmartTrader, isMobile, platforms, routes, toMoment } from '@deriv/shared';\nimport BaseStore from './base-store';\nimport BinarySocket from '_common/base/socket_base';\nimport ServerTime from '_common/base/server_time';\nimport WS from 'Services/ws-methods';\nimport { currentLanguage } from 'Utils/Language/index';\n\nexport default class CommonStore extends BaseStore {\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            addRouteHistoryItem: action.bound,\n            allowed_languages: observable,\n            app_id: observable,\n            app_router: observable,\n            app_routing_history: observable,\n            changeCurrentLanguage: action.bound,\n            changeSelectedLanguage: action.bound,\n            changing_language_timer_id: observable,\n            checkAppId: action.bound,\n            current_language: observable,\n            deposit_url: observable,\n            error: observable,\n            has_error: observable,\n            init: action.bound,\n            is_from_derivgo: computed,\n            is_language_changing: observable,\n            is_network_online: observable,\n            is_socket_opened: observable,\n            network_status: observable,\n            platform: observable,\n            routeBackInApp: action.bound,\n            routeTo: action.bound,\n            selected_contract_type: observable,\n            server_time: observable,\n            services_error: observable,\n            setAppRouterHistory: action.bound,\n            setAppstorePlatform: action.bound,\n            setDepositURL: action.bound,\n            setError: action.bound,\n            setInitialRouteHistoryItem: action.bound,\n            setIsSocketOpened: action.bound,\n            setNetworkStatus: action.bound,\n            setPlatform: action.bound,\n            setSelectedContractType: action.bound,\n            setServerTime: action.bound,\n            setServicesError: action.bound,\n            setWithdrawURL: action.bound,\n            showError: action.bound,\n            was_socket_opened: observable,\n            withdraw_url: observable,\n        });\n    }\n\n    allowed_languages = Object.keys(getAllowedLanguages());\n    app_id = undefined;\n    app_router = { history: null };\n    app_routing_history = [];\n    changing_language_timer_id = '';\n    current_language = currentLanguage;\n    deposit_url = '';\n    has_error = false;\n    is_language_changing = false;\n    is_network_online = false;\n    is_socket_opened = false;\n    error = {\n        type: 'info',\n        message: '',\n    };\n    network_status = {};\n    platform = '';\n    selected_contract_type = '';\n    server_time = ServerTime.get() || toMoment(); // fallback: get current time from moment.js\n    services_error = {};\n    was_socket_opened = false;\n    withdraw_url = '';\n\n    setSelectedContractType(contract_type) {\n        this.selected_contract_type = contract_type;\n    }\n\n    init() {\n        this.setPlatform();\n    }\n\n    checkAppId() {\n        if (this.app_id && this.app_id !== getAppId()) {\n            BinarySocket.closeAndOpenNewConnection();\n        }\n        this.app_id = getAppId();\n    }\n\n    changeCurrentLanguage(new_language) {\n        if (this.current_language !== new_language) {\n            if (this.changing_language_timer_id) clearTimeout(this.changing_language_timer_id);\n            this.current_language = new_language;\n            this.is_language_changing = true;\n            this.changing_language_timer_id = setTimeout(() => {\n                this.is_language_changing = false;\n            }, 2500);\n        }\n    }\n\n    changeSelectedLanguage = async key => {\n        SocketCache.clear();\n        if (key === 'EN') {\n            window.localStorage.setItem('i18n_language', key);\n        }\n        await WS.wait('authorize');\n        return new Promise((resolve, reject) => {\n            WS.setSettings({\n                set_settings: 1,\n                preferred_language: key,\n            }).then(async () => {\n                const new_url = new URL(window.location.href);\n                if (key === 'EN') {\n                    new_url.searchParams.delete('lang');\n                } else {\n                    new_url.searchParams.set('lang', key);\n                }\n                window.history.pushState({ path: new_url.toString() }, '', new_url.toString());\n                try {\n                    await changeLanguage(key, () => {\n                        this.changeCurrentLanguage(key);\n                        BinarySocket.closeAndOpenNewConnection(key);\n                        this.root_store.client.setIsAuthorize(false);\n                    });\n                    resolve();\n                } catch (e) {\n                    reject();\n                }\n            });\n        });\n    };\n\n    setAppstorePlatform(platform) {\n        this.platform = platform;\n    }\n\n    setPlatform() {\n        const search = window.location.search;\n        if (search) {\n            const url_params = new URLSearchParams(search);\n            const platform = url_params.get('platform');\n            if (platform) {\n                this.platform = platform;\n                window.sessionStorage.setItem('config.platform', this.platform);\n            }\n        }\n    }\n\n    get is_from_derivgo() {\n        return platforms[this.platform]?.platform_name === platforms.derivgo.platform_name;\n    }\n\n    setInitialRouteHistoryItem(location) {\n        if (window.location.href.indexOf('?ext_platform_url=') !== -1) {\n            const ext_url = decodeURI(new URL(window.location.href).searchParams.get('ext_platform_url'));\n            const { setExternalParams } = this.root_store.client;\n            setExternalParams({\n                url: ext_url,\n                should_redirect: true,\n            });\n            if (ext_url?.indexOf(getUrlSmartTrader()) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH', is_external: true });\n            } else if (ext_url?.indexOf(routes.cashier_p2p) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH' });\n            } else if (ext_url?.indexOf(getUrlBinaryBot()) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH', is_external: true });\n            } else {\n                this.addRouteHistoryItem({ ...location, action: 'PUSH' });\n            }\n\n            window.history.replaceState({}, document.title, window.location.pathname);\n        } else {\n            this.addRouteHistoryItem({ ...location, action: 'PUSH' });\n        }\n    }\n\n    setServerTime(server_time) {\n        this.server_time = server_time;\n    }\n\n    setIsSocketOpened(is_socket_opened) {\n        // note that it's not for account switch that we're doing this,\n        // but rather to reset account related stores like portfolio and contract-trade\n        const should_broadcast_account_change = this.was_socket_opened && is_socket_opened;\n\n        this.is_socket_opened = is_socket_opened;\n        this.was_socket_opened = this.was_socket_opened || is_socket_opened;\n\n        if (should_broadcast_account_change) {\n            this.root_store.client.broadcastAccountChangeAfterAuthorize();\n        }\n    }\n\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n\n        const { addNotificationMessage, client_notifications, removeNotificationMessage } =\n            this.root_store.notifications;\n        if (!is_online) {\n            addNotificationMessage(client_notifications.you_are_offline);\n        } else {\n            removeNotificationMessage(client_notifications.you_are_offline);\n        }\n    }\n\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header: error.header,\n                message: error.message,\n                redirect_label: error.redirect_label,\n                redirectOnClick: error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n                redirect_to: error.redirect_to,\n                should_clear_error_on_click: error.should_clear_error_on_click,\n                should_redirect: error.should_redirect,\n                setError: this.setError,\n            }),\n        };\n    }\n\n    showError({\n        message,\n        header,\n        redirect_label,\n        redirectOnClick,\n        should_show_refresh,\n        redirect_to,\n        should_clear_error_on_click,\n        should_redirect,\n    }) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            redirect_to,\n            should_clear_error_on_click,\n            type: 'error',\n            should_redirect,\n        });\n    }\n\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n\n    setServicesError(error) {\n        this.services_error = error;\n        if (isMobile()) {\n            if (error.code === 'CompanyWideLimitExceeded' || error.code === 'PleaseAuthenticate') {\n                this.root_store.ui.toggleServicesErrorModal(true);\n            } else {\n                this.root_store.ui.addToast({\n                    content: error.message,\n                    type: 'error',\n                });\n            }\n        } else {\n            this.root_store.ui.toggleServicesErrorModal(true);\n        }\n    }\n\n    setAppRouterHistory(history) {\n        this.app_router.history = history;\n    }\n\n    routeTo(pathname) {\n        if (this.app_router.history) this.app_router.history.push(pathname);\n    }\n\n    addRouteHistoryItem(router_action) {\n        const check_existing = this.app_routing_history.findIndex(\n            i => i.pathname === router_action.pathname && i.action === 'PUSH'\n        );\n        if (check_existing > -1) {\n            this.app_routing_history.splice(check_existing, 1);\n        }\n        this.app_routing_history.unshift(router_action);\n    }\n\n    isCurrentLanguage = lang => lang === this.current_language;\n\n    routeBackInApp(history, additional_platform_path = []) {\n        let route_to_item_idx = -1;\n        const route_to_item = this.app_routing_history.find((history_item, idx) => {\n            if (history_item.action === 'PUSH') {\n                if (history_item.is_external) {\n                    return true;\n                }\n\n                const parent_path = history_item.pathname.split('/')[1];\n                const platform_parent_paths = [routes.mt5, routes.bot, routes.trade, routes.dxtrade].map(\n                    i => i.split('/')[1]\n                ); // map full path to just base path (`/mt5/abc` -> `mt5`)\n\n                if (\n                    platform_parent_paths.includes(parent_path) ||\n                    additional_platform_path.includes(history_item.pathname)\n                ) {\n                    route_to_item_idx = idx;\n                    return true;\n                }\n            }\n\n            return false;\n        });\n\n        if (route_to_item) {\n            if (route_to_item.is_external) {\n                window.location.href = route_to_item.pathname;\n                return;\n            } else if (route_to_item_idx > -1) {\n                this.app_routing_history.splice(0, route_to_item_idx + 1);\n                // remove once p2p is ready\n                const ui_store = this.root_store.ui;\n                if (route_to_item.pathname === routes.cashier_p2p && ui_store.is_mobile)\n                    history.push(`${route_to_item.pathname}/verification`);\n                else history.push(route_to_item.pathname);\n                return;\n            }\n        }\n\n        history.push(routes.trade);\n    }\n}\n","import * as Cookies from 'js-cookie';\nimport { action, computed, makeObservable } from 'mobx';\nimport { getAppId, toMoment, epochToMoment, CFD_PLATFORMS } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport BinarySocket from '_common/base/socket_base';\nimport BaseStore from './base-store';\n\nexport default class GTMStore extends BaseStore {\n    is_gtm_applicable =\n        window.location.hostname === 'deriv-app.binary.sx' || /^(16303|16929|19111|19112)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            visitorId: computed,\n            common_variables: computed,\n            accountSwitcherListener: action.bound,\n            pushDataLayer: action.bound,\n            pushTransactionData: action.bound,\n            eventHandler: action.bound,\n            setLoginFlag: action.bound,\n        });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    get common_variables() {\n        const platform = () => {\n            const url = new URL(window.location.href);\n            const domain = url.hostname;\n            const path = url.pathname;\n\n            // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n            if (\n                /^(deriv-app\\.binary.sx|app\\.deriv\\.com|staging-app\\.deriv\\.com|deriv.app|staging.deriv.app|localhost.binary.sx)$/.test(\n                    domain\n                )\n            ) {\n                if (path === 'bot') {\n                    return 'DBot';\n                } else if (path === CFD_PLATFORMS.MT5) {\n                    return 'MT5';\n                }\n                return 'DTrader';\n            }\n            return 'undefined';\n        };\n        return {\n            language: getLanguage(),\n            ...(this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency: this.root_store.client.currency,\n                userId: this.root_store.client.user_id,\n                email: this.root_store.client.email,\n            }),\n            loggedIn: this.root_store.client.is_logged_in,\n            theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            platform: platform(),\n        };\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable) {\n            BinarySocket.wait('authorize').then(() => {\n                const gtm_object = { ...this.common_variables, ...data };\n                if (!gtm_object.event) return;\n\n                dataLayer.push(gtm_object);\n            });\n        }\n    }\n\n    /**\n     * Pushes deposit & withdrawal data from transaction-stream to GTM\n     *\n     * @param {object} response\n     * @param {object} extra_data\n     */\n    pushTransactionData(response, extra_data = {}) {\n        if (!this.is_gtm_applicable || this.root_store.client.is_virtual) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now = toMoment();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(epochToMoment(gtm_transactions.timestamp), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event: 'transaction',\n                bom_account_type: this.root_store.client.account_type,\n                bom_today: moment_now.unix(),\n                transaction: {\n                    id: response.transaction.transaction_id,\n                    type: response.transaction.action,\n                    time: response.transaction.transaction_time,\n                    amount: response.transaction.amount,\n                },\n            };\n            Object.assign(data, extra_data);\n            this.pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    }\n\n    eventHandler(get_settings) {\n        if (!this.is_gtm_applicable) return;\n\n        const login_event = localStorage.getItem('GTM_login');\n        const is_new_account = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            this.pushDataLayer({ affiliate_token });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = toMoment();\n        const data = {\n            visitorId: this.visitorId,\n            account_type: this.root_store.client.account_type,\n            currency: this.root_store.client.currency,\n            country: get_settings.country,\n            country_abbrev: get_settings.country_code,\n            email: get_settings.email,\n            url: window.location.href,\n            today: moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n        }\n        this.pushDataLayer(data);\n    }\n\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable && event_name) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","export default class ModulesStore {\n    constructor(root_store) {\n        this.root_store = root_store;\n    }\n\n    attachModule(name, module) {\n        this[name] = module;\n    }\n\n    detachModule(name) {\n        this[name] = {};\n    }\n}\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { action, computed, makeObservable, observable, reaction } from 'mobx';\n\nimport { StaticUrl } from '@deriv/components';\nimport {\n    daysSince,\n    extractInfoFromShortcode,\n    formatDate,\n    formatMoney,\n    getEndTime,\n    getMarketName,\n    getPathname,\n    getPlatformSettings,\n    getStaticUrl,\n    getTotalProfit,\n    getTradeTypeName,\n    getUrlBase,\n    isCryptocurrency,\n    isEmptyObject,\n    isHighLow,\n    isMobile,\n    isMultiplierContract,\n    isTurbosContract,\n    LocalStore,\n    routes,\n    unique,\n} from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\n\nimport { BinaryLink } from 'App/Components/Routes';\nimport { WS } from 'Services';\n\nimport { sortNotifications, sortNotificationsMobile } from '../App/Components/Elements/NotificationMessage/constants';\n\nimport {\n    excluded_notifications,\n    getCashierValidations,\n    getStatusValidations,\n    hasMissingRequiredField,\n    maintenance_notifications,\n} from './Helpers/client-notifications';\nimport BaseStore from './base-store';\n\nexport default class NotificationStore extends BaseStore {\n    is_notifications_visible = false;\n    notifications = [];\n    notification_messages = [];\n    marked_notifications = [];\n    push_notifications = [];\n    client_notifications = {};\n    should_show_popups = true;\n    trade_notifications = [];\n    p2p_order_props = {};\n    p2p_redirect_to = {};\n    p2p_completed_orders = null;\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            addNotificationBar: action.bound,\n            addNotificationMessage: action.bound,\n            addNotificationMessageByKey: action.bound,\n            addTradeNotification: action.bound,\n            addVerificationNotifications: action.bound,\n            client_notifications: observable,\n            filterNotificationMessages: action.bound,\n            getP2pCompletedOrders: action.bound,\n            handleClientNotifications: action.bound,\n            is_notifications_empty: computed,\n            is_notifications_visible: observable,\n            marked_notifications: observable,\n            markNotificationMessage: action.bound,\n            notification_messages: observable,\n            notifications: observable,\n            p2p_completed_orders: observable,\n            p2p_order_props: observable,\n            p2p_redirect_to: observable,\n            push_notifications: observable,\n            refreshNotifications: action.bound,\n            removeAllNotificationMessages: action.bound,\n            removeNotificationByKey: action.bound,\n            removeNotificationMessage: action.bound,\n            removeNotificationMessageByKey: action.bound,\n            removeNotifications: action.bound,\n            removeTradeNotifications: action.bound,\n            resetVirtualBalanceNotification: action.bound,\n            setClientNotifications: action.bound,\n            setP2POrderProps: action.bound,\n            setP2PRedirectTo: action.bound,\n            setShouldShowPopups: action.bound,\n            should_show_popups: observable,\n            showCompletedOrderNotification: action.bound,\n            toggleNotificationsModal: action.bound,\n            trade_notifications: observable,\n            unmarkNotificationMessage: action.bound,\n            updateNotifications: action.bound,\n        });\n\n        const debouncedGetP2pCompletedOrders = debounce(this.getP2pCompletedOrders, 1000);\n\n        reaction(\n            () => root_store.common.app_routing_history.map(i => i.pathname),\n            () => {\n                this.filterNotificationMessages();\n                this.marked_notifications = JSON.parse(LocalStore.get('marked_notifications') || '[]');\n            }\n        );\n        reaction(\n            () => [\n                root_store.client.account_settings,\n                root_store.client.account_status,\n                root_store.client.landing_companies,\n                root_store.client.is_p2p_enabled,\n                root_store.common?.selected_contract_type,\n                root_store.client.is_eu,\n                root_store.client.has_enabled_two_fa,\n                root_store.client.has_changed_two_fa,\n                this.p2p_order_props.order_id,\n                root_store.client.p2p_advertiser_info,\n            ],\n            async () => {\n                if (\n                    root_store.client.is_logged_in &&\n                    !root_store.client.is_virtual &&\n                    Object.keys(root_store.client.account_status || {}).length > 0 &&\n                    Object.keys(root_store.client.landing_companies || {}).length > 0 &&\n                    root_store.client.is_p2p_enabled\n                ) {\n                    await debouncedGetP2pCompletedOrders();\n                }\n\n                if (\n                    !root_store.client.is_logged_in ||\n                    (Object.keys(root_store.client.account_status || {}).length > 0 &&\n                        Object.keys(root_store.client.landing_companies || {}).length > 0)\n                ) {\n                    this.removeNotifications();\n                    this.removeAllNotificationMessages();\n                    this.setClientNotifications();\n                    this.handleClientNotifications();\n                    this.filterNotificationMessages();\n                    this.checkNotificationMessages();\n                }\n            }\n        );\n    }\n\n    get is_notifications_empty() {\n        return !this.notifications.length;\n    }\n\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    addNotificationMessage(notification) {\n        if (!notification) return;\n        if (!this.notification_messages.find(item => item.key === notification.key)) {\n            // Remove notification messages if it was already closed by user and exists in LocalStore\n            const active_loginid = LocalStore.get('active_loginid');\n            const messages = LocalStore.getObject('notification_messages');\n\n            if (active_loginid) {\n                // Check if is existing message to remove already closed messages stored in LocalStore\n                const is_existing_message = Array.isArray(messages[active_loginid])\n                    ? messages[active_loginid].includes(notification.key)\n                    : false;\n\n                if (is_existing_message) {\n                    this.markNotificationMessage({ key: notification.key });\n                    return;\n                }\n\n                const sortFn = isMobile() ? sortNotificationsMobile : sortNotifications;\n                this.notification_messages = [...this.notification_messages, notification].sort(sortFn);\n\n                if (\n                    ['svg', 'p2p'].some(key => notification.key?.includes(key)) ||\n                    (excluded_notifications && !excluded_notifications.includes(notification.key))\n                ) {\n                    this.updateNotifications();\n                }\n            }\n        }\n    }\n\n    addNotificationMessageByKey(key) {\n        if (key) this.addNotificationMessage(this.client_notifications[key]);\n    }\n\n    addTradeNotification(contract_info) {\n        if (!contract_info) return;\n        const {\n            buy_price,\n            contract_id,\n            contract_type,\n            currency,\n            profit,\n            purchase_time,\n            shortcode,\n            status,\n            underlying,\n        } = contract_info;\n        const id = `${contract_id}_${status}`;\n        if (this.trade_notifications.some(({ id: notification_id }) => notification_id === id)) return;\n        this.trade_notifications.push({\n            id,\n            buy_price,\n            contract_id,\n            contract_type: getTradeTypeName(contract_type, isHighLow({ shortcode }), isTurbosContract(contract_type)),\n            currency,\n            profit: isMultiplierContract(contract_type) && !isNaN(profit) ? getTotalProfit(contract_info) : profit,\n            status,\n            symbol: getMarketName(underlying ?? extractInfoFromShortcode(shortcode).underlying),\n            timestamp: status === 'open' ? purchase_time : getEndTime(contract_info),\n        });\n        /* Consider notifications older than 100s ago as stale and filter out such trade_notifications from the array\n           in order to protect RAM in case there are too many notifications coming at once. */\n        const hundred_sec_ago = Math.floor(Date.now() / 1000) - 100;\n        this.trade_notifications = this.trade_notifications.filter(({ timestamp }) => timestamp > hundred_sec_ago);\n    }\n\n    addVerificationNotifications(identity, document, has_restricted_mt5_account, has_mt5_account_with_rejected_poa) {\n        if (identity.status === 'verified') {\n            //identity\n            this.addNotificationMessage(this.client_notifications.poi_verified);\n        } else if (!['none', 'pending', 'expired'].includes(identity.status)) {\n            this.addNotificationMessage(this.client_notifications.poi_failed);\n        }\n\n        // document\n        if (document.status === 'verified') {\n            this.addNotificationMessage(this.client_notifications.poa_verified);\n        } else if (has_restricted_mt5_account) {\n            if (document.status === 'pending') {\n                this.addNotificationMessage(this.client_notifications.resticted_mt5_with_pending_poa);\n            } else {\n                this.addNotificationMessage(this.client_notifications.resticted_mt5_with_failed_poa);\n            }\n        } else if (has_mt5_account_with_rejected_poa) {\n            this.addNotificationMessage(this.client_notifications.poa_rejected_for_mt5);\n        } else if (!['none', 'pending', 'expired'].includes(document.status)) {\n            this.addNotificationMessage(this.client_notifications.poa_failed);\n        }\n    }\n\n    filterNotificationMessages() {\n        if (LocalStore.get('active_loginid') !== 'null')\n            this.resetVirtualBalanceNotification(LocalStore.get('active_loginid'));\n        if (window.location.pathname === routes.personal_details) {\n            this.notification_messages = this.notification_messages.filter(\n                notification =>\n                    notification.platform === 'Account' || maintenance_notifications.includes(notification.key)\n            );\n        } else if (!window.location.pathname.includes(routes.cashier_p2p)) {\n            this.notification_messages = this.notification_messages.filter(notification => {\n                if (notification.platform === undefined || notification.platform.includes(getPathname())) {\n                    return true;\n                } else if (!notification.platform.includes(getPathname())) {\n                    if (notification.is_disposable) {\n                        this.removeNotificationMessage({\n                            key: notification.key,\n                            should_show_again: notification.should_show_again,\n                        });\n                        this.removeNotificationByKey({ key: notification.key });\n                    }\n                }\n\n                return false;\n            });\n        }\n    }\n\n    // check for the already added keys in the notification_messages and don't display those notifications\n    checkNotificationMessages() {\n        const notifications_list = LocalStore.getObject('notification_messages');\n        const { loginid } = this.root_store.client;\n        const refined_list = notifications_list[loginid] ? Object.values(notifications_list[loginid]) : [];\n        const p2p_settings = LocalStore.getObject('p2p_settings');\n        const is_p2p_notifications_visible = p2p_settings[loginid]\n            ? p2p_settings[loginid].is_notifications_visible\n            : false;\n        if (refined_list.length) {\n            refined_list.map(refined => {\n                if (refined.includes('p2p')) {\n                    if (is_p2p_notifications_visible === false) {\n                        this.removeNotificationByKey({ key: refined });\n                    }\n                } else {\n                    this.removeNotificationByKey({ key: refined });\n                }\n            });\n        }\n    }\n\n    async handleClientNotifications() {\n        const {\n            account_settings,\n            account_status,\n            account_open_date,\n            accounts,\n            isAccountOfType,\n            is_eu,\n            is_identity_verification_needed,\n            is_logged_in,\n            is_tnc_needed,\n            landing_company_shortcode,\n            loginid,\n            obj_total_balance,\n            website_status,\n            has_enabled_two_fa,\n            has_changed_two_fa,\n            is_poi_dob_mismatch,\n            is_financial_assessment_needed,\n            is_financial_information_incomplete,\n            has_restricted_mt5_account,\n            has_mt5_account_with_rejected_poa,\n            is_pending_proof_of_ownership,\n            p2p_advertiser_info,\n            is_p2p_enabled,\n            is_poa_expired,\n        } = this.root_store.client;\n        const { upgradable_daily_limits } = p2p_advertiser_info || {};\n        const { max_daily_buy, max_daily_sell } = upgradable_daily_limits || {};\n        const { is_10k_withdrawal_limit_reached } = this.root_store.modules.cashier.withdraw;\n        const { current_language, selected_contract_type } = this.root_store.common;\n        const malta_account = landing_company_shortcode === 'maltainvest';\n        const cr_account = landing_company_shortcode === 'svg';\n        const is_website_up = website_status.site_status === 'up';\n        const has_trustpilot = LocalStore.getObject('notification_messages')[loginid]?.includes(\n            this.client_notifications.trustpilot.key\n        );\n\n        let has_missing_required_field;\n\n        if (website_status?.message?.length) {\n            this.addNotificationMessage(this.client_notifications.site_maintenance);\n        } else {\n            this.removeNotificationByKey({ key: this.client_notifications.site_maintenance });\n        }\n\n        if (is_logged_in) {\n            if (isEmptyObject(account_status)) return;\n            const {\n                authentication: { document, identity, income, needs_verification, ownership },\n                status,\n                cashier_validation,\n            } = account_status;\n\n            const {\n                cashier_locked,\n                deposit_locked,\n                document_needs_action,\n                mt5_withdrawal_locked,\n                personal_details_locked,\n                poi_name_mismatch,\n                withdrawal_locked,\n            } = getStatusValidations(status || []);\n\n            this.handlePOAAddressMismatchNotifications();\n\n            if (status?.includes('mt5_additional_kyc_required'))\n                this.addNotificationMessage(this.client_notifications.additional_kyc_info);\n\n            if (!has_enabled_two_fa && obj_total_balance.amount_real > 0) {\n                this.addNotificationMessage(this.client_notifications.two_f_a);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.two_f_a.key });\n            }\n\n            if (malta_account && is_financial_information_incomplete) {\n                this.addNotificationMessage(this.client_notifications.need_fa);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.need_fa });\n            }\n\n            if (is_poi_dob_mismatch) {\n                this.addNotificationMessage(this.client_notifications.poi_dob_mismatch);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.poi_dob_mismatch });\n            }\n            if (is_poa_expired) {\n                this.addNotificationMessage(this.client_notifications.poa_expired);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.poa_expired });\n            }\n            if (loginid !== LocalStore.get('active_loginid')) return;\n\n            if (is_financial_assessment_needed) {\n                this.addNotificationMessage(this.client_notifications.notify_financial_assessment);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.notify_financial_assessment.key });\n            }\n\n            if (has_changed_two_fa) {\n                this.addNotificationMessage(this.client_notifications.has_changed_two_fa);\n            }\n\n            const client = accounts[loginid];\n            if (client && !client.is_virtual) {\n                if (isEmptyObject(account_status)) return;\n                if (loginid !== LocalStore.get('active_loginid')) return;\n\n                const {\n                    cashier_locked_status,\n                    documents_expired,\n                    FinancialAssessmentRequired,\n                    is_virtual,\n                    no_residence,\n                    no_withdrawal_or_trading_status,\n                    SelfExclusion,\n                    system_maintenance,\n                    unwelcome_status,\n                    withdrawal_locked_status,\n                    ASK_AUTHENTICATE,\n                    ASK_CURRENCY,\n                    ASK_FINANCIAL_RISK_APPROVAL,\n                    ASK_FIX_DETAILS,\n                    ASK_SELF_EXCLUSION_MAX_TURNOVER_SET,\n                    ASK_TIN_INFORMATION,\n                    ASK_UK_FUNDS_PROTECTION,\n                } = cashier_validation ? getCashierValidations(cashier_validation) : {};\n\n                const needs_poa =\n                    is_10k_withdrawal_limit_reached &&\n                    (needs_verification.includes('document') || document?.status !== 'verified');\n                const needs_poi = is_10k_withdrawal_limit_reached && identity?.status !== 'verified';\n                const needs_poinc =\n                    needs_verification.includes('income') && ['rejected', 'none'].includes(income?.status);\n                const poinc_upload_limited = needs_verification.includes('income') && income?.status === 'locked';\n                const onfido_submissions_left = identity?.services.onfido.submissions_left;\n                const poo_required = ownership?.requests?.length > 0 && ownership?.status?.toLowerCase() !== 'rejected';\n                const poo_rejected = is_pending_proof_of_ownership && ownership?.status?.toLowerCase() === 'rejected';\n                const svg_needs_poi_poa =\n                    cr_account &&\n                    status.includes('allow_document_upload') &&\n                    identity?.status === 'none' &&\n                    document?.status === 'none';\n                const svg_needs_poa =\n                    cr_account && status.includes('allow_document_upload') && document?.status === 'none';\n                const svg_needs_poi =\n                    cr_account && status.includes('allow_document_upload') && identity?.status === 'none';\n                const svg_poi_expired = cr_account && identity?.status === 'expired';\n\n                this.addVerificationNotifications(\n                    identity,\n                    document,\n                    has_restricted_mt5_account,\n                    has_mt5_account_with_rejected_poa\n                );\n\n                if (needs_poa) this.addNotificationMessage(this.client_notifications.needs_poa);\n                if (needs_poi) this.addNotificationMessage(this.client_notifications.needs_poi);\n                if (needs_poinc) this.addNotificationMessage(this.client_notifications.needs_poinc);\n                if (poinc_upload_limited) this.addNotificationMessage(this.client_notifications.poinc_upload_limited);\n\n                if (\n                    poi_name_mismatch &&\n                    identity?.services.onfido.last_rejected &&\n                    !personal_details_locked &&\n                    onfido_submissions_left > 0\n                ) {\n                    this.addNotificationMessage(this.client_notifications.poi_name_mismatch);\n                }\n\n                if (system_maintenance) {\n                    this.setClientNotifications(client);\n                    this.addNotificationMessage(\n                        this.client_notifications.system_maintenance(withdrawal_locked, deposit_locked)\n                    );\n                } else if (cashier_locked) {\n                    if (is_virtual) {\n                        this.addNotificationMessage(this.client_notifications.is_virtual);\n                    } else if (no_residence) {\n                        this.addNotificationMessage(this.client_notifications.no_residence);\n                    } else if (documents_expired) {\n                        this.addNotificationMessage(this.client_notifications.documents_expired);\n                    } else if (cashier_locked_status) {\n                        this.addNotificationMessage(this.client_notifications.cashier_locked);\n                    } else if (ASK_CURRENCY) {\n                        this.addNotificationMessage(this.client_notifications.currency);\n                    } else if (ASK_AUTHENTICATE && is_identity_verification_needed) {\n                        this.addNotificationMessage(this.client_notifications.identity);\n                    } else if (ASK_AUTHENTICATE) {\n                        this.addNotificationMessage(this.client_notifications.authenticate);\n                    } else if (isAccountOfType('financial') && ASK_FINANCIAL_RISK_APPROVAL) {\n                        this.addNotificationMessage(this.client_notifications.ask_financial_risk_approval);\n                    } else if (FinancialAssessmentRequired) {\n                        this.addNotificationMessage(this.client_notifications.risk);\n                    } else if (isAccountOfType('financial') && ASK_TIN_INFORMATION) {\n                        this.addNotificationMessage(this.client_notifications.tax);\n                    } else if (ASK_UK_FUNDS_PROTECTION) {\n                        this.addNotificationMessage(this.client_notifications.ask_uk_funds_protection);\n                    } else if (ASK_SELF_EXCLUSION_MAX_TURNOVER_SET) {\n                        this.addNotificationMessage(this.client_notifications.max_turnover_limit_not_set);\n                    } else if (ASK_FIX_DETAILS) {\n                        this.addNotificationMessage(\n                            this.client_notifications.required_fields(withdrawal_locked, deposit_locked)\n                        );\n                    } else {\n                        this.addNotificationMessage(this.client_notifications.cashier_locked);\n                    }\n                } else {\n                    if (withdrawal_locked) {\n                        if (ASK_AUTHENTICATE) {\n                            this.addNotificationMessage(this.client_notifications.withdrawal_locked_review);\n                        } else if (no_withdrawal_or_trading_status) {\n                            this.addNotificationMessage(this.client_notifications.no_withdrawal_or_trading);\n                        } else if (withdrawal_locked_status) {\n                            this.addNotificationMessage(this.client_notifications.withdrawal_locked);\n                        } else if (ASK_FIX_DETAILS) {\n                            this.addNotificationMessage(\n                                this.client_notifications.required_fields(withdrawal_locked, deposit_locked)\n                            );\n                        }\n                    }\n                    if (deposit_locked) {\n                        if (SelfExclusion) {\n                            this.addNotificationMessage(\n                                this.client_notifications.self_exclusion(client.excluded_until)\n                            );\n                        } else if (unwelcome_status) {\n                            this.addNotificationMessage(this.client_notifications.unwelcome);\n                        }\n                    }\n                }\n\n                if (mt5_withdrawal_locked) this.addNotificationMessage(this.client_notifications.mt5_withdrawal_locked);\n                if (document_needs_action) this.addNotificationMessage(this.client_notifications.document_needs_action);\n                if (is_p2p_enabled) {\n                    this.addNotificationMessage(this.client_notifications.dp2p);\n\n                    this.p2p_completed_orders?.map(order => {\n                        const {\n                            advertiser_details,\n                            client_details,\n                            id,\n                            is_reviewable,\n                            status: order_status,\n                            type,\n                        } = order;\n\n                        if (is_reviewable) {\n                            if (type === 'buy' && order_status === 'completed' && client_details.loginid === loginid)\n                                this.showCompletedOrderNotification(advertiser_details.name, id);\n\n                            if (\n                                type === 'sell' &&\n                                order_status === 'completed' &&\n                                advertiser_details.loginid === loginid\n                            )\n                                this.showCompletedOrderNotification(client_details.name, id);\n                        }\n                    });\n\n                    if (upgradable_daily_limits)\n                        this.addNotificationMessage(\n                            this.client_notifications.p2p_daily_limit_increase(\n                                client.currency,\n                                max_daily_buy,\n                                max_daily_sell\n                            )\n                        );\n                } else {\n                    this.removeNotificationMessageByKey({ key: this.client_notifications.dp2p.key });\n                }\n                if (is_website_up && !has_trustpilot && daysSince(account_open_date) > 7) {\n                    this.addNotificationMessage(this.client_notifications.trustpilot);\n                }\n                if (is_tnc_needed) {\n                    this.addNotificationMessage(this.client_notifications.tnc);\n                }\n\n                has_missing_required_field = hasMissingRequiredField(account_settings, client, isAccountOfType);\n                if (has_missing_required_field) {\n                    this.addNotificationMessage(\n                        this.client_notifications.required_fields(withdrawal_locked, deposit_locked)\n                    );\n                }\n                if (poo_required) {\n                    this.addNotificationMessage(this.client_notifications.poo_required);\n                }\n                if (poo_rejected) {\n                    this.addNotificationMessage(this.client_notifications.poo_rejected);\n                }\n                //add notification message for SVG clients\n                if (svg_needs_poi_poa) {\n                    this.addNotificationMessage(this.client_notifications.svg_needs_poi_poa);\n                } else if (svg_needs_poa) {\n                    this.addNotificationMessage(this.client_notifications.svg_needs_poa);\n                } else if (svg_needs_poi) {\n                    this.addNotificationMessage(this.client_notifications.svg_needs_poi);\n                } else if (svg_poi_expired) {\n                    this.addNotificationMessage(this.client_notifications.svg_poi_expired);\n                }\n            }\n        }\n\n        if (!is_eu && isMultiplierContract(selected_contract_type) && current_language === 'EN' && is_logged_in) {\n            this.addNotificationMessage(this.client_notifications.deriv_go);\n        } else {\n            this.removeNotificationMessageByKey({ key: this.client_notifications.deriv_go.key });\n        }\n    }\n\n    showCompletedOrderNotification(advertiser_name, order_id) {\n        const notification_key = `p2p_order_${order_id}`;\n        const { setP2POrderTab, navigateToOrderDetails } = this.p2p_order_props;\n        const is_p2p_route = window.location.pathname.includes(routes.cashier_p2p);\n\n        const notification_redirect_action = is_p2p_route\n            ? {\n                  onClick: () => {\n                      setP2POrderTab(order_id);\n                      navigateToOrderDetails(order_id);\n                      this.setP2POrderProps({ ...this.p2p_order_props, order_id });\n\n                      if (this.is_notifications_visible) this.toggleNotificationsModal();\n                      this.refreshNotifications();\n                  },\n                  text: localize('Give feedback'),\n              }\n            : {\n                  route: `${routes.p2p_orders}?order=${order_id}`,\n                  text: localize('Give feedback'),\n              };\n\n        this.addNotificationMessage({\n            action: notification_redirect_action,\n            header: <Localize i18n_default_text='Your order {{order_id}} is complete' values={{ order_id }} />,\n            key: notification_key,\n            message: (\n                <Localize\n                    i18n_default_text='{{name}} has released your funds. <br/> Would you like to give your feedback?'\n                    values={{ name: advertiser_name }}\n                />\n            ),\n            platform: 'P2P',\n            type: 'p2p_completed_order',\n        });\n    }\n\n    markNotificationMessage({ key }) {\n        if (!this.marked_notifications.includes(key)) {\n            this.marked_notifications.push(key);\n            LocalStore.set('marked_notifications', JSON.stringify(this.marked_notifications));\n        }\n    }\n\n    refreshNotifications() {\n        this.removeNotifications(true);\n        this.removeAllNotificationMessages();\n        this.setClientNotifications();\n        this.handleClientNotifications();\n    }\n\n    removeAllNotificationMessages(should_close_persistent = false) {\n        this.notification_messages = should_close_persistent\n            ? []\n            : [...this.notification_messages.filter(notifs => notifs.is_persistent)];\n    }\n\n    removeNotifications(should_close_persistent) {\n        this.notifications = should_close_persistent\n            ? []\n            : [...this.notifications.filter(notifs => notifs.is_persistent)];\n    }\n\n    removeTradeNotifications(id) {\n        this.trade_notifications = id ? this.trade_notifications.filter(item => item.id !== id) : [];\n    }\n\n    removeNotificationByKey({ key }) {\n        this.notifications = this.notifications.filter(n => n.key !== key);\n    }\n\n    removeNotificationMessage({ key, should_show_again } = {}) {\n        if (!key) return;\n        this.notification_messages = this.notification_messages.filter(n => n.key !== key);\n        // Add notification messages to LocalStore when user closes, check for redundancy\n        const active_loginid = LocalStore.get('active_loginid');\n        if (!excluded_notifications.includes(key) && active_loginid) {\n            let messages = LocalStore.getObject('notification_messages');\n            // Check if same message already exists in LocalStore for this account\n            if (messages[active_loginid] && messages[active_loginid].includes(key)) {\n                return;\n            }\n            const getCurrentMessage = () => {\n                if (Array.isArray(messages[active_loginid])) {\n                    messages[active_loginid].push(key);\n                    return messages[active_loginid];\n                }\n                return [key];\n            };\n            if (!should_show_again) {\n                // Store message into LocalStore upon closing message\n                messages = { ...messages, [active_loginid]: getCurrentMessage() };\n                LocalStore.setObject('notification_messages', messages);\n            }\n        }\n    }\n\n    removeNotificationMessageByKey({ key }) {\n        this.notification_messages = this.notification_messages.filter(n => n.key !== key);\n    }\n\n    resetVirtualBalanceNotification(loginid) {\n        const { accounts, is_logged_in } = this.root_store.client;\n        if (!is_logged_in) return;\n        if (!accounts[loginid]?.is_virtual) return;\n        const min_reset_limit = 1000;\n        const max_reset_limit = 999000;\n        const balance = parseInt(accounts[loginid]?.balance);\n\n        // Display notification message to user with virtual account to reset their balance\n        // if the balance is less than equals to 1000 or more than equals to 999000\n        if (balance <= min_reset_limit || balance >= max_reset_limit) {\n            let message = localize(\n                'Your demo account balance is low. Reset your balance to continue trading from your demo account.'\n            );\n            if (balance >= max_reset_limit)\n                message = localize(\n                    'Your demo account balance has reached the maximum limit, and you will not be able to place new trades. Reset your balance to continue trading from your demo account.'\n                );\n            this.setClientNotifications({ resetVirtualBalance: this.root_store.client.resetVirtualBalance, message });\n            this.addNotificationMessage(this.client_notifications.reset_virtual_balance);\n        } else {\n            this.removeNotificationByKey({ key: 'reset_virtual_balance' });\n            this.removeNotificationMessage({ key: 'reset_virtual_balance', should_show_again: true });\n        }\n    }\n\n    setClientNotifications(client_data = {}) {\n        const { ui } = this.root_store;\n        const { has_enabled_two_fa, setTwoFAChangedStatus, logout } = this.root_store.client;\n        const { setMT5NotificationModal } = this.root_store.traders_hub;\n        const two_fa_status = has_enabled_two_fa ? localize('enabled') : localize('disabled');\n\n        const platform_name_trader = getPlatformSettings('trader').name;\n        const platform_name_go = getPlatformSettings('go').name;\n\n        const notifications = {\n            ask_financial_risk_approval: {\n                key: 'ask_financial_risk_approval',\n                header: localize('Complete your Appropriateness Test'),\n                message: localize('Please click the following link to complete your Appropriateness Test.'),\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Click here'),\n                },\n                type: 'warning',\n            },\n            ask_uk_funds_protection: {\n                key: 'ask_uk_funds_protection',\n                header: localize('Your cashier is locked'),\n                message: localize('See how we protect your funds to unlock the cashier.'),\n                action: {\n                    route: routes.cashier_deposit,\n                    text: localize('Find out more'),\n                },\n                type: 'warning',\n            },\n            authenticate: {\n                key: 'authenticate',\n                header: localize('Your account has not been verified'),\n                message: localize(\n                    'Please submit your proof of identity and proof of address to verify your account in your account settings to access the cashier.'\n                ),\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            cashier_locked: {\n                key: 'cashier_locked',\n                header: localize('Your cashier is currently locked'),\n                message: localize('Please contact us via live chat to unlock it.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'warning',\n            },\n            trustpilot: {\n                key: 'trustpilot',\n                header: localize('Enjoy using Deriv?'),\n                header_popup: localize('We’d love to hear your thoughts'),\n                message: localize('Drop your review on Trustpilot.'),\n                message_popup: localize('Drop your review on Trustpilot.'),\n                action: {\n                    onClick: () => {\n                        window.open('https://www.trustpilot.com/evaluate/deriv.com', '_blank');\n                        this.removeNotificationByKey({ key: this.client_notifications.trustpilot.key });\n                        this.removeNotificationMessage({\n                            key: this.client_notifications.trustpilot.key,\n                            should_show_again: false,\n                        });\n                    },\n                    text: localize('Go to Trustpilot'),\n                },\n                img_src: getUrlBase('/public/images/common/trustpilot_banner.png'),\n                img_alt: 'Trustpilot',\n                className: 'trustpilot',\n                type: 'trustpilot',\n            },\n            currency: {\n                key: 'currency',\n                header: localize('You have not selected your account currency'),\n                message: localize('Please set your account currency to enable deposits and withdrawals.'),\n                action: {\n                    onClick: () => {\n                        ui.openRealAccountSignup('set_currency');\n                    },\n                    text: localize('Set my account currency'),\n                },\n                type: 'danger',\n            },\n            p2p_daily_limit_increase: (currency, max_daily_buy, max_daily_sell) => {\n                return {\n                    action: window.location.pathname.includes(routes.cashier_p2p)\n                        ? {\n                              onClick: () => {\n                                  this.p2p_redirect_to.routeToMyProfile();\n                                  if (this.is_notifications_visible) this.toggleNotificationsModal();\n\n                                  this.removeNotificationMessage({\n                                      key: 'p2p_daily_limit_increase',\n                                      should_show_again: false,\n                                  });\n                              },\n                              text: localize('Yes, increase my limits'),\n                          }\n                        : {\n                              route: routes.p2p_my_profile,\n                              text: localize('Yes, increase my limits'),\n                          },\n                    header: <Localize i18n_default_text='Enjoy higher daily limits' />,\n                    key: 'p2p_daily_limit_increase',\n                    message: (\n                        <Localize\n                            i18n_default_text='Would you like to increase your daily limits to {{max_daily_buy}} {{currency}} (buy) and {{max_daily_sell}} {{currency}} (sell)?'\n                            values={{\n                                currency,\n                                max_daily_buy: formatMoney(client_data.currency, max_daily_buy, true),\n                                max_daily_sell: formatMoney(client_data.currency, max_daily_sell, true),\n                            }}\n                        />\n                    ),\n                    platform: 'P2P',\n                    type: 'announce',\n                };\n            },\n            deriv_go: {\n                key: 'deriv_go',\n                header: <Localize i18n_default_text='Trade on the go' />,\n                message: (\n                    <Localize\n                        i18n_default_text='Get a faster mobile trading experience with the <0>{{platform_name_go}}</0> app!'\n                        components={[<StaticUrl key={0} className='link dark' href='/landing/deriv-go' />]}\n                        values={{ platform_name_go }}\n                    />\n                ),\n                cta_btn: {\n                    text: localize('Learn more'),\n                    onClick: () => {\n                        window.open(getStaticUrl('/landing/deriv-go'), '_blank');\n                    },\n                },\n                img_src: getUrlBase('/public/images/common/derivgo_banner.png'),\n                img_alt: 'deriv_go',\n                type: 'promotions',\n            },\n            documents_expired: {\n                key: 'poi_expired',\n                header: localize('You submitted expired identification documents'),\n                message: localize('Please submit valid identity documents to unlock the cashier.'),\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Submit identity documents'),\n                },\n                type: 'danger',\n            },\n            document_needs_action: {\n                key: 'document_needs_action',\n                header: localize('Authentication failed'),\n                message: (\n                    <Localize\n                        i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                        components={[<BinaryLink key={0} className='link' to={routes.proof_of_identity} />]}\n                    />\n                ),\n                type: 'warning',\n            },\n            dp2p: {\n                key: 'dp2p',\n                header: localize('Payment problems?'),\n                message: localize('There’s an app for that'),\n                primary_btn: {\n                    text: localize('Learn more'),\n                    onClick: () => {\n                        window.open(getStaticUrl('/p2p'), '_blank');\n                    },\n                },\n                img_src: getUrlBase('/public/images/common/dp2p_banner.png'),\n                img_alt: 'Deriv P2P',\n                type: 'news',\n            },\n            identity: {\n                key: 'identity',\n                header: localize('Let’s verify your ID'),\n                message: localize(\n                    'You need to make a quick identity verification before you can access the Cashier. Please go to your account settings to submit your proof of identity.'\n                ),\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            install_pwa: {\n                key: 'install_pwa',\n                action: {\n                    onClick: () => ui.installWithDeferredPrompt(),\n                    text: localize('Install'),\n                },\n                header: localize('Install the {{platform_name_trader}} web app', { platform_name_trader }),\n                message: localize('Launch {{platform_name_trader}} in seconds the next time you want to trade.', {\n                    platform_name_trader,\n                }),\n                type: 'announce',\n                should_hide_close_btn: false,\n            },\n            is_virtual: {\n                key: 'is_virtual',\n                header: localize('You are on your demo account'),\n                message: localize('Please switch to your real account or create one to access the cashier.'),\n                type: 'warning',\n            },\n            max_turnover_limit_not_set: {\n                key: 'max_turnover_limit_not_set',\n                header: localize('You’ve not set your 30-day turnover limit'),\n                message: localize(\n                    'Your access to the cashier has been temporarily disabled as you have not set your 30-day turnover limit. Please go to Self-exclusion and set the limit.'\n                ),\n                action: {\n                    route: routes.self_exclusion,\n                    text: localize('Go to Self-exclusion'),\n                },\n                type: 'danger',\n            },\n            mt5_withdrawal_locked: {\n                key: 'mt5_withdrawal_locked',\n                header: localize('MT5 withdrawal disabled'),\n                message: localize(\n                    'MT5 withdrawals have been disabled on your account. Please check your email for more details.'\n                ),\n                type: 'warning',\n            },\n            needs_poa: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Verify address'),\n                },\n                key: 'needs_poa',\n                header: localize('Please verify your proof of address'),\n                message: localize('To continue trading with us, please confirm where you live.'),\n                type: 'danger',\n            },\n            needs_poi: {\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Verify identity'),\n                },\n                key: 'needs_poi',\n                header: localize('Please verify your proof of identity'),\n                message: localize('To continue trading with us, please confirm who you are.'),\n                type: 'danger',\n            },\n            needs_poinc: {\n                action: {\n                    route: routes.proof_of_income,\n                    text: localize('Go to my account settings'),\n                },\n                key: 'needs_poinc',\n                header: localize('Please verify your proof of income'),\n                message: localize('To continue trading with us, please submit your proof of income.'),\n                type: 'warning',\n            },\n\n            new_version_available: {\n                action: {\n                    onClick: () => window.location.reload(),\n                    text: localize('Refresh now'),\n                },\n                key: 'new_version_available',\n                header: localize('A new version of Deriv is available'),\n                message: localize('This page will automatically refresh in 5 minutes to load the latest version.'),\n                type: 'warning',\n                should_hide_close_btn: true,\n                timeout: 300000,\n                timeoutMessage: remaining => localize('Auto update in {{ remaining }} seconds', { remaining }),\n            },\n            no_residence: {\n                key: 'no_residence',\n                header: localize('You have not selected your country of residence'),\n                message: localize(\n                    'Please set your country of residence in your account settings to access the cashier.'\n                ),\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            no_withdrawal_or_trading: {\n                key: 'no_withdrawal_or_trading',\n                header: localize('You are only allowed to make deposits'),\n                message: localize('Please contact us via live chat to enable withdrawals.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'warning',\n            },\n            notify_financial_assessment: {\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Start now'),\n                },\n                header: localize('Pending action required'),\n                key: 'notify_financial_assessment',\n                message: localize('Please complete your financial assessment.'),\n                should_show_again: true,\n                type: 'warning',\n            },\n            password_changed: {\n                key: 'password_changed',\n                header: localize('Password updated.'),\n                message: <Localize i18n_default_text='Please log in with your updated password.' />,\n                type: 'info',\n            },\n            poa_rejected_for_mt5: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Resubmit proof of address'),\n                },\n                key: 'poa_rejected_for_mt5',\n                header: localize('Please resubmit your proof of address or we may restrict your account.'),\n                message: localize('Please submit your proof of address.'),\n                type: 'danger',\n            },\n            poa_failed: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Resubmit proof of address'),\n                },\n                key: 'poa_failed',\n                header: localize('Please resubmit your proof of address.'),\n                type: 'danger',\n            },\n            poa_verified: {\n                key: 'poa_verified',\n                header: localize('Your proof of address is verified.'),\n                type: 'announce',\n                should_hide_close_btn: false,\n            },\n            poa_expired: {\n                key: 'poa_expired',\n                header: <Localize i18n_default_text='Lets get your address verified' />,\n                message: <Localize i18n_default_text='Please submit your proof of address' />,\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Submit now'),\n                },\n            },\n            poi_failed: {\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Resubmit proof of identity'),\n                },\n                key: 'poi_failed',\n                header: localize('Your proof of identity verification has failed'),\n                message: localize('Please submit your proof of identity.'),\n                type: 'danger',\n            },\n            poi_verified: {\n                key: 'poi_verified',\n                header: localize('Your proof of identity is verified.'),\n                type: 'announce',\n                should_hide_close_btn: false,\n            },\n            poi_name_mismatch: {\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Personal details'),\n                },\n                key: 'poi_name_mismatch',\n                header: localize('Please update your personal info'),\n                message: (\n                    <Localize\n                        i18n_default_text='It seems that your name in the document is not the same as your Deriv profile. Please update your name in the <0>Personal details</0> page to solve this issue.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n                type: 'warning',\n            },\n            poinc_upload_limited: {\n                key: 'poinc_upload_limited',\n                header: localize(\"You've reached the limit of uploading your documents.\"),\n                message: localize('Please check your email.'),\n                type: 'danger',\n            },\n            resticted_mt5_with_pending_poa: {\n                key: 'resticted_mt5_with_pending_poa',\n                header: localize('Your proof of address verification is pending'),\n                message: localize(\n                    'Your address verification is pending, and we’ve placed some restrictions on your account. The restrictions will be lifted once your address is verified.'\n                ),\n                type: 'danger',\n            },\n            resticted_mt5_with_failed_poa: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Resubmit proof of address'),\n                },\n                key: 'resticted_mt5_with_failed_poa',\n                header: localize('Your proof of address verification has failed'),\n                message: localize(\n                    'Your proof of address did not pass our verification checks, and we’ve placed some restrictions on your account. Please resubmit your proof of address.'\n                ),\n                type: 'danger',\n            },\n            required_fields: (withdrawal_locked, deposit_locked) => {\n                let message;\n                if (withdrawal_locked) {\n                    message = localize(\n                        'Please go to your account settings and complete your personal details to enable withdrawals.'\n                    );\n                } else if (deposit_locked) {\n                    message = localize(\n                        'Please go to your account settings and complete your personal details to enable deposits.'\n                    );\n                } else {\n                    message = localize(\n                        'Please go to your account settings and complete your personal details to enable deposits and withdrawals.'\n                    );\n                }\n                return {\n                    key: 'required_fields',\n                    header: localize('Your personal details are incomplete'),\n                    message,\n                    type: 'danger',\n                    action: {\n                        route: routes.personal_details,\n                        text: localize('Go to my account settings'),\n                    },\n                };\n            },\n            reset_virtual_balance: {\n                key: 'reset_virtual_balance',\n                header: localize('Reset your balance'),\n                message: client_data.message,\n                type: 'info',\n                is_persistent: true,\n                should_show_again: true,\n                is_disposable: true,\n                action: {\n                    text: localize('Reset balance'),\n                    onClick: async () => {\n                        await client_data.resetVirtualBalance();\n                    },\n                },\n            },\n            risk: {\n                key: 'risk',\n                header: localize('Your cashier is locked'),\n                message: localize('Please complete the financial assessment in your account settings to unlock it.'),\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            self_exclusion: excluded_until => {\n                return {\n                    key: 'self_exclusion',\n                    header: localize('You have self-excluded from trading'),\n                    message: (\n                        <Localize\n                            i18n_default_text='You have chosen to exclude yourself from trading on our website until {{exclusion_end}}. If you are unable to place a trade or deposit after your self-exclusion period, please contact us via live chat.'\n                            values={{\n                                exclusion_end: formatDate(excluded_until, 'DD MMM, YYYY'),\n                                interpolation: { escapeValue: false },\n                            }}\n                        />\n                    ),\n                    action: {\n                        onClick: () => {\n                            window.LC_API.open_chat_window();\n                        },\n                        text: localize('Go to live chat'),\n                    },\n                    type: 'danger',\n                };\n            },\n            site_maintenance: {\n                key: 'site_maintenance',\n                header: localize('We’re updating our site'),\n                message: localize('Some services may be temporarily unavailable.'),\n                type: 'warning',\n                should_show_again: true,\n                closeOnClick: notification_obj => this.markNotificationMessage({ key: notification_obj.key }),\n            },\n            system_maintenance: (withdrawal_locked, deposit_locked) => {\n                let message, header;\n                if (isCryptocurrency(client_data.currency)) {\n                    if (withdrawal_locked) {\n                        header = localize('Unable to process withdrawals in the moment');\n                        message = localize(\n                            'Withdrawals are temporarily unavailable due to system maintenance. You can make withdrawals when the maintenance is complete.'\n                        );\n                    } else if (deposit_locked) {\n                        header = localize('Unable to process deposit in the moment');\n                        message = localize(\n                            'Deposits are temporarily unavailable due to system maintenance. You can make deposits when the maintenance is complete.'\n                        );\n                    } else {\n                        header = localize('Scheduled cashier system maintenance');\n                        message = localize(\n                            'Our cryptocurrency cashier is temporarily down due to system maintenance. You can make cryptocurrency deposits and withdrawals in a few minutes when the maintenance is complete.'\n                        );\n                    }\n                } else {\n                    header = localize('Scheduled cashier maintenance');\n                    message = localize(\n                        'The cashier is temporarily down due to maintenance. It will be available as soon as the maintenance is complete.'\n                    );\n                }\n                return {\n                    key: 'system_maintenance',\n                    header,\n                    message,\n                    type: 'warning',\n                    should_show_again: true,\n                    closeOnClick: notification_obj => this.markNotificationMessage({ key: notification_obj.key }),\n                };\n            },\n            tax: {\n                key: 'tax',\n                header: localize('You have not provided your tax identification number'),\n                message: localize(\n                    'This information is necessary for legal and regulatory requirements. Please go to your account settings, and fill in your latest tax identification number.'\n                ),\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'danger',\n            },\n            tnc: {\n                action: {\n                    onClick: async () => {\n                        await WS.tncApproval();\n                        WS.getSettings();\n                    },\n                    text: localize('I accept'),\n                },\n                key: 'tnc',\n                header: localize('Terms & conditions updated'),\n                message: (\n                    <Localize\n                        i18n_default_text='Please accept our <0>updated Terms and Conditions</0> to proceed.'\n                        components={[<StaticUrl key={0} className='link' href='terms-and-conditions' />]}\n                    />\n                ),\n                type: 'warning',\n            },\n            has_changed_two_fa: {\n                key: 'has_changed_two_fa',\n                header: localize('Logging out on other devices'),\n                message: (\n                    <Localize\n                        i18n_default_text=\"You've {{two_fa_status}} 2FA on this device. You'll be logged out of your account on other devices (if any). Use your password and a 2FA code to log back in.\"\n                        values={{ two_fa_status }}\n                    />\n                ),\n                type: 'info',\n                delay: 4000,\n                is_auto_close: true,\n                closeOnClick: () => {\n                    setTwoFAChangedStatus(false);\n                },\n            },\n            two_f_a: {\n                key: 'two_f_a',\n                header: localize('Stronger security for your Deriv account'),\n                message: localize(\n                    'With two-factor authentication, you’ll protect your account with both your password and your phone - so only you can access your account, even if someone knows your password.'\n                ),\n                action: {\n                    route: routes.two_factor_authentication,\n                    text: localize('Secure my account'),\n                },\n                type: 'warning',\n            },\n            unwelcome: {\n                key: 'unwelcome',\n                header: localize('Deposits are locked'),\n                message: localize('Please contact us via live chat.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'danger',\n            },\n            withdrawal_locked: {\n                key: 'withdrawal_locked',\n                header: localize('You are only allowed to make deposits'),\n                message: localize('Please contact us via live chat to enable withdrawals.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'warning',\n            },\n            withdrawal_locked_review: {\n                key: 'withdrawal_locked_review',\n                header: localize('You are unable to make withdrawals'),\n                message: (\n                    <Localize\n                        i18n_default_text='To enable withdrawals, please submit your <0>Proof of Identity (POI)</0> and <1>Proof of Address (POA)</1> and also complete the <2>financial assessment</2> in your account settings.'\n                        components={[\n                            <a key={0} className='link dark' href={'/account/proof-of-identity'} />,\n                            <a key={1} className='link dark' href={'/account/proof-of-address'} />,\n                            <a key={2} className='link dark' href={'/account/financial-assessment'} />,\n                        ]}\n                    />\n                ),\n                type: 'warning',\n            },\n            you_are_offline: {\n                key: 'you_are_offline',\n                header: localize('You are offline'),\n                message: <Localize i18n_default_text='Check your connection.' />,\n                type: 'danger',\n            },\n            poi_dob_mismatch: {\n                key: 'poi_dob_mismatch',\n                header: localize('Please update your personal info'),\n                message: (\n                    <Localize\n                        i18n_default_text='It seems that your date of birth in the document is not the same as your Deriv profile. Please update your date of birth in the <0>Personal details</0> page to solve this issue.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Personal details'),\n                },\n            },\n            poo_required: {\n                key: 'poo_required',\n                header: (\n                    <Localize\n                        i18n_default_text='<0>Proof of ownership</0> <1>required</1>'\n                        components={[<div key={0} />, <div key={1} />]}\n                    />\n                ),\n                message: (\n                    <Localize\n                        i18n_default_text='<0></0><1>Your account is currently locked</1> <2></2><3>Please upload your proof of</3> <4>ownership to unlock your account.</4> <5></5>'\n                        components={[\n                            <br key={0} />,\n                            <div key={1} />,\n                            <br key={2} />,\n                            <div key={3} />,\n                            <div key={4} />,\n                            <br key={5} />,\n                        ]}\n                    />\n                ),\n                action: {\n                    route: routes.proof_of_ownership,\n                    text: localize('Upload my document'),\n                },\n                type: 'warning',\n            },\n            poo_rejected: {\n                key: 'poo_rejected',\n                header: (\n                    <Localize\n                        i18n_default_text='<0>Proof of ownership</0> <1>verification failed</1>'\n                        components={[<div key={0} />, <div key={1} />]}\n                    />\n                ),\n                message: (\n                    <Localize\n                        i18n_default_text='<0></0><1>Please upload your document</1> <2>with the correct details.</2> <3></3>'\n                        components={[<br key={0} />, <div key={1} />, <div key={2} />, <br key={3} />]}\n                    />\n                ),\n                action: {\n                    route: routes.proof_of_ownership,\n                    text: localize('Upload again'),\n                },\n                type: 'warning',\n            },\n            need_fa: {\n                key: 'need_fa',\n                header: localize('You can only make deposits.'),\n                message: (\n                    <Localize i18n_default_text='You can only make deposits at the moment. To enable withdrawals, please complete your financial assessment.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Start assessment'),\n                },\n                should_show_again: true,\n                closeOnClick: notification_obj => this.markNotificationMessage({ key: notification_obj.key }),\n            },\n            svg_needs_poi_poa: {\n                key: 'svg_needs_poi_poa',\n                header: localize('Account verification required'),\n                message: (\n                    <Localize i18n_default_text='Please submit your proof of identity and proof of address to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Go to my account settings'),\n                },\n            },\n            svg_needs_poa: {\n                key: 'svg_needs_poa',\n                header: localize('Proof of address required'),\n                message: (\n                    <Localize i18n_default_text='Please submit your proof of address to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Submit proof of address'),\n                },\n            },\n            svg_needs_poi: {\n                key: 'svg_needs_poi',\n                header: localize('Proof of identity required'),\n                message: (\n                    <Localize i18n_default_text='Please submit your proof of identity to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Submit proof of identity'),\n                },\n            },\n            svg_poi_expired: {\n                key: 'svg_poi_expired',\n                header: localize('Your proof of identity is expired'),\n                message: (\n                    <Localize i18n_default_text='Your proof of identity has expired. Please submit a new proof of identity to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Resubmit proof of identity'),\n                },\n            },\n            wallets_migrated: {\n                key: 'wallets_migrated',\n                header: localize('Your Wallets are ready'),\n                message: localize(\n                    'To complete the upgrade, please log out and log in again to add more accounts and make transactions with your Wallets.'\n                ),\n                action: {\n                    onClick: async () => {\n                        await logout();\n                    },\n                    text: localize('Log out'),\n                },\n                type: 'announce',\n            },\n            wallets_failed: {\n                key: 'wallets_failed',\n                header: localize('Sorry for the interruption'),\n                message: localize(\n                    \"We're unable to complete with the Wallet upgrade. Please try again later or contact us via live chat.\"\n                ),\n                action: {\n                    onClick: async () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to LiveChat'),\n                },\n                type: 'danger',\n            },\n            mt5_notification: {\n                key: 'mt5_notification',\n                header: localize('Deriv MT5: Your action is needed'),\n                message: localize('Follow these simple instructions to fix it.'),\n                action: {\n                    text: localize('Learn more'),\n                    onClick: () => {\n                        setMT5NotificationModal(true);\n                    },\n                },\n                type: 'warning',\n            },\n            additional_kyc_info: {\n                key: 'additional_kyc_info',\n                header: <Localize i18n_default_text='Pending action required' />,\n                message: (\n                    <Localize i18n_default_text='We require additional information for your Deriv MT5 account(s). Please take a moment to update your information now.' />\n                ),\n                action: {\n                    text: localize('Update now'),\n                    onClick: () => {\n                        if (this.is_notifications_visible) this.toggleNotificationsModal();\n                        ui.toggleAdditionalKycInfoModal();\n                        this.markNotificationMessage({ key: 'additional_kyc_info' });\n                    },\n                },\n                type: 'warning',\n            },\n        };\n\n        this.client_notifications = notifications;\n    }\n\n    setP2POrderProps(p2p_order_props) {\n        this.p2p_order_props = p2p_order_props;\n    }\n\n    setP2PRedirectTo(p2p_redirect_to) {\n        this.p2p_redirect_to = p2p_redirect_to;\n    }\n\n    setShouldShowPopups(should_show_popups) {\n        this.should_show_popups = should_show_popups;\n    }\n\n    toggleNotificationsModal() {\n        this.is_notifications_visible = !this.is_notifications_visible;\n    }\n\n    unmarkNotificationMessage({ key }) {\n        this.marked_notifications = this.marked_notifications.filter(item => key !== item);\n    }\n\n    updateNotifications() {\n        this.notifications = this.notification_messages.filter(message =>\n            ['svg', 'p2p'].some(key => message.key?.includes(key))\n                ? message\n                : excluded_notifications && !excluded_notifications.includes(message.key)\n        );\n    }\n\n    handlePOAAddressMismatchNotifications = () => {\n        const { client } = this.root_store;\n        const { account_status } = client;\n        const { status } = account_status;\n        const { poa_address_mismatch } = getStatusValidations(status || []);\n\n        if (poa_address_mismatch) {\n            this.showPOAAddressMismatchWarningNotification();\n        }\n    };\n\n    showPOAAddressMismatchWarningNotification = () => {\n        this.addNotificationMessage({\n            key: 'poa_address_mismatch_warning',\n            header: localize('Please update your address'),\n            message: localize(\n                'It appears that the address in your document doesn’t match the address in your Deriv profile. Please update your personal details now with the correct address.'\n            ),\n            action: {\n                route: routes.personal_details,\n                text: localize('Go to Personal details'),\n            },\n            type: 'warning',\n            should_show_again: true,\n        });\n    };\n\n    showPOAAddressMismatchSuccessNotification = () => {\n        this.addNotificationMessage({\n            key: 'poa_address_mismatch_success',\n            header: localize('Your proof of address has been verified'),\n            type: 'announce',\n            should_show_again: true,\n            platform: 'Account',\n        });\n    };\n\n    showPOAAddressMismatchFailureNotification = () => {\n        this.addNotificationMessage({\n            key: 'poa_address_mismatch_failure',\n            header: localize('Your address doesn’t match your profile'),\n            message: localize('Update the address in your profile.'),\n            type: 'danger',\n            should_show_again: true,\n            platform: 'Account',\n        });\n    };\n\n    async getP2pCompletedOrders() {\n        await WS.wait('authorize');\n        const response = await WS.send?.({ p2p_order_list: 1, active: 0 });\n\n        if (!response?.error) {\n            this.p2p_completed_orders = response?.p2p_order_list?.list || [];\n        }\n    }\n}\n","import { action, autorun, computed, makeObservable, observable } from 'mobx';\n\nimport { isMobile, isTouchDevice, routes } from '@deriv/shared';\n\nimport { MAX_MOBILE_WIDTH, MAX_TABLET_WIDTH } from 'Constants/ui';\n\nimport BaseStore from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    url_hashed_values = '';\n    is_account_settings_visible = false;\n    is_positions_drawer_on = false;\n    is_reports_visible = false;\n    reports_route_tab_index = 0;\n    is_cashier_visible = false;\n    is_history_tab_active = false;\n    // TODO: [cleanup ui-store]\n    // Take profit, Stop loss & Deal cancellation checkbox\n    should_show_cancellation_warning = true;\n\n    // Extensions\n    footer_extensions = [];\n    header_extension = undefined;\n    settings_extension = undefined;\n    notification_messages_ui = undefined;\n\n    is_dark_mode_on = window?.matchMedia?.('(prefers-color-scheme: dark)').matches && isMobile();\n    is_settings_modal_on = false;\n    is_language_settings_modal_on = false;\n    is_mobile_language_menu_open = false;\n    is_accounts_switcher_on = false;\n    account_switcher_disabled_message = '';\n\n    has_only_forward_starting_contracts = false;\n    has_read_scam_message = localStorage.getItem('readScamMessage') || false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    is_services_error_visible = false;\n    is_unsupported_contract_modal_visible = false;\n    is_new_account = localStorage.getItem('isNewAccount') || false;\n    is_account_signup_modal_visible = false;\n    is_link_expired_modal_visible = false;\n    is_set_residence_modal_visible = false;\n    is_reset_password_modal_visible = false;\n    is_reset_email_modal_visible = false;\n    is_update_email_modal_visible = false;\n    is_reset_trading_password_modal_visible = false;\n    is_mf_verification_pending_modal_visible = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    is_chart_countdown_visible = false;\n    is_chart_layout_default = true;\n\n    // PWA event and config\n    pwa_prompt_event = null;\n\n    screen_width = window.innerWidth;\n    screen_height = window.innerHeight;\n    is_onscreen_keyboard_active = false;\n\n    is_advanced_duration = false;\n    advanced_duration_unit = 't';\n    advanced_expiry_type = 'duration';\n    simple_duration_unit = 't';\n    duration_t = 5;\n    duration_s = 15;\n    duration_m = 3;\n    duration_h = 1;\n    duration_d = 1;\n\n    // purchase button states\n    purchase_states = [false, false];\n\n    // app states for modal\n    is_app_disabled = false;\n    is_route_modal_on = false;\n\n    // real account signup\n    is_real_acc_signup_on = false;\n    is_from_signup_account = false;\n    real_account_signup_target = undefined;\n    deposit_real_account_signup_target = undefined;\n    has_real_account_signup_ended = false;\n\n    // verification modal\n    is_verification_modal_visible = false;\n\n    //verification document submitted modal\n    is_verification_submitted = false;\n\n    // set currency modal\n    is_set_currency_modal_visible = false;\n\n    // position states\n    show_positions_toggle = true;\n\n    modal_index = 0;\n\n    // Mt5 topup\n    is_top_up_virtual_open = false;\n    is_top_up_virtual_in_progress = false;\n    is_top_up_virtual_success = false;\n\n    // MT5 create real STP from demo, show only real accounts from switcher\n    should_show_real_accounts_list = false;\n\n    // Real account signup\n    real_account_signup = {\n        active_modal_index: -1,\n        previous_currency: '',\n        current_currency: '',\n        success_message: '',\n        error_message: '',\n    };\n\n    // UI Focus retention\n    current_focus = null;\n\n    // Mobile\n    mobile_toast_timeout = 3500;\n    toasts = [];\n\n    is_cfd_page = false;\n    is_nativepicker_visible = false;\n    is_landscape = false;\n\n    prompt_when = false;\n    promptFn = () => {};\n\n    //warn user if they want to close create real account modal\n    is_closing_create_real_account_modal = false;\n\n    // MT5 account needed modal\n    is_account_needed_modal_on = false;\n    is_mt5_migration_modal_open = false;\n    account_needed_modal_props = {\n        target: '',\n        target_label: '',\n        target_dmt5_label: '',\n    };\n    is_mt5_verification_failed_modal = false;\n\n    manage_real_account_tab_index = 0;\n\n    //traders-hub\n    is_real_tab_enabled = false;\n\n    choose_crypto_currency_target = null;\n\n    // add crypto accounts\n    should_show_cancel = false;\n\n    should_show_risk_warning_modal = false;\n    should_show_appropriateness_warning_modal = false;\n    should_show_risk_accept_modal = false;\n    should_show_cooldown_modal = false;\n    should_show_trading_assessment_modal = false;\n    should_show_account_success_modal = false;\n    should_show_one_time_deposit_modal = false;\n    should_show_trade_assessment_form = false;\n    should_trigger_tour_guide = false;\n    is_from_success_deposit_modal = false;\n    is_trading_assessment_for_existing_user_enabled = false;\n    is_trading_assessment_for_new_user_enabled = false;\n    should_show_assessment_complete_modal = false;\n    app_contents_scroll_ref = null;\n    is_deriv_account_needed_modal_visible = false;\n    is_wallet_modal_visible = false;\n    is_ready_to_deposit_modal_visible = false;\n    is_need_real_account_for_cashier_modal_visible = false;\n    is_switch_to_deriv_account_modal_visible = false;\n    is_cfd_reset_password_modal_enabled = false;\n    is_mt5_migration_modal_enabled = false;\n    sub_section_index = 0;\n\n    is_additional_kyc_info_modal_open = false;\n    is_kyc_information_submitted_modal_open = false;\n\n    getDurationFromUnit = unit => this[`duration_${unit}`];\n\n    constructor(root_store) {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_account_settings_visible',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            'is_warning_scam_message_modal_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n            'should_show_cancellation_warning',\n        ];\n\n        super({ root_store, local_storage_properties, store_name });\n\n        makeObservable(this, {\n            is_additional_kyc_info_modal_open: observable,\n            is_kyc_information_submitted_modal_open: observable,\n            account_needed_modal_props: observable,\n            account_switcher_disabled_message: observable,\n            has_only_forward_starting_contracts: observable,\n            has_read_scam_message: observable,\n            is_ready_to_deposit_modal_visible: observable,\n            is_need_real_account_for_cashier_modal_visible: observable,\n            is_services_error_visible: observable,\n            is_unsupported_contract_modal_visible: observable,\n            is_new_account: observable,\n            is_account_signup_modal_visible: observable,\n            is_link_expired_modal_visible: observable,\n            is_set_residence_modal_visible: observable,\n            is_reset_password_modal_visible: observable,\n            is_reset_email_modal_visible: observable,\n            is_update_email_modal_visible: observable,\n            is_reset_trading_password_modal_visible: observable,\n            is_cfd_reset_password_modal_enabled: observable,\n            sub_section_index: observable,\n            is_chart_countdown_visible: observable,\n            is_chart_layout_default: observable,\n            pwa_prompt_event: observable,\n            screen_width: observable,\n            screen_height: observable,\n            is_onscreen_keyboard_active: observable,\n            is_advanced_duration: observable,\n            advanced_duration_unit: observable,\n            advanced_expiry_type: observable,\n            app_contents_scroll_ref: observable,\n            choose_crypto_currency_target: observable,\n            current_focus: observable,\n            deposit_real_account_signup_target: observable,\n            duration_d: observable,\n            duration_h: observable,\n            duration_m: observable,\n            duration_s: observable,\n            duration_t: observable,\n            footer_extensions: observable,\n            has_real_account_signup_ended: observable,\n            header_extension: observable,\n            is_account_needed_modal_on: observable,\n            is_account_settings_visible: observable,\n\n            is_accounts_switcher_on: observable,\n\n            is_app_disabled: observable,\n            is_cashier_visible: observable,\n            is_cfd_page: observable,\n            is_mt5_verification_failed_modal: observable,\n\n            is_closing_create_real_account_modal: observable,\n            is_dark_mode_on: observable,\n            is_deriv_account_needed_modal_visible: observable,\n            is_from_signup_account: observable,\n            is_wallet_modal_visible: observable,\n\n            is_history_tab_active: observable,\n            is_landscape: observable,\n            is_language_settings_modal_on: observable,\n            is_mf_verification_pending_modal_visible: observable,\n            is_mobile_language_menu_open: observable,\n            is_nativepicker_visible: observable,\n\n            is_positions_drawer_on: observable,\n            is_real_acc_signup_on: observable,\n            is_real_tab_enabled: observable,\n            is_reports_visible: observable,\n            is_route_modal_on: observable,\n            is_set_currency_modal_visible: observable,\n            is_settings_modal_on: observable,\n            is_switch_to_deriv_account_modal_visible: observable,\n            is_top_up_virtual_in_progress: observable,\n            is_top_up_virtual_open: observable,\n            is_top_up_virtual_success: observable,\n            is_trading_assessment_for_existing_user_enabled: observable,\n            is_trading_assessment_for_new_user_enabled: observable,\n            is_verification_modal_visible: observable,\n            is_verification_submitted: observable,\n            is_mt5_migration_modal_open: observable,\n            is_mt5_migration_modal_enabled: observable,\n            manage_real_account_tab_index: observable,\n            modal_index: observable,\n            notification_messages_ui: observable,\n            prompt_when: observable,\n            promptFn: observable,\n            purchase_states: observable,\n            real_account_signup_target: observable,\n            real_account_signup: observable,\n            reports_route_tab_index: observable,\n            settings_extension: observable,\n            should_show_appropriateness_warning_modal: observable,\n            should_show_assessment_complete_modal: observable,\n            should_show_cancel: observable,\n            should_show_cancellation_warning: observable,\n            should_show_cooldown_modal: observable,\n            should_show_account_success_modal: observable,\n            should_show_one_time_deposit_modal: observable,\n            should_show_real_accounts_list: observable,\n            should_show_risk_accept_modal: observable,\n            should_show_risk_warning_modal: observable,\n            should_show_trade_assessment_form: observable,\n            should_show_trading_assessment_modal: observable,\n            should_trigger_tour_guide: observable,\n            is_from_success_deposit_modal: observable,\n            show_positions_toggle: observable,\n            simple_duration_unit: observable,\n            toasts: observable.shallow,\n            addToast: action.bound,\n            closeAccountNeededModal: action.bound,\n            closeRealAccountSignup: action.bound,\n            closeSuccessTopUpModal: action.bound,\n            closeTopUpModal: action.bound,\n            continueRouteAfterChooseCrypto: action.bound,\n            disableApp: action.bound,\n            disableRouteModal: action.bound,\n            enableApp: action.bound,\n            handleResize: action.bound,\n            init: action.bound,\n            installWithDeferredPrompt: action.bound,\n            is_account_switcher_disabled: computed,\n            is_desktop: computed,\n            is_mobile: computed,\n            is_tablet: computed,\n            is_warning_scam_message_modal_visible: computed,\n            url_hashed_values: observable,\n            notifyAppInstall: action.bound,\n            onChangeUiStore: action.bound,\n            openAccountNeededModal: action.bound,\n            openDerivRealAccountNeededModal: action.bound,\n            openPositionsDrawer: action.bound,\n            openRealAccountSignup: action.bound,\n            openSwitchToRealAccountModal: action.bound,\n            openTopUpModal: action.bound,\n            populateFooterExtensions: action.bound,\n            populateHeaderExtensions: action.bound,\n            populateSettingsExtensions: action.bound,\n            removePWAPromptEvent: action.bound,\n            removeToast: action.bound,\n            resetPurchaseStates: action.bound,\n            resetRealAccountSignupParams: action.bound,\n            resetRealAccountSignupTarget: action.bound,\n            setAccountSwitcherDisabledMessage: action.bound,\n            setAppContentsScrollRef: action.bound,\n            setCFDPasswordResetModal: action.bound,\n            setChartCountdown: action.bound,\n            setChartLayout: action.bound,\n            setCurrentFocus: action.bound,\n            setDarkMode: action.bound,\n            setHasOnlyForwardingContracts: action.bound,\n            setHashedValue: action.bound,\n            setIsClosingCreateRealAccountModal: action.bound,\n            setIsFromSignupAccount: action.bound,\n            setIsNativepickerVisible: action.bound,\n            setIsVerificationModalVisible: action.bound,\n            setIsVerificationSubmitted: action.bound,\n            setReportsTabIndex: action.bound,\n            toggleReadyToDepositModal: action.bound,\n            toggleNeedRealAccountForCashierModal: action.bound,\n            toggleShouldShowRealAccountsList: action.bound,\n            shouldNavigateAfterChooseCrypto: action.bound,\n            setIsMT5VerificationFailedModal: action.bound,\n            setShouldShowRiskWarningModal: action.bound,\n            setIsWalletModalVisible: action.bound,\n            setIsNewAccount: action.bound,\n            setIsRealTabEnabled: action.bound,\n            setIsTradingAssessmentForExistingUserEnabled: action.bound,\n            setIsTradingAssessmentForNewUserEnabled: action.bound,\n            setManageRealAccountActiveTabIndex: action.bound,\n            setModalIndex: action.bound,\n            setPromptHandler: action.bound,\n            setPurchaseState: action.bound,\n            setPWAPromptEvent: action.bound,\n            setRealAccountSignupEnd: action.bound,\n            setRealAccountSignupParams: action.bound,\n            setResetTradingPasswordModalOpen: action.bound,\n            setRouteModal: action.bound,\n            setScamMessageLocalStorage: action.bound,\n            setShouldShowAppropriatenessWarningModal: action.bound,\n            setShouldShowAssessmentCompleteModal: action.bound,\n            setShouldShowCancel: action.bound,\n            setShouldShowCooldownModal: action.bound,\n            setShouldShowOneTimeDepositModal: action.bound,\n            setShouldShowTradeAssessmentForm: action.bound,\n            setShouldShowTradingAssessmentModal: action.bound,\n            setShouldShowWarningModal: action.bound,\n            setShouldTriggerTourGuide: action.bound,\n            setIsFromSuccessDepositModal: action.bound,\n            setSubSectionIndex: action.bound,\n            setTopUpInProgress: action.bound,\n            setIsMFVericationPendingModal: action.bound,\n            setMT5MigrationModalEnabled: action.bound,\n            setMobileLanguageMenuOpen: action.bound,\n            toggleAccountsDialog: action.bound,\n            toggleAccountSettings: action.bound,\n            toggleAccountSignupModal: action.bound,\n            toggleCancellationWarning: action.bound,\n            toggleCashier: action.bound,\n            toggleHistoryTab: action.bound,\n            toggleLinkExpiredModal: action.bound,\n            toggleOnScreenKeyboard: action.bound,\n            togglePositionsDrawer: action.bound,\n            toggleReports: action.bound,\n            toggleResetEmailModal: action.bound,\n            toggleResetPasswordModal: action.bound,\n            toggleServicesErrorModal: action.bound,\n            toggleSetCurrencyModal: action.bound,\n            toggleSetResidenceModal: action.bound,\n            toggleSettingsModal: action.bound,\n            toggleLanguageSettingsModal: action.bound,\n            toggleUnsupportedContractModal: action.bound,\n            toggleUpdateEmailModal: action.bound,\n            toggleAccountSuccessModal: action.bound,\n            toggleAdditionalKycInfoModal: action.bound,\n            toggleKycInformationSubmittedModal: action.bound,\n            toggleMT5MigrationModal: action.bound,\n        });\n\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            this.changeTheme();\n        });\n    }\n    changeTheme = () => {\n        if (this.is_dark_mode_on) {\n            document.body.classList.remove('theme--light');\n            document.body.classList.add('theme--dark');\n        } else {\n            document.body.classList.remove('theme--dark');\n            document.body.classList.add('theme--light');\n        }\n    };\n\n    get is_warning_scam_message_modal_visible() {\n        return (\n            this.root_store.client.is_logged_in &&\n            this.root_store.client.is_brazil &&\n            !this.has_read_scam_message &&\n            !this.is_new_account\n        );\n    }\n\n    setIsClosingCreateRealAccountModal(is_closing_create_real_account_modal) {\n        this.is_closing_create_real_account_modal = is_closing_create_real_account_modal;\n    }\n\n    setIsRealTabEnabled(is_real_tab_enabled) {\n        this.is_real_tab_enabled = is_real_tab_enabled;\n    }\n\n    setScamMessageLocalStorage() {\n        localStorage.setItem('readScamMessage', !this.has_read_scam_message);\n        this.has_read_scam_message = localStorage.getItem('readScamMessage') || false;\n    }\n\n    setIsNewAccount() {\n        localStorage.setItem('isNewAccount', !this.is_new_account);\n        this.is_new_account = localStorage.getItem('isNewAccount') || false;\n    }\n\n    setHashedValue(url_hashed_values) {\n        this.url_hashed_values = url_hashed_values;\n    }\n\n    init(notification_messages) {\n        this.setHashedValue(window.location.hash);\n        this.notification_messages_ui = notification_messages;\n    }\n\n    setIsMT5VerificationFailedModal(value) {\n        this.is_mt5_verification_failed_modal = value;\n    }\n\n    setAppContentsScrollRef(value) {\n        this.app_contents_scroll_ref = value;\n    }\n\n    populateFooterExtensions(footer_extensions) {\n        this.footer_extensions = footer_extensions;\n    }\n\n    populateHeaderExtensions(component) {\n        this.header_extension = component;\n    }\n\n    populateSettingsExtensions(menu_items) {\n        this.settings_extension = menu_items;\n    }\n\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        this.screen_height = window.innerHeight;\n    }\n\n    setPromptHandler(condition, cb = () => {}) {\n        this.prompt_when = condition;\n        this.promptFn = cb;\n    }\n\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    get is_tablet() {\n        return MAX_MOBILE_WIDTH < this.screen_width && this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    get is_desktop() {\n        // TODO: remove tablet once there is a design for the specific size.\n        return this.is_tablet || this.screen_width > MAX_TABLET_WIDTH;\n    }\n\n    get is_account_switcher_disabled() {\n        return !!this.account_switcher_disabled_message;\n    }\n\n    setRouteModal() {\n        this.is_route_modal_on = true;\n    }\n\n    disableRouteModal() {\n        this.is_route_modal_on = false;\n    }\n\n    disableApp() {\n        this.is_app_disabled = true;\n    }\n\n    enableApp() {\n        this.is_app_disabled = false;\n    }\n\n    toggleAccountsDialog(status = !this.is_accounts_switcher_on) {\n        this.is_accounts_switcher_on = status;\n    }\n\n    setAccountSwitcherDisabledMessage(message) {\n        if (message) {\n            this.is_accounts_switcher_on = false;\n            this.account_switcher_disabled_message = message;\n        } else {\n            this.account_switcher_disabled_message = '';\n        }\n    }\n\n    setIsFromSignupAccount(is_from_signup_account) {\n        this.is_from_signup_account = is_from_signup_account;\n    }\n\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, el => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    resetPurchaseStates() {\n        this.purchase_states = [false, false];\n    }\n\n    setChartLayout(is_default) {\n        this.is_chart_layout_default = is_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // setChartAssetInfo(is_visible) {\n    //     this.is_chart_asset_info_visible = is_visible;\n    // }\n\n    setChartCountdown(is_visible) {\n        this.is_chart_countdown_visible = is_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // setPurchaseLock(is_locked) {\n    //     this.is_purchase_lock_on = is_locked;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    setDarkMode(is_dark_mode_on) {\n        if (this.is_dark_mode_on !== is_dark_mode_on) {\n            this.is_dark_mode_on = is_dark_mode_on;\n            // This GTM call is here instead of the GTM store due to frequency of use\n            this.root_store.gtm.pushDataLayer({ event: 'switch theme' });\n        }\n\n        return this.is_dark_mode_on;\n    }\n\n    setMobileLanguageMenuOpen(is_mobile_language_menu_open) {\n        this.is_mobile_language_menu_open = is_mobile_language_menu_open;\n    }\n\n    toggleSetCurrencyModal() {\n        this.is_set_currency_modal_visible = !this.is_set_currency_modal_visible;\n    }\n\n    toggleCashier() {\n        this.is_cashier_visible = !this.is_cashier_visible;\n    }\n\n    setModalIndex(index = 0) {\n        this.modal_index = index;\n    }\n\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    toggleLanguageSettingsModal() {\n        this.is_language_settings_modal_on = !this.is_language_settings_modal_on;\n    }\n\n    openPositionsDrawer() {\n        // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    openRealAccountSignup(target) {\n        if (target) {\n            this.is_real_acc_signup_on = true;\n            this.real_account_signup_target = target;\n            this.is_accounts_switcher_on = false;\n            localStorage.removeItem('current_question_index');\n        }\n    }\n\n    setShouldShowCancel(value) {\n        this.should_show_cancel = value;\n    }\n\n    resetRealAccountSignupTarget() {\n        this.deposit_real_account_signup_target = this.real_account_signup_target;\n        this.real_account_signup_target = '';\n    }\n\n    setManageRealAccountActiveTabIndex(index) {\n        this.manage_real_account_tab_index = index;\n    }\n\n    closeRealAccountSignup() {\n        this.is_real_acc_signup_on = false;\n        this.resetRealAccountSignupTarget();\n        setTimeout(() => {\n            this.resetRealAccountSignupParams();\n            this.setRealAccountSignupEnd(true);\n        }, 300);\n    }\n\n    openAccountNeededModal(target, target_label, target_dmt5_label) {\n        this.is_account_needed_modal_on = true;\n        this.account_needed_modal_props = {\n            target,\n            target_label,\n            target_dmt5_label,\n        };\n    }\n\n    closeAccountNeededModal() {\n        this.is_account_needed_modal_on = false;\n        this.account_needed_modal_props = {\n            target: '',\n            target_label: '',\n            target_dmt5_label: '',\n        };\n    }\n\n    togglePositionsDrawer() {\n        // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    toggleAccountSettings(is_visible) {\n        this.is_account_settings_visible = is_visible;\n    }\n\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    toggleAccountSignupModal(state_change = !this.is_account_signup_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n\n    toggleSetResidenceModal(state_change = !this.is_set_residence_modal_visible) {\n        this.is_set_residence_modal_visible = state_change;\n    }\n\n    toggleCancellationWarning(state_change = !this.should_show_cancellation_warning) {\n        this.should_show_cancellation_warning = state_change;\n    }\n\n    toggleHistoryTab(state_change = !this.is_history_tab_active) {\n        this.is_history_tab_active = state_change;\n    }\n\n    setTopUpInProgress(bool) {\n        this.is_top_up_virtual_in_progress = bool;\n    }\n\n    closeTopUpModal() {\n        this.is_top_up_virtual_open = false;\n    }\n\n    openTopUpModal() {\n        this.is_top_up_virtual_open = true;\n    }\n\n    closeSuccessTopUpModal() {\n        this.is_top_up_virtual_success = false;\n    }\n\n    toggleResetPasswordModal(state_change = !this.is_reset_password_modal_visible) {\n        this.is_reset_password_modal_visible = state_change;\n    }\n\n    toggleLinkExpiredModal(state_change = !this.is_link_expired_modal_visible) {\n        this.is_link_expired_modal_visible = state_change;\n    }\n\n    toggleResetEmailModal(state_change = !this.is_reset_email_modal_visible) {\n        this.is_reset_email_modal_visible = state_change;\n    }\n\n    toggleUpdateEmailModal(state_change = !this.is_update_email_modal_visible) {\n        this.is_update_email_modal_visible = state_change;\n    }\n\n    setResetTradingPasswordModalOpen(is_reset_trading_password_modal_visible) {\n        this.is_reset_trading_password_modal_visible = is_reset_trading_password_modal_visible;\n    }\n\n    setRealAccountSignupParams(params) {\n        this.real_account_signup = {\n            ...this.real_account_signup,\n            ...params,\n        };\n    }\n\n    setRealAccountSignupEnd(has_ended) {\n        this.has_real_account_signup_ended = has_ended;\n    }\n\n    resetRealAccountSignupParams() {\n        this.real_account_signup = {\n            active_modal_index: -1,\n            previous_currency: '',\n            current_currency: '',\n            success_message: '',\n            error_message: '',\n        };\n    }\n\n    toggleOnScreenKeyboard() {\n        this.is_onscreen_keyboard_active = this.current_focus !== null && this.is_mobile && isTouchDevice();\n    }\n\n    setCurrentFocus(value) {\n        this.current_focus = value;\n        this.toggleOnScreenKeyboard();\n    }\n\n    addToast(toast_config) {\n        toast_config.key = toast_config.key ?? toast_config.content;\n        const toast_index = this.toasts.findIndex(t => t.key === toast_config.key);\n        if (toast_index > -1) {\n            this.toasts.splice(toast_index, 1);\n        }\n\n        toast_config.timeout = toast_config.timeout ?? this.mobile_toast_timeout;\n        if (toast_config.is_bottom) {\n            this.toasts.push(toast_config);\n        } else {\n            this.toasts.unshift(toast_config);\n        }\n    }\n\n    removeToast(key) {\n        const index = this.toasts.findIndex(t => t.key === key);\n        if (index > -1) {\n            this.toasts.splice(index, 1);\n        }\n    }\n\n    setIsNativepickerVisible(is_nativepicker_visible) {\n        this.is_nativepicker_visible = is_nativepicker_visible;\n    }\n\n    setReportsTabIndex(tab_index = 0) {\n        this.reports_route_tab_index = tab_index;\n    }\n\n    notifyAppInstall(prompt) {\n        this.deferred_prompt = prompt;\n        setTimeout(() => {\n            this.root_store.notifications.addNotificationMessageByKey('install_pwa');\n        }, 10000);\n    }\n\n    async installWithDeferredPrompt() {\n        this.deferred_prompt.prompt();\n        const choice = await this.deferred_prompt.userChoice;\n        if (choice.outcome === 'accepted') {\n            const notification_key = 'install_pwa';\n            this.root_store.notifications.removeNotificationMessage({\n                key: notification_key,\n                should_show_again: false,\n            });\n            this.root_store.notifications.removeNotificationByKey({ key: notification_key });\n        }\n    }\n\n    toggleShouldShowRealAccountsList(value) {\n        this.should_show_real_accounts_list = value;\n    }\n\n    shouldNavigateAfterChooseCrypto(next_location) {\n        this.choose_crypto_currency_target = next_location;\n    }\n\n    continueRouteAfterChooseCrypto() {\n        this.root_store.common.routeTo(this.choose_crypto_currency_target);\n\n        if (this.choose_crypto_currency_target === routes.cashier_deposit) {\n            this.root_store.modules.cashier.general_store.setIsDeposit(true);\n        }\n    }\n\n    openDerivRealAccountNeededModal() {\n        this.is_deriv_account_needed_modal_visible = !this.is_deriv_account_needed_modal_visible;\n    }\n\n    setIsWalletModalVisible(value) {\n        this.is_wallet_modal_visible = value;\n    }\n\n    setShouldShowRiskWarningModal(value) {\n        this.should_show_risk_warning_modal = value;\n    }\n\n    setIsTradingAssessmentForExistingUserEnabled(value) {\n        this.is_trading_assessment_for_existing_user_enabled = value;\n    }\n\n    setIsTradingAssessmentForNewUserEnabled(value) {\n        this.is_trading_assessment_for_new_user_enabled = value;\n    }\n\n    setShouldShowAppropriatenessWarningModal(value) {\n        this.should_show_appropriateness_warning_modal = value;\n    }\n\n    setShouldShowWarningModal(value) {\n        this.should_show_risk_accept_modal = value;\n    }\n\n    setShouldShowAssessmentCompleteModal(value) {\n        this.should_show_assessment_complete_modal = value;\n    }\n\n    setShouldShowCooldownModal(value) {\n        this.should_show_cooldown_modal = value;\n    }\n\n    setShouldShowTradingAssessmentModal(value) {\n        this.should_show_trading_assessment_modal = value;\n    }\n\n    setShouldShowTradeAssessmentForm(value) {\n        this.should_show_trade_assessment_form = value;\n    }\n\n    openSwitchToRealAccountModal() {\n        this.is_switch_to_deriv_account_modal_visible = !this.is_switch_to_deriv_account_modal_visible;\n    }\n\n    toggleReadyToDepositModal() {\n        this.is_ready_to_deposit_modal_visible = !this.is_ready_to_deposit_modal_visible;\n    }\n\n    toggleNeedRealAccountForCashierModal() {\n        this.is_need_real_account_for_cashier_modal_visible = !this.is_need_real_account_for_cashier_modal_visible;\n    }\n\n    setCFDPasswordResetModal(val) {\n        this.is_cfd_reset_password_modal_enabled = !!val;\n    }\n\n    setSubSectionIndex(index) {\n        this.sub_section_index = index;\n    }\n\n    setIsVerificationModalVisible(value) {\n        this.is_verification_modal_visible = value;\n    }\n\n    setIsVerificationSubmitted(value) {\n        this.is_verification_submitted = value;\n    }\n\n    setShouldShowOneTimeDepositModal(value) {\n        this.should_show_one_time_deposit_modal = value;\n    }\n\n    toggleAccountSuccessModal() {\n        this.should_show_account_success_modal = !this.should_show_account_success_modal;\n    }\n\n    setShouldTriggerTourGuide(value) {\n        this.should_trigger_tour_guide = value;\n    }\n\n    setIsFromSuccessDepositModal(value) {\n        this.is_from_success_deposit_modal = value;\n    }\n\n    setIsMFVericationPendingModal(value) {\n        this.is_mf_verification_pending_modal_visible = value;\n    }\n\n    toggleAdditionalKycInfoModal() {\n        this.is_additional_kyc_info_modal_open = !this.is_additional_kyc_info_modal_open;\n    }\n\n    toggleKycInformationSubmittedModal() {\n        this.is_kyc_information_submitted_modal_open = !this.is_kyc_information_submitted_modal_open;\n    }\n\n    setMT5MigrationModalEnabled(value) {\n        this.is_mt5_migration_modal_enabled = value;\n    }\n\n    toggleMT5MigrationModal() {\n        this.is_mt5_migration_modal_open = !this.is_mt5_migration_modal_open;\n    }\n}\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","import { WS } from '@deriv/shared';\nimport { observable, action, runInAction, makeObservable } from 'mobx';\nimport BaseStore from './base-store';\n\nexport default class ActiveSymbolsStore extends BaseStore {\n    active_symbols = [];\n\n    constructor() {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super();\n\n        makeObservable(this, {\n            active_symbols: observable,\n            setActiveSymbols: action.bound,\n        });\n    }\n\n    async setActiveSymbols() {\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n        runInAction(() => {\n            if (!active_symbols.length || error) {\n                this.active_symbols = [];\n                return;\n            }\n            this.active_symbols = active_symbols;\n        });\n    }\n}\n","import { action, computed, observable, makeObservable } from 'mobx';\nimport { BARRIER_LINE_STYLES, CONTRACT_SHADES, DEFAULT_SHADES, barriersToString } from '@deriv/shared';\n\nexport class ChartBarrierStore {\n    color;\n    lineStyle;\n    shade;\n    shadeColor;\n\n    high;\n    low;\n\n    relative;\n    draggable;\n\n    hidePriceLines;\n    hideBarrierLine;\n    hideOffscreenLine;\n    title;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, hideBarrierLine, line_style, not_draggable, shade } = {}\n    ) {\n        makeObservable(this, {\n            color: observable,\n            lineStyle: observable,\n            shade: observable,\n            shadeColor: observable,\n            high: observable,\n            low: observable,\n            relative: observable,\n            draggable: observable,\n            hidePriceLines: observable,\n            hideBarrierLine: observable,\n            hideOffscreenLine: observable,\n            title: observable,\n            updateBarriers: action.bound,\n            updateBarrierShade: action.bound,\n            onBarrierChange: action.bound,\n            barrier_count: computed,\n            default_shade: computed,\n        });\n\n        this.color = color;\n        this.hideBarrierLine = hideBarrierLine;\n        this.shade = shade;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange =\n            typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier = !!high_barrier;\n        this.relative = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative = /^[+-]/.test(high);\n        }\n        this.high = high || undefined;\n        this.low = low || undefined;\n    }\n\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { ChartBarrierStore } from '../chart-barrier-store';\nimport { isMultiplierContract, BARRIER_COLORS, BARRIER_LINE_STYLES, removeBarrier } from '@deriv/shared';\n\nconst isLimitOrderBarrierSupported = (contract_type, contract_info) =>\n    isMultiplierContract(contract_type) && contract_info.limit_order;\n\nexport const LIMIT_ORDER_TYPES = {\n    STOP_OUT: 'stop_out',\n    TAKE_PROFIT: 'take_profit',\n    STOP_LOSS: 'stop_loss',\n};\n\nexport const setLimitOrderBarriers = ({ barriers, contract_type, contract_info = {}, is_over }) => {\n    if (is_over && isLimitOrderBarrierSupported(contract_type, contract_info)) {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        const has_stop_loss = Object.keys(contract_info.limit_order).some(\n            k => k === LIMIT_ORDER_TYPES.STOP_LOSS && contract_info.limit_order[k].value\n        );\n\n        limit_orders.forEach(key => {\n            const obj_limit_order = contract_info.limit_order[key];\n\n            if (!obj_limit_order || !obj_limit_order.value) {\n                removeBarrier(barriers, key);\n                return;\n            }\n\n            let barrier = barriers.find(b => b.key === key);\n\n            if (barrier) {\n                if (barrier.high === +obj_limit_order.value) {\n                    return;\n                }\n\n                barrier.onChange({\n                    high: obj_limit_order.value,\n                });\n            } else {\n                const obj_barrier = {\n                    key,\n                    title: `${obj_limit_order.display_name}`,\n                    color: key === LIMIT_ORDER_TYPES.TAKE_PROFIT ? BARRIER_COLORS.GREEN : BARRIER_COLORS.ORANGE,\n                    draggable: false,\n                    lineStyle:\n                        key === LIMIT_ORDER_TYPES.STOP_OUT ? BARRIER_LINE_STYLES.DOTTED : BARRIER_LINE_STYLES.SOLID,\n                    hidePriceLines: has_stop_loss && key === LIMIT_ORDER_TYPES.STOP_OUT,\n                    hideOffscreenLine: true,\n                    showOffscreenArrows: true,\n                    isSingleBarrier: true,\n                    opacityOnOverlap: key === LIMIT_ORDER_TYPES.STOP_OUT && 0.15,\n                };\n                barrier = new ChartBarrierStore(obj_limit_order.value);\n\n                Object.assign(barrier, obj_barrier);\n                barriers.push(barrier);\n            }\n        });\n    } else {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        limit_orders.forEach(l => removeBarrier(barriers, l));\n    }\n};\n\n/**\n * Get limit_order for contract_update API\n * @param {object} contract_update - contract_update input & checkbox values\n */\nexport const getLimitOrder = contract_update => {\n    const {\n        has_contract_update_stop_loss,\n        has_contract_update_take_profit,\n        contract_update_stop_loss,\n        contract_update_take_profit,\n        contract_info,\n    } = contract_update;\n\n    const limit_order = {};\n\n    const new_take_profit = has_contract_update_take_profit ? +contract_update_take_profit : null;\n    const has_take_profit_changed =\n        Math.abs(contract_info.limit_order?.take_profit?.order_amount) !== Math.abs(new_take_profit);\n\n    if (has_take_profit_changed) {\n        // send positive take_profit to update or null cancel\n        limit_order.take_profit = new_take_profit;\n    }\n\n    const new_stop_loss = has_contract_update_stop_loss ? +contract_update_stop_loss : null;\n    const has_stop_loss_changed =\n        Math.abs(contract_info.limit_order?.stop_loss?.order_amount) !== Math.abs(new_stop_loss);\n\n    if (has_stop_loss_changed) {\n        // send positive stop_loss to update or null to cancel\n        limit_order.stop_loss = new_stop_loss;\n    }\n\n    return limit_order;\n};\n","import throttle from 'lodash.throttle';\nimport { action, computed, observable, reaction, makeObservable, override } from 'mobx';\nimport { createTransformer } from 'mobx-utils';\nimport {\n    isAccumulatorContract,\n    isEmptyObject,\n    isEnded,\n    isUserSold,\n    isValidToSell,\n    isMultiplierContract,\n    getCurrentTick,\n    getDisplayStatus,\n    WS,\n    filterDisabledPositions,\n    formatPortfolioPosition,\n    contractCancelled,\n    contractSold,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText,\n    getEndTime,\n    TRADE_TYPES,\n    removeBarrier,\n    routes,\n} from '@deriv/shared';\nimport { Money } from '@deriv/components';\nimport { Analytics } from '@deriv/analytics';\nimport { ChartBarrierStore } from './chart-barrier-store';\nimport { setLimitOrderBarriers } from './Helpers/limit-orders';\n\nimport BaseStore from './base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    positions = [];\n    all_positions = [];\n    positions_map = {};\n    is_loading = false;\n    error = '';\n\n    //accumulators\n    open_accu_contract = null;\n\n    // barriers\n    barriers = [];\n    main_barrier = null;\n    contract_type = '';\n\n    getPositionById = createTransformer(id => this.positions.find(position => +position.id === +id));\n\n    responseQueue = [];\n\n    active_positions = [];\n\n    constructor(root_store) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super(root_store);\n\n        makeObservable(this, {\n            positions: observable.shallow,\n            all_positions: observable.shallow,\n            is_loading: observable,\n            error: observable,\n            barriers: observable,\n            main_barrier: observable,\n            contract_type: observable,\n            active_positions: observable.struct,\n            initializePortfolio: action.bound,\n            clearTable: action.bound,\n            portfolioHandler: action.bound,\n            onBuyResponse: action.bound,\n            transactionHandler: action.bound,\n            proposalOpenContractHandler: action.bound,\n            open_accu_contract: observable,\n            onClickCancel: action.bound,\n            onClickSell: action.bound,\n            handleSell: action.bound,\n            populateResultDetailsFromTransaction: action.bound,\n            populateResultDetails: action.bound,\n            populateContractUpdate: action.bound,\n            pushNewPosition: action.bound,\n            removePositionById: action.bound,\n            onHoverPosition: action.bound,\n            logoutListener: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n            totals: computed,\n            setActivePositions: action.bound,\n            is_active_empty: computed,\n            active_positions_count: computed,\n            is_empty: computed,\n            setPurchaseSpotBarrier: action,\n            updateLimitOrderBarriers: action,\n            setContractType: action,\n            is_accumulator: computed,\n            is_multiplier: computed,\n            is_turbos: computed,\n        });\n\n        this.root_store = root_store;\n    }\n\n    async initializePortfolio() {\n        if (this.has_subscribed_to_poc_and_transaction) {\n            this.clearTable();\n        }\n        this.is_loading = true;\n        await WS.wait('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractQueueHandler);\n        WS.subscribeTransaction(this.transactionHandler);\n        this.has_subscribed_to_poc_and_transaction = true;\n    }\n\n    clearTable() {\n        this.positions = [];\n        this.positions_map = {};\n        this.is_loading = false;\n        this.error = '';\n        this.updatePositions();\n        if (this.has_subscribed_to_poc_and_transaction) {\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n        this.has_subscribed_to_poc_and_transaction = false;\n    }\n\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .filter(filterDisabledPositions)\n                .map(pos => formatPortfolioPosition(pos, this.root_store.active_symbols.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n\n            this.positions.forEach(p => {\n                this.positions_map[p.id] = p;\n            });\n            this.updatePositions();\n        }\n    }\n\n    onBuyResponse({ contract_id, longcode, contract_type }) {\n        const new_pos = {\n            contract_id,\n            longcode,\n            contract_type,\n        };\n        this.pushNewPosition(new_pos);\n    }\n\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act, longcode } = response.transaction;\n\n        if (act === 'buy') {\n            this.onBuyResponse({\n                contract_id,\n                longcode,\n                contract_type: '', // TODO: figure out the icon not showing\n            });\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            if (!this.positions[i]) {\n                // On a page refresh, portfolio call has returned empty,\n                // even though we get a transaction.sell response.\n                return;\n            }\n            this.positions[i].is_loading = true;\n\n            // Sometimes when we sell a contract, we don't get `proposal_open_contract` message with exit information and status as `sold`.\n            // This is to make sure that we get `proposal_open_contract` message with exit information and status as `sold`.\n            const subscriber = WS.subscribeProposalOpenContract(contract_id, poc => {\n                if (poc.error) {\n                    // Settles the contract based on transaction response when POC response is throwing error.\n                    this.populateResultDetailsFromTransaction(response);\n                } else {\n                    this.updateContractTradeStore(poc);\n                    this.updateContractReplayStore(poc);\n                    this.populateResultDetails(poc);\n                }\n                subscriber.unsubscribe();\n            });\n        }\n    }\n\n    deepClone = obj => JSON.parse(JSON.stringify(obj));\n    updateContractTradeStore(response) {\n        const contract_trade = this.root_store.contract_trade;\n        const has_poc = !isEmptyObject(response.proposal_open_contract);\n        const has_error = !!response.error;\n        if (!has_poc && !has_error) return;\n        if (has_poc) {\n            contract_trade.addContract(this.deepClone(response.proposal_open_contract));\n            contract_trade.updateProposal(this.deepClone(response));\n        }\n    }\n\n    updateContractReplayStore(response) {\n        const contract_replay = this.root_store.contract_replay;\n        if (contract_replay.contract_id === response.proposal_open_contract?.contract_id) {\n            contract_replay.populateConfig(response);\n        }\n    }\n\n    updateTradeStore(is_over, portfolio_position, is_limit_order_update) {\n        // const trade = this.root_store.modules.trade;\n        if (!is_limit_order_update) {\n            this.setPurchaseSpotBarrier(is_over, portfolio_position);\n        }\n        this.updateLimitOrderBarriers(is_over, portfolio_position);\n    }\n\n    proposalOpenContractQueueHandler = response => {\n        this.responseQueue.push(response);\n        this.throttledUpdatePositions();\n    };\n\n    proposalOpenContractHandler(response) {\n        if ('error' in response) {\n            this.updateContractTradeStore(response);\n            this.updateContractReplayStore(response);\n            return;\n        }\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions_map[proposal.contract_id];\n\n        if (!portfolio_position) return;\n        this.updateContractTradeStore(response);\n        this.updateContractReplayStore(response);\n\n        const formatted_position = formatPortfolioPosition(\n            proposal,\n            this.root_store.active_symbols.active_symbols,\n            portfolio_position.indicative\n        );\n        Object.assign(portfolio_position, formatted_position);\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative = +proposal.bid_price;\n        const profit_loss = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        Object.entries(proposal).forEach(([key, value]) => {\n            if (key === 'barrier' || key === 'high_barrier' || key === 'low_barrier' || key === 'entry_spot') {\n                portfolio_position[key] = +value;\n            }\n        });\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.profit_loss = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick =\n                portfolio_position.current_tick > getCurrentTick(proposal)\n                    ? portfolio_position.current_tick\n                    : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n\n        if (this.hovered_position_id === portfolio_position.id) {\n            if (portfolio_position.contract_info.is_sold === 1) {\n                this.updateTradeStore(false, portfolio_position);\n            } else {\n                this.updateTradeStore(true, portfolio_position, true);\n            }\n        }\n\n        if (portfolio_position.contract_info.is_sold === 1) {\n            this.populateResultDetails(response);\n        }\n    }\n\n    onClickCancel(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        if (this.positions[i].is_sell_requested) return;\n\n        this.positions[i].is_sell_requested = true;\n        if (contract_id) {\n            WS.cancelContract(contract_id).then(response => {\n                if (response.error) {\n                    this.root_store.common.setServicesError({\n                        type: response.msg_type,\n                        ...response.error,\n                    });\n                } else if (window.location.pathname !== routes.trade || !this.root_store.ui.is_mobile) {\n                    this.root_store.notifications.addNotificationMessage(contractCancelled());\n                }\n            });\n        }\n    }\n\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        if (this.positions[i].is_sell_requested) return;\n\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = true;\n        if (contract_id && typeof bid_price === 'number') {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n\n            // invalidToken error will handle in socket-general.js\n            if (response.error.code !== 'InvalidToken') {\n                this.root_store.common.setServicesError({\n                    type: response.msg_type,\n                    ...response.error,\n                });\n            }\n        } else if (!response.error && response.sell) {\n            // update contract store sell info after sell\n            this.root_store.contract_trade.sell_info = {\n                sell_price: response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            if (window.location.pathname !== routes.trade || !this.root_store.ui.is_mobile) {\n                this.root_store.notifications.addNotificationMessage(\n                    contractSold(this.root_store.client.currency, response.sell.sold_for, Money)\n                );\n            }\n\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'close_contract',\n                form_name: 'default',\n                subform_name: 'open_positions_form',\n            });\n        }\n    }\n\n    populateResultDetailsFromTransaction = response => {\n        const transaction_response = response.transaction;\n        const { contract_id, amount } = transaction_response;\n        const i = this.getPositionIndexById(contract_id);\n        const position = this.positions[i];\n\n        if (!position) {\n            return;\n        }\n        const contract_info = { ...position.contract_info, is_sold: 1, is_expired: 1, status: 'complete' };\n\n        position.contract_info = contract_info;\n        position.is_valid_to_sell = false;\n        position.result = amount > contract_info.buy_price ? 'won' : 'lost';\n        position.status = 'complete';\n        position.is_sold = 1;\n        position.is_loading = false;\n\n        contract_info.exit_tick_time = contract_info.date_expiry;\n        contract_info.sell_price = String(amount);\n        contract_info.profit = amount - contract_info.buy_price;\n\n        this.updatePositions();\n    };\n\n    populateResultDetails = response => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        if (!this.positions[i]) {\n            return;\n        }\n\n        this.positions[i].contract_info = contract_response;\n        this.positions[i].duration = getDurationTime(contract_response);\n        this.positions[i].duration_unit = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss = +contract_response.profit;\n        this.positions[i].sell_time = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price = contract_response.sell_price;\n        this.positions[i].status = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n\n        if (\n            this.root_store.ui.is_mobile &&\n            getEndTime(contract_response) &&\n            window.location.pathname === routes.trade\n        ) {\n            this.root_store.notifications.addTradeNotification(this.positions[i].contract_info);\n        }\n    };\n\n    populateContractUpdate({ contract_update }, contract_id) {\n        const position = this.getPositionById(contract_id);\n        if (position) {\n            Object.assign(position.contract_update || {}, contract_update);\n            this.updatePositions();\n        }\n    }\n\n    pushNewPosition(new_pos) {\n        const position = formatPortfolioPosition(new_pos, this.root_store.active_symbols.active_symbols);\n        if (this.positions_map[position.id]) return;\n\n        this.positions.unshift(position);\n        this.positions_map[position.id] = position;\n        this.updatePositions();\n    }\n\n    removePositionById(contract_id) {\n        const contract_idx = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n        delete this.positions_map[contract_id];\n        this.updatePositions();\n        this.root_store.contract_trade.removeContract({ contract_id });\n    }\n\n    async accountSwitcherListener() {\n        await this.initializePortfolio();\n        return Promise.resolve();\n    }\n\n    onHoverPosition(is_over, position, underlying) {\n        if (\n            position.contract_info.underlying !== underlying ||\n            isEnded(position.contract_info) ||\n            !isMultiplierContract(position.type)\n        ) {\n            return;\n        }\n\n        this.hovered_position_id = is_over ? position.id : null;\n        this.updateTradeStore(is_over, position);\n    }\n\n    preSwitchAccountListener() {\n        this.clearTable();\n        return Promise.resolve();\n    }\n\n    logoutListener() {\n        this.clearTable();\n        return Promise.resolve();\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = !is_online;\n    }\n\n    onMount() {\n        this.onPreSwitchAccount(this.preSwitchAccountListener);\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        this.onLogout(this.logoutListener);\n        if (this.positions.length === 0 && !this.has_subscribed_to_poc_and_transaction) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(\n                    () => this.root_store.client.is_logged_in,\n                    () => {\n                        if (this.root_store.client.is_logged_in) {\n                            this.initializePortfolio();\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    onUnmount() {\n        const is_reports_path = /^\\/reports/.test(window.location.pathname);\n        if (!is_reports_path) {\n            this.clearTable();\n            this.disposePreSwitchAccount();\n            this.disposeSwitchAccount();\n            this.disposeLogout();\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    get totals() {\n        let indicative = 0;\n        let payout = 0;\n        let purchase = 0;\n\n        this.positions.forEach(portfolio_pos => {\n            indicative += +portfolio_pos.indicative;\n            payout += +portfolio_pos.payout;\n            purchase += +portfolio_pos.purchase;\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    setActivePositions() {\n        this.active_positions = this.positions.filter(portfolio_pos => !getEndTime(portfolio_pos.contract_info));\n        this.all_positions = [...this.positions];\n        this.open_accu_contract = this.active_positions.find(({ type }) => isAccumulatorContract(type));\n    }\n\n    updatePositions = () => {\n        this.responseQueue.forEach(res => this.proposalOpenContractHandler(res));\n        this.responseQueue = [];\n        this.setActivePositions();\n    };\n\n    throttledUpdatePositions = throttle(this.updatePositions, 500);\n\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    get active_positions_count() {\n        return this.active_positions.length || 0;\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n\n    // from trade store\n    setPurchaseSpotBarrier(is_over, position) {\n        const key = 'PURCHASE_SPOT_BARRIER';\n        if (!is_over) {\n            removeBarrier(this.barriers, key);\n            return;\n        }\n\n        let purchase_spot_barrier = this.barriers.find(b => b.key === key);\n        if (purchase_spot_barrier) {\n            if (purchase_spot_barrier.high !== +position.contract_info.entry_spot) {\n                purchase_spot_barrier.onChange({\n                    high: position.contract_info.entry_spot,\n                });\n            }\n        } else {\n            purchase_spot_barrier = new ChartBarrierStore(position.contract_info.entry_spot);\n            purchase_spot_barrier.key = key;\n            purchase_spot_barrier.draggable = false;\n            purchase_spot_barrier.hideOffscreenBarrier = true;\n            purchase_spot_barrier.isSingleBarrier = true;\n            this.barriers.push(purchase_spot_barrier);\n        }\n    }\n\n    updateLimitOrderBarriers(is_over, position) {\n        const contract_info = position.contract_info;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            contract_info,\n            contract_type: contract_info.contract_type,\n            is_over,\n        });\n    }\n\n    setContractType(contract_type) {\n        this.contract_type = contract_type;\n    }\n\n    get is_accumulator() {\n        return this.contract_type === TRADE_TYPES.ACCUMULATOR;\n    }\n\n    get is_multiplier() {\n        return this.contract_type === TRADE_TYPES.MULTIPLIER;\n    }\n\n    get is_turbos() {\n        return this.contract_type === TRADE_TYPES.TURBOS.LONG || this.contract_type === TRADE_TYPES.TURBOS.SHORT;\n    }\n}\n","import moment from 'moment';\nimport { isAccumulatorContract, isEmptyObject, getEndTime } from '@deriv/shared';\nimport ServerTime from '../../_common/base/server_time';\n\nexport const getChartConfig = contract_info => {\n    if (isEmptyObject(contract_info)) return null;\n    const start = contract_info.date_start;\n    const end = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type = getChartType(start, end || null);\n    const is_accumulator_contract = isAccumulatorContract(contract_info.contract_type);\n    // setting start_epoch and scroll_to_epoch for accumulator contracts\n    // when contract is open, we get no more than 10 last ticks from BE, so we show 10 ticks when tick_stream.length === 10\n    const first_tick_epoch =\n        is_accumulator_contract && !!contract_info.tick_stream?.length && contract_info.tick_stream[0].epoch;\n    const should_show_10_last_ticks =\n        is_accumulator_contract && contract_info.status === 'open' && contract_info.tick_stream.length === 10;\n    const start_epoch = should_show_10_last_ticks ? first_tick_epoch : start;\n    const scroll_to_epoch = should_show_10_last_ticks ? first_tick_epoch : contract_info.purchase_time;\n    return {\n        chart_type: contract_info.tick_count ? 'line' : chart_type,\n        granularity: contract_info.tick_count ? 0 : granularity,\n        end_epoch: end,\n        start_epoch,\n        scroll_to_epoch,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1, 0],\n    [2, 120],\n    [6, 600],\n    [24, 900],\n    [5 * 24, 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = time => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return duration <= 1 ? 'line' : 'candles';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = duration =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getBuyPrice = contract_store => {\n    return contract_store.contract_info.buy_price;\n};\n\n/**\n * Set contract update form initial values\n * @param {object} contract_update - contract_update response\n * @param {object} limit_order - proposal_open_contract.limit_order response\n */\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\nconst MarkerLine = ({ label, line_style, marker_config, status }) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            {label === marker_config.LINE_END.content_config.label && (\n                <Icon\n                    icon='IcContractExitTimeCircle'\n                    className='chart-marker-line__icon'\n                    color={status === 'lost' ? 'red' : 'green'}\n                    size={24}\n                />\n            )}\n            {label === marker_config.LINE_START.content_config.label && (\n                <Icon\n                    icon='IcContractStartTimeCircle'\n                    className='chart-marker-line__icon chart-marker-line__icon--time'\n                    color='secondary'\n                    size={24}\n                />\n            )}\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label: PropTypes.string,\n    line_style: PropTypes.string,\n    marker_config: PropTypes.object,\n    status: PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MarkerSpot = ({ className, spot_count }) => (\n    <div className={classNames('chart-spot', className)}>{spot_count}</div>\n);\n\nMarkerSpot.propTypes = {\n    className: PropTypes.string,\n    spot_count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { addComma, toMoment } from '@deriv/shared';\n\nimport MarkerSpot from './marker-spot.jsx';\nimport { localize } from '@deriv/translations';\n\nconst MarkerSpotLabel = ({\n    align_label,\n    has_hover_toggle,\n    is_value_hidden,\n    spot_className,\n    spot_count,\n    spot_epoch,\n    spot_value,\n    spot_profit,\n    status,\n}) => {\n    const [show_label, setShowLabel] = React.useState(!has_hover_toggle);\n\n    const handleHoverToggle = () => {\n        setShowLabel(!show_label);\n    };\n\n    let marker_spot = <MarkerSpot className={spot_className} spot_count={spot_count} />;\n\n    if (has_hover_toggle) {\n        marker_spot = (\n            <div\n                data-testid='dt_marker_hover_container'\n                className='marker-hover-container'\n                onMouseEnter={handleHoverToggle}\n                onMouseLeave={handleHoverToggle}\n            >\n                {marker_spot}\n            </div>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <div className={'chart-spot-label'}>\n                {show_label && !is_value_hidden && (\n                    <div className='chart-spot-label__info-container'>\n                        <div\n                            data-testid='dt_time_value_container'\n                            className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${align_label}`}\n                        >\n                            {spot_epoch && (\n                                <div className='chart-spot-label__time-container'>\n                                    <Icon\n                                        icon='IcClockOutline'\n                                        height={10}\n                                        width={10}\n                                        className='chart-spot-label__time-icon'\n                                    />\n                                    <Text as='p' color='prominent' size='xxxs'>\n                                        {toMoment(+spot_epoch).format('HH:mm:ss')}\n                                    </Text>\n                                </div>\n                            )}\n                            <div\n                                data-testid='dt_value_container'\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won': status === 'won',\n                                    'chart-spot-label__value-container--lost': status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                {marker_spot}\n            </div>\n            {spot_profit && (\n                <div\n                    className={classNames('chart-spot-label-profit', {\n                        'chart-spot-label-profit--won': status === 'won',\n                        'chart-spot-label-profit--lost': status === 'lost',\n                    })}\n                >\n                    <div\n                        className={classNames('chart-spot-label__value-container', {\n                            'chart-spot-label__value-container--won': status === 'won',\n                            'chart-spot-label__value-container--lost': status === 'lost',\n                        })}\n                    >\n                        <Text as='p' size='xxs'>\n                            {localize('Total profit/loss:')}\n                        </Text>\n                        <Text as='p' size='xs'>{`${parseFloat(spot_profit) > 0 ? '+' : ''}${spot_profit}`}</Text>\n                    </div>\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n    is_value_hidden: false,\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label: PropTypes.oneOf(['top', 'middle', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    is_value_hidden: PropTypes.bool,\n    spot_className: PropTypes.string,\n    spot_count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    spot_epoch: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    spot_value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    spot_profit: PropTypes.string,\n    status: PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize } from '@deriv/translations';\nimport MarkerLine from '../../Components/markers/marker-line.jsx';\nimport MarkerSpotLabel from '../../Components/markers/marker-spot-label.jsx';\nimport MarkerSpot from '../../Components/markers/marker-spot.jsx';\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type: 'LINE_END',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className: 'chart-marker-line',\n        },\n        content_config: { line_style: 'dash', label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type: 'LINE_PURCHASE',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className: 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type: 'LINE_START',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className: 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type: 'SPOT_ENTRY',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type: 'SPOT_SELL',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type: 'SPOT_EXIT',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type: 'SPOT_MIDDLE',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend from 'extend';\nimport {\n    formatMoney,\n    getEndTime,\n    isAccumulatorContract,\n    isSmartTraderContract,\n    isDesktop,\n    isDigitContract,\n    isMobile,\n    isMultiplierContract,\n    isUserSold,\n    isVanillaContract,\n} from '@deriv/shared';\n\nimport { MARKER_TYPES_CONFIG } from '../Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) =>\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    });\n\nexport const getSpotCount = (contract_info, spot_count) => {\n    if (isDigitContract(contract_info.contract_type)) return spot_count + 1;\n    if (isAccumulatorContract(contract_info.contract_type) || isSmartTraderContract(contract_info.contract_type))\n        return null;\n    return spot_count;\n};\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = contract_info => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(MARKER_TYPES_CONFIG.LINE_END.type, +end_time, null, {\n        status: `${contract_info.profit >= 0 ? 'won' : 'lost'}`,\n        marker_config: MARKER_TYPES_CONFIG,\n    });\n};\n\nexport const createMarkerPurchaseTime = contract_info => {\n    if (\n        !contract_info.purchase_time ||\n        !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start\n    )\n        return false;\n\n    return createMarkerConfig(MARKER_TYPES_CONFIG.LINE_PURCHASE.type, +contract_info.purchase_time);\n};\n\nexport const createMarkerStartTime = contract_info => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(MARKER_TYPES_CONFIG.LINE_START.type, +contract_info.date_start, null, {\n        marker_config: MARKER_TYPES_CONFIG,\n    });\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = contract_info => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props = {};\n    const entry_tick = contract_info.entry_tick_display_value;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(marker_type, contract_info.entry_tick_time, entry_tick, component_props);\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = contract_info.exit_tick_display_value;\n\n    const should_show_spot_exit = !is_user_sold || isMultiplierContract(contract_info.contract_type);\n\n    const should_show_profit_label = isVanillaContract(contract_info.contract_type) && isDesktop();\n\n    const marker_spot_type = should_show_spot_exit\n        ? MARKER_TYPES_CONFIG.SPOT_EXIT.type\n        : MARKER_TYPES_CONFIG.SPOT_SELL.type;\n\n    const component_props = should_show_spot_exit\n        ? {\n              spot_value: `${exit_tick}`,\n              spot_epoch: `${contract_info.exit_tick_time}`,\n              status: `${+contract_info.profit >= 0 ? 'won' : 'lost'}`,\n              align_label: should_show_profit_label ? 'middle' : align_label,\n              spot_count,\n              spot_profit:\n                  (should_show_profit_label &&\n                      `${formatMoney(contract_info.currency, contract_info.profit, true)} ${contract_info.currency}`) ||\n                  '',\n          }\n        : {};\n\n    return createMarkerConfig(marker_spot_type, +contract_info.exit_tick_time, +exit_tick, component_props);\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot = tick.tick_display_value;\n    const spot_epoch = is_accumulator ? '' : `${tick.epoch}`;\n\n    const marker_config = createMarkerConfig(MARKER_TYPES_CONFIG.SPOT_MIDDLE.type, +tick.epoch, +spot, {\n        spot_value: `${spot}`,\n        spot_epoch,\n        align_label: tick.align_label,\n        is_value_hidden: is_accumulator,\n        spot_count,\n    });\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    if (isMobile() && spot_count > 1) return null;\n    return marker_config;\n};\n","import {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount,\n} from './chart-marker-helpers';\nimport {\n    getDecimalPlaces,\n    getEndTime,\n    isAccumulatorContract,\n    isAccumulatorContractOpen,\n    isDigitContract,\n    isHighLow,\n    isSmartTraderContract,\n    isOpen,\n    isTouchContract,\n    isMultiplierContract,\n    isVanillaContract,\n    getContractStatus,\n    unique,\n    isTurbosContract,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { MARKER_TYPES_CONFIG } from '../Constants/markers';\nimport { getChartType } from './logic';\n\nexport const createChartMarkers = (contract_info, is_delayed_markers_update) => {\n    const { tick_stream } = contract_info;\n    const should_show_10_last_ticks = isAccumulatorContractOpen(contract_info) && tick_stream.length === 10;\n\n    let markers = [];\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time);\n\n        if (contract_info.tick_count) {\n            const tick_markers = createTickMarkers(contract_info, is_delayed_markers_update);\n            markers.push(...tick_markers);\n        } else if (chart_type !== 'candles') {\n            const spot_markers = Object.keys(marker_spots).map(type => marker_spots[type](contract_info));\n            markers.push(...spot_markers);\n        }\n        if (!should_show_10_last_ticks) {\n            // don't draw start/end lines if only 10 last ticks are displayed\n            const line_markers = Object.keys(marker_lines).map(type => marker_lines[type](contract_info));\n            markers.push(...line_markers);\n        }\n        markers = markers.filter(m => !!m);\n    }\n    markers.forEach(marker => {\n        const contract_id = contract_info.contract_id;\n        marker.react_key = `${contract_id}-${marker.type}`;\n    });\n\n    return markers;\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]: createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]: createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]: createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nexport const createTickMarkers = (contract_info, is_delayed_markers_update) => {\n    const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n    const is_smarttrader_contract = isSmartTraderContract(contract_info.contract_type);\n    const is_accu_contract_closed = is_accumulator && !isOpen(contract_info);\n    const available_ticks = (is_accumulator && contract_info.audit_details?.all_ticks) || contract_info.tick_stream;\n    const tick_stream = unique(available_ticks, 'epoch').map(addLabelAlignment);\n    const result = [];\n\n    if (is_accu_contract_closed) {\n        const { exit_tick_time, tick_stream: ticks } = contract_info || {};\n        if (exit_tick_time && tick_stream.every(({ epoch }) => epoch !== exit_tick_time)) {\n            // sometimes exit_tick is present in tick_stream but missing from audit_details\n            tick_stream.push(ticks[ticks.length - 1]);\n        }\n        const exit_tick_count = tick_stream.findIndex(({ epoch }) => epoch === exit_tick_time) + 1;\n        tick_stream.length = exit_tick_count > 0 ? exit_tick_count : tick_stream.length;\n    }\n\n    tick_stream.forEach((tick, idx) => {\n        const isEntrySpot = _tick => +_tick.epoch === contract_info.entry_tick_time;\n        const is_entry_spot =\n            +tick.epoch !== contract_info.exit_tick_time && (is_accumulator ? isEntrySpot(tick) : idx === 0);\n        // accumulators entry spot will be missing from tick_stream when contract is lasting for longer than 10 ticks\n        const entry_spot_index = is_accumulator ? tick_stream.findIndex(isEntrySpot) : 0;\n        const is_middle_spot = idx > entry_spot_index && +tick.epoch !== +contract_info.exit_tick_time;\n        const isExitSpot = (_tick, _idx) =>\n            +_tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, _idx) === contract_info.tick_count;\n        const is_exit_spot = isExitSpot(tick, idx);\n        const is_current_last_spot = idx === tick_stream.length - 1;\n        const exit_spot_index = tick_stream.findIndex(isExitSpot);\n        const is_accu_current_last_spot = is_accumulator && !is_exit_spot && is_current_last_spot;\n        const is_accu_preexit_spot =\n            is_accumulator && (is_accu_contract_closed ? idx === exit_spot_index - 1 : idx === tick_stream.length - 2);\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        } else if (is_exit_spot && !is_accu_current_last_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, idx);\n        }\n        if (is_smarttrader_contract && is_middle_spot) {\n            const spot_className = marker_config.content_config.spot_className;\n            marker_config.content_config.spot_className = `${spot_className} ${spot_className}--smarttrader-contract-middle`;\n            if (!is_current_last_spot) {\n                marker_config.content_config.is_value_hidden = true;\n            }\n        }\n        if (is_accumulator) {\n            if ((is_accu_current_last_spot || is_exit_spot) && !is_accu_contract_closed) return;\n            if (marker_config && (is_middle_spot || is_exit_spot)) {\n                const should_highlight_previous_spot =\n                    is_accu_preexit_spot && (!is_delayed_markers_update || is_accu_contract_closed);\n                const spot_className = marker_config.content_config.spot_className;\n                marker_config.content_config.spot_className = `${spot_className} ${spot_className}--accumulator${\n                    is_exit_spot ? '-exit' : `-middle${should_highlight_previous_spot ? '--preexit' : ''}`\n                }`;\n            }\n        }\n        if (marker_config) {\n            result.push(marker_config);\n        }\n    });\n    return result;\n};\n\nconst dark_theme = {\n    bg: '#0e0e0e',\n    fg: '#ffffff',\n    grey_border: '#6e6e6e',\n    lost: '#cc2e3d',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#00a79e',\n};\n\nconst light_theme = {\n    bg: '#ffffff',\n    fg: '#333333',\n    grey_border: '#999999',\n    lost: '#ec3f3f',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#4bb4b3',\n};\n\nfunction getColor({ status, profit, is_dark_theme, is_vanilla }) {\n    const colors = is_dark_theme ? dark_theme : light_theme;\n    let color = colors[status || 'open'];\n    if (is_vanilla) {\n        if (status === 'open') return colors.open;\n        return colors[profit > 0 ? 'won' : 'lost'];\n    }\n    if (status === 'open' && profit) {\n        color = colors[profit > 0 ? 'won' : 'lost'];\n    }\n    return color;\n}\n\nconst currency_symbols = {\n    AUD: '\\u0041\\u0024',\n    EUR: '\\u20AC',\n    GBP: '\\u00A3',\n    JPY: '\\u00A5',\n    USD: '\\u0024',\n    BTC: '\\u20bf',\n    BCH: '\\ue901',\n    ETH: '\\u0045',\n    ETC: '\\ue900',\n    LTC: '\\u0141',\n    UST: '\\u20ae',\n};\n\nexport const getMarkerContractType = contract_info => {\n    const { tick_count, contract_type } = contract_info;\n\n    if (isAccumulatorContract(contract_type)) {\n        return 'AccumulatorContract';\n    } else if (isDigitContract(contract_type)) {\n        return 'DigitContract';\n    }\n\n    return tick_count > 0 ? 'TickContract' : 'NonTickContract';\n};\n\nexport const getStartText = contract_info => {\n    const { barrier, contract_type, currency, is_sold, profit, tick_count, tick_stream } = contract_info;\n    const is_non_tick_contract = !tick_count;\n\n    if (is_sold || isAccumulatorContract(contract_type)) return undefined;\n\n    // NonTickContract\n    if (is_non_tick_contract) {\n        if (!(profit && barrier)) return undefined;\n\n        const symbol = currency_symbols[currency] || '';\n        const decimal_places = getDecimalPlaces(currency);\n        const sign = profit < 0 ? '-' : profit > 0 ? '+' : ' ';\n        return `${sign}${symbol}${Math.abs(profit).toFixed(decimal_places)}`;\n    }\n\n    return `${Math.max(tick_stream.length - 1, 0)}/${tick_count}`;\n};\n\nexport const getTickStreamMarkers = (contract_info, barrier_price) => {\n    function getTicks() {\n        if (is_accumulator_contract) {\n            return [];\n        } else if (is_digit_contract) {\n            return [undefined, ...tick_stream.slice(-1)];\n        }\n        return tick_stream;\n    }\n\n    const { contract_type, tick_stream } = contract_info;\n    const is_digit_contract = isDigitContract(contract_type);\n    const is_accumulator_contract = isAccumulatorContract(contract_type);\n\n    const last_tick = tick_stream.length > 1 ? tick_stream[tick_stream.length - 1] : null;\n    const [, ...ticks] = getTicks();\n\n    const markers = ticks.map(t => ({\n        epoch: t.epoch,\n        quote: t.tick,\n        type: 'tick',\n    }));\n\n    if (!is_digit_contract && !is_accumulator_contract && last_tick) {\n        markers.push({\n            epoch: last_tick.epoch,\n            quote: last_tick.quote,\n            type: 'latestTick',\n        });\n        markers.push({\n            epoch: last_tick.epoch,\n            quote: barrier_price,\n            type: 'latestTickBarrier',\n        });\n    }\n\n    return markers;\n};\n\nexport function calculateMarker(contract_info, is_dark_theme, is_last_contract) {\n    if (!contract_info || isMultiplierContract(contract_info.contract_type)) {\n        return null;\n    }\n    const {\n        transaction_ids,\n        tick_stream,\n        date_start,\n        date_expiry,\n        entry_tick,\n        exit_tick,\n        entry_tick_time,\n        exit_tick_time,\n        contract_type,\n        tick_count,\n        barrier_count,\n        barrier,\n        high_barrier,\n        low_barrier,\n        shortcode,\n        status,\n        profit,\n        is_sold,\n    } = contract_info;\n    const is_accumulator_contract = isAccumulatorContract(contract_type);\n    const is_digit_contract = isDigitContract(contract_type);\n    const is_tick_contract = tick_count > 0;\n    const is_non_tick_contract = !is_tick_contract;\n    const is_high_low_contract = isHighLow({ shortcode });\n    const is_touch_contract = isTouchContract(contract_type);\n    const is_turbos = isTurbosContract(contract_type);\n\n    const end_time = is_tick_contract ? exit_tick_time : getEndTime(contract_info) || date_expiry;\n\n    let barrier_price;\n    if (is_digit_contract || is_accumulator_contract) {\n        barrier_price = +entry_tick;\n    } else if (+barrier_count === 1 && barrier) {\n        barrier_price = +barrier;\n    } else if (+barrier_count === 2 && high_barrier && low_barrier) {\n        barrier_price = +high_barrier;\n    }\n\n    if (!date_start) {\n        return null;\n    }\n    // if we have not yet received the first POC response\n    if (!transaction_ids) {\n        return {\n            type: getMarkerContractType(contract_info),\n            markers: [],\n        };\n    }\n\n    const markers = [];\n\n    const price = barrier_price || 0;\n\n    if (is_last_contract && !is_sold) {\n        markers.push({\n            epoch: date_start,\n            quote: is_digit_contract ? undefined : price,\n            type: 'activeStart',\n            text: localize('Start\\nTime'),\n        });\n    }\n\n    if (date_start && entry_tick) {\n        const color = is_non_tick_contract ? getColor({ status: 'open', profit }) : undefined;\n        markers.push({\n            epoch: date_start,\n            quote: is_digit_contract ? undefined : price,\n            type: 'start',\n            text: getStartText(contract_info),\n            color,\n        });\n    }\n\n    if (entry_tick) {\n        markers.push({\n            epoch: entry_tick_time,\n            quote: price,\n            type: 'entry',\n        });\n\n        if (is_high_low_contract || is_touch_contract || is_turbos) {\n            markers.push({\n                epoch: entry_tick_time,\n                quote: entry_tick,\n                type: 'entryTick',\n            });\n        }\n    }\n\n    if (end_time) {\n        markers.push({\n            epoch: end_time,\n            quote: price,\n            type: 'end',\n        });\n    }\n\n    if (exit_tick) {\n        markers.push({\n            epoch: exit_tick_time,\n            quote: +exit_tick,\n            type: 'exit',\n        });\n    } else if (tick_stream?.length > 0) {\n        markers.push(...getTickStreamMarkers(contract_info, barrier_price));\n    }\n\n    if (is_accumulator_contract && tick_stream?.length > 0) {\n        const contract_status = getContractStatus({ contract_type, profit, exit_tick_time, status });\n        const is_accu_contract_ended = contract_status !== 'open';\n\n        if (is_accu_contract_ended) {\n            const exit = tick_stream[tick_stream.length - 1];\n            const previous_tick = tick_stream[tick_stream.length - 2] || exit;\n\n            markers.push(\n                ...getAccumulatorBarrierMarkers({\n                    high_barrier,\n                    low_barrier,\n                    prev_epoch: previous_tick.epoch,\n                    is_dark_mode_on: is_dark_theme,\n                    contract_info,\n                })\n            );\n        }\n    }\n\n    return {\n        type: getMarkerContractType(contract_info),\n        markers,\n        color: getColor({\n            status,\n            profit: is_non_tick_contract || is_sold ? profit : undefined,\n            is_dark_theme,\n            is_vanilla: isVanillaContract(contract_type),\n        }),\n    };\n}\n\nfunction getAccumulatorBarrierMarkers({\n    contract_info,\n    high_barrier,\n    low_barrier,\n    is_accumulator_trade_without_contract = false,\n    is_dark_theme,\n    has_crossed_accu_barriers,\n    barrier_spot_distance,\n    prev_epoch: epoch,\n}) {\n    const { contract_type, profit, exit_tick_time, status, is_sold } = contract_info || {};\n\n    const contract_status = getContractStatus({ contract_type, profit, exit_tick_time, status });\n    const is_accu_contract_ended = contract_status !== 'open';\n\n    const getStatus = () => {\n        if (has_crossed_accu_barriers || contract_status === 'lost') {\n            return 'lost';\n        } else if (is_accumulator_trade_without_contract) {\n            return 'open';\n        }\n\n        return 'won';\n    };\n\n    const barrier_color = getColor({\n        status: getStatus(),\n        is_dark_theme,\n    });\n\n    const tick_color = is_accumulator_trade_without_contract\n        ? getColor({ status: 'fg', is_dark_theme })\n        : getColor({\n              is_dark_theme,\n              status: contract_status,\n              profit: is_sold || is_accu_contract_ended ? profit : null,\n          });\n\n    const markers = [\n        {\n            epoch,\n            quote: +high_barrier,\n            type: 'highBarrier',\n            color: barrier_color,\n            text: barrier_spot_distance ? `+${barrier_spot_distance}` : '',\n        },\n        {\n            epoch,\n            quote: +low_barrier,\n            type: 'lowBarrier',\n            color: barrier_color,\n            text: barrier_spot_distance ? `-${barrier_spot_distance}` : '',\n        },\n        {\n            epoch,\n            type: 'previousTick',\n            color: tick_color,\n        },\n    ];\n\n    return markers;\n}\n\nexport function getAccumulatorMarkers({\n    prev_epoch,\n    high_barrier,\n    low_barrier,\n    is_accumulator_trade_without_contract = false,\n    has_crossed_accu_barriers = false,\n    is_dark_theme,\n    contract_info,\n    in_contract_details = false,\n    barrier_spot_distance,\n}) {\n    const markers = getAccumulatorBarrierMarkers({\n        contract_info,\n        high_barrier,\n        low_barrier,\n        is_accumulator_trade_without_contract,\n        is_dark_theme,\n        has_crossed_accu_barriers,\n        barrier_spot_distance,\n        prev_epoch,\n    });\n\n    return {\n        type: 'AccumulatorContract',\n        markers,\n        props: {\n            hasPersistentBorders: in_contract_details,\n        },\n    };\n}\n","import { action, extendObservable, observable, makeObservable, runInAction } from 'mobx';\nimport {\n    isAccumulatorContract,\n    isDigitContract,\n    isEnded,\n    isEqualObject,\n    isMultiplierContract,\n    isOpen,\n    isTurbosContract,\n    getDigitInfo,\n    getDisplayStatus,\n    WS,\n    getContractUpdateConfig,\n    getContractValidationRules,\n    BARRIER_LINE_STYLES,\n    DEFAULT_SHADES,\n    isBarrierSupported,\n    getAccuBarriersDefaultTimeout,\n    getAccuBarriersForContractDetails,\n    getEndTime,\n    BARRIER_COLORS,\n    getContractStatus,\n} from '@deriv/shared';\nimport { getChartConfig } from './Helpers/logic';\nimport { setLimitOrderBarriers, getLimitOrder } from './Helpers/limit-orders';\nimport { ChartBarrierStore } from './chart-barrier-store';\nimport { createChartMarkers, calculateMarker, getAccumulatorMarkers } from './Helpers/chart-markers';\nimport BaseStore from './base-store';\n\nexport default class ContractStore extends BaseStore {\n    constructor(root_store, { contract_id }) {\n        super({\n            root_store,\n            validation_rules: getContractValidationRules(),\n        });\n\n        makeObservable(this, {\n            accu_high_barrier: observable,\n            accu_low_barrier: observable,\n            cached_barriers_data: observable,\n            digits_info: observable,\n            sell_info: observable,\n            contract_config: observable.ref,\n            display_status: observable,\n            is_ended: observable,\n            is_digit_contract: observable,\n            error_message: observable,\n            contract_info: observable.ref,\n            is_static_chart: observable,\n            end_time: observable,\n            contract_update_take_profit: observable,\n            contract_update_stop_loss: observable,\n            has_contract_update_take_profit: observable,\n            has_contract_update_stop_loss: observable,\n            contract_update_history: observable.ref,\n            margin: observable,\n            barriers_array: observable.shallow,\n            markers_array: observable.shallow,\n            marker: observable.ref,\n            accumulator_marker: observable.ref,\n            populateConfig: action.bound,\n            populateContractUpdateConfig: action.bound,\n            populateContractUpdateHistory: action.bound,\n            clearContractUpdateConfigValues: action.bound,\n            onChange: action.bound,\n            updateLimitOrder: action.bound,\n            getContractsArray: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.contract_id = contract_id;\n    }\n\n    // --- Observable properties ---\n    digits_info = observable.object({});\n    sell_info = observable.object({});\n\n    contract_config = {};\n    display_status = 'purchased';\n    is_ended = false;\n    is_digit_contract = false;\n\n    // TODO: see how to handle errors.\n    error_message = '';\n\n    contract_info = observable.object({});\n\n    is_static_chart = false;\n    end_time = null;\n\n    // Accumulator contract\n    accu_high_barrier = null;\n    accu_low_barrier = null;\n    cached_barriers_data = {};\n\n    // Multiplier contract update config\n    contract_update_take_profit = '';\n    contract_update_stop_loss = '';\n    has_contract_update_take_profit = false;\n    has_contract_update_stop_loss = false;\n    contract_update_history = [];\n    contract_update_config = {};\n\n    // ---- chart props\n    margin;\n    barriers_array = [];\n    markers_array = [];\n    marker = null;\n    accumulator_marker = null;\n\n    // ---- Normal properties ---\n    is_ongoing_contract = false;\n\n    populateConfig(contract_info, is_last_contract = false) {\n        const prev_contract_info = this.contract_info;\n        this.contract_info = contract_info;\n        this.end_time = getEndTime(this.contract_info);\n        const { accu_high_barrier, accu_low_barrier } = getAccuBarriersForContractDetails(contract_info);\n        this.accu_high_barrier = accu_high_barrier;\n        this.accu_low_barrier = accu_low_barrier;\n        // TODO: don't update the barriers & markers if they are not changed\n        this.updateBarriersArray(contract_info, this.root_store.ui.is_dark_mode_on);\n        this.markers_array = createChartMarkers(this.contract_info);\n        this.marker = calculateMarker(this.contract_info, this.root_store.ui.is_dark_mode_on, is_last_contract);\n        this.contract_config = getChartConfig(this.contract_info);\n        this.display_status = getDisplayStatus(this.contract_info);\n        this.is_ended = isEnded(this.contract_info);\n        this.is_digit_contract = isDigitContract(this.contract_info.contract_type);\n        // API doesn't return barrier for digit contracts (sometimes), remove this check once resolved\n        if (!this.contract_info.barrier && prev_contract_info.barrier && this.is_digit_contract) {\n            this.contract_info.barrier = prev_contract_info.barrier;\n        }\n\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n\n        // force to sell the expired contract, in order to remove from portfolio\n        if (+contract_info.is_settleable === 1 && !contract_info.is_sold) {\n            WS.send({ sell_expired: 1 });\n        }\n\n        const is_multiplier = isMultiplierContract(this.contract_info.contract_type);\n        const is_accumulator = isAccumulatorContract(this.contract_info.contract_type);\n        const is_turbos = isTurbosContract(this.contract_info.contract_type);\n\n        if ((is_accumulator || is_multiplier || is_turbos) && contract_info.contract_id && contract_info.limit_order) {\n            this.populateContractUpdateConfig(this.contract_info);\n        }\n    }\n\n    cacheProposalOpenContractResponse = response => {\n        const { contract_id } = response.proposal_open_contract;\n        WS.storage.set({ proposal_open_contract: 1, contract_id }, response);\n    };\n\n    populateContractUpdateConfig(response) {\n        const contract_update_config = getContractUpdateConfig(response);\n        if (!isEqualObject(this.contract_update_config, contract_update_config)) {\n            Object.assign(this, contract_update_config);\n            this.contract_update_config = contract_update_config;\n\n            const { contract_update, error } = response;\n            if (contract_update && !error) {\n                this.contract_info.limit_order = Object.assign(this.contract_info.limit_order || {}, contract_update);\n            }\n        }\n    }\n\n    populateContractUpdateHistory({ contract_update_history }) {\n        this.root_store.contract_replay.contract_store.contract_update_history = contract_update_history.sort(\n            (a, b) => b.order_date - a.order_date\n        );\n    }\n\n    updateBarriersArray(contract_info, is_dark_mode) {\n        const {\n            barrier,\n            contract_type,\n            current_spot_high_barrier,\n            current_spot_low_barrier,\n            high_barrier,\n            low_barrier,\n            status,\n            current_spot_time,\n            underlying,\n            tick_stream: ticks = [],\n        } = contract_info || {};\n        const main_barrier = this.barriers_array?.[0];\n        if (isAccumulatorContract(contract_info.contract_type)) {\n            // even though updateBarriersArray is called both in DTrader & C.Details pages,\n            // the below code will delay Accumulator barriers and their labels only in Contract Details.\n            if (\n                this.cached_barriers_data.current_spot_high_barrier === current_spot_high_barrier &&\n                this.cached_barriers_data.current_spot_low_barrier === current_spot_low_barrier &&\n                this.cached_barriers_data.high_barrier === high_barrier &&\n                this.cached_barriers_data.low_barrier === low_barrier &&\n                this.cached_barriers_data.status === status\n            ) {\n                return;\n            }\n\n            const contract_status = getContractStatus(contract_info);\n            const is_accu_contract_ended = contract_status !== 'open';\n            const prev_epoch = is_accu_contract_ended\n                ? ticks[ticks.length - 2]?.epoch || ticks[ticks.length - 1]?.epoch\n                : current_spot_time;\n\n            if (is_accu_contract_ended) {\n                this.accumulator_marker = getAccumulatorMarkers({\n                    high_barrier,\n                    low_barrier,\n                    prev_epoch,\n                    is_dark_mode_on: is_dark_mode,\n                    contract_info,\n                    in_contract_details: true,\n                });\n            }\n\n            if (!this.barriers_array.length) {\n                // Accumulators barrier range in C.Details consists of labels (this.barriers_array) and horizontal lines with shade (this.marker)\n                this.barriers_array = this.createBarriersArray(\n                    {\n                        ...contract_info,\n                        high_barrier: this.accu_high_barrier,\n                        low_barrier: this.accu_low_barrier,\n                    },\n                    is_dark_mode\n                );\n                return;\n            }\n\n            setTimeout(\n                () =>\n                    runInAction(() => {\n                        if (contract_info) {\n                            if (isBarrierSupported(contract_type) && this.accu_high_barrier && this.accu_low_barrier) {\n                                // updating barrier labels in C.Details page\n                                main_barrier?.updateBarriers(this.accu_high_barrier, this.accu_low_barrier);\n                            }\n                            // this.markers_array contains tick markers & start/end vertical lines in C.Details page\n                            this.markers_array = createChartMarkers(contract_info, true);\n\n                            this.accumulator_marker = getAccumulatorMarkers({\n                                high_barrier: this.accu_high_barrier,\n                                low_barrier: this.accu_low_barrier,\n                                prev_epoch,\n                                is_dark_mode_on: this.root_store.ui.is_dark_mode_on,\n                                contract_info: this.contract_info,\n                                in_contract_details: true,\n                            });\n                        }\n                    }),\n                isOpen(contract_info) ? getAccuBarriersDefaultTimeout(underlying) : 0\n            );\n            this.cached_barriers_data = {\n                current_spot_high_barrier,\n                current_spot_low_barrier,\n                high_barrier,\n                low_barrier,\n                status,\n            };\n            return;\n        }\n        if (!this.barriers_array.length) {\n            this.barriers_array = this.createBarriersArray(contract_info, is_dark_mode);\n            return;\n        }\n        if (contract_info) {\n            if (isBarrierSupported(contract_type) && (barrier || high_barrier)) {\n                main_barrier?.updateBarriers(barrier || high_barrier, low_barrier);\n            }\n            if (\n                contract_info.contract_id &&\n                contract_info.contract_id === this.root_store.contract_replay.contract_id\n            ) {\n                setLimitOrderBarriers({\n                    barriers: this.barriers_array,\n                    contract_info,\n                    contract_type,\n                    is_over: true,\n                });\n            }\n        }\n    }\n\n    createBarriersArray = contract_info => {\n        let barriers = [];\n        if (contract_info) {\n            const { contract_type, barrier, entry_spot, high_barrier: high, low_barrier } = contract_info;\n            const high_barrier = this.accu_high_barrier || barrier || high;\n            if (\n                isBarrierSupported(contract_type) &&\n                (high_barrier || (entry_spot && !isAccumulatorContract(contract_type)))\n            ) {\n                // create barrier only when it's available in response\n                const main_barrier = new ChartBarrierStore(\n                    high_barrier || entry_spot,\n                    this.accu_low_barrier || low_barrier,\n                    null,\n                    {\n                        color: BARRIER_COLORS.BLUE,\n                        line_style: !isAccumulatorContract(contract_type) && BARRIER_LINE_STYLES.SOLID,\n                        not_draggable: true,\n                        hideBarrierLine: isAccumulatorContract(contract_type),\n                        shade: isAccumulatorContract(contract_type) && DEFAULT_SHADES['2'],\n                    }\n                );\n\n                main_barrier.updateBarrierShade(true, contract_type);\n                barriers = [main_barrier];\n            }\n        }\n        return barriers;\n    };\n\n    clearContractUpdateConfigValues() {\n        Object.assign(this, getContractUpdateConfig(this.contract_info));\n        this.validation_errors.contract_update_stop_loss = [];\n        this.validation_errors.contract_update_take_profit = [];\n    }\n\n    onChange({ name, value }) {\n        this[name] = value;\n        this.validateProperty(name, this[name]);\n    }\n\n    updateLimitOrder() {\n        const limit_order =\n            isAccumulatorContract(this.contract_info.contract_type) ||\n            isTurbosContract(this.contract_info.contract_type)\n                ? { take_profit: getLimitOrder(this).take_profit }\n                : getLimitOrder(this);\n\n        WS.contractUpdate(this.contract_id, limit_order).then(response => {\n            if (response.error) {\n                this.root_store.common.setServicesError({\n                    type: response.msg_type,\n                    ...response.error,\n                });\n                return;\n            }\n\n            // Update contract store\n            this.populateContractUpdateConfig(response);\n            if (this.root_store.ui.is_history_tab_active) {\n                WS.contractUpdateHistory(this.contract_id).then(this.populateContractUpdateHistory);\n            }\n\n            // Update portfolio store\n            this.root_store.portfolio.populateContractUpdate(response, this.contract_id);\n        });\n    }\n\n    getContractsArray() {\n        if (!this.accumulator_marker) return [];\n        return [this.accumulator_marker];\n    }\n}\n","import { action, observable, makeObservable, override } from 'mobx';\nimport { routes, isEmptyObject, isForwardStarting, WS, contractCancelled, contractSold } from '@deriv/shared';\nimport { Money } from '@deriv/components';\nimport { Analytics } from '@deriv/analytics';\nimport { localize } from '@deriv/translations';\nimport ContractStore from './contract-store';\nimport BaseStore from './base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    chart_state = '';\n    contract_store = { contract_info: {} };\n    // --- Observable properties ---\n    is_market_closed = false;\n    is_sell_requested = false;\n    has_error = false;\n    error_message = '';\n    error_code = '';\n    is_chart_loading = true;\n    is_chart_scaling = false;\n    is_forward_starting = false;\n    // ---- chart props\n    margin;\n\n    // ---- Replay Contract Config ----\n    contract_id;\n    indicative_status;\n    contract_info = observable.object({});\n    is_static_chart = false;\n\n    // ---- Normal properties ---\n    is_ongoing_contract = false;\n    prev_indicative = 0;\n\n    contract_update = observable.object({});\n    // TODO: you view a contract and then share that link with another person,\n    // when the person opens, try to switch account they get the error\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = async (contract_id, cb) => {\n        // expired contracts are cached and we can get the poc response from local storage\n        const is_cached = await WS.storage.has({ proposal_open_contract: 1, contract_id });\n        if (is_cached) {\n            WS.storage.proposalOpenContract({ contract_id }).then(cb);\n            return;\n        }\n\n        if (this.should_forget_first) {\n            // TODO; don't forget all ever\n            await WS.forgetAll('proposal_open_contract');\n            this.should_forget_first = false;\n        }\n\n        this.subscriber = WS.subscribeProposalOpenContract(contract_id, cb);\n    };\n\n    subscribeProposalOpenContract = () => {\n        WS.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n        });\n    };\n\n    constructor(root_store) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super(root_store);\n\n        makeObservable(this, {\n            chart_state: observable,\n            contract_store: observable,\n            is_market_closed: observable,\n            is_sell_requested: observable,\n            has_error: observable,\n            error_message: observable,\n            error_code: observable,\n            is_chart_loading: observable,\n            is_chart_scaling: observable,\n            is_forward_starting: observable,\n            margin: observable,\n            contract_id: observable,\n            indicative_status: observable,\n            contract_info: observable.ref,\n            is_static_chart: observable,\n            contract_update: observable.ref,\n            onMount: action.bound,\n            onUnmount: override,\n            populateConfig: action.bound,\n            updateMargin: action.bound,\n            chartStateChange: action.bound,\n            onClickCancel: action.bound,\n            onClickSell: action.bound,\n            handleSell: action.bound,\n            removeErrorMessage: action.bound,\n        });\n\n        this.root_store = root_store;\n    }\n\n    onMount(contract_id) {\n        if (contract_id) {\n            this.contract_id = contract_id;\n            this.contract_store = new ContractStore(this.root_store, { contract_id });\n            this.subscribeProposalOpenContract();\n            WS.setOnReconnect(() => {\n                if (!this.root_store.client.is_switching) {\n                    this.subscribeProposalOpenContract();\n                }\n            });\n        }\n    }\n\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id = null;\n        this.is_ongoing_contract = false;\n        this.is_static_chart = false;\n        this.is_chart_loading = true;\n        this.contract_info = {};\n        this.indicative_status = null;\n        this.prev_indicative = 0;\n        this.chart_state = '';\n        this.root_store.ui.toggleHistoryTab(false);\n        WS.removeOnReconnect();\n    }\n\n    populateConfig(response) {\n        if (!this.switch_account_listener) return;\n\n        if ('error' in response) {\n            const { code, message } = response.error;\n            this.has_error = true;\n            this.is_chart_loading = false;\n            this.error_message = message;\n            this.error_code = code;\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error = true;\n            this.error_message = localize(\n                \"Sorry, you can't view this contract because it doesn't belong to this account.\"\n            );\n            this.should_forget_first = true;\n            this.is_chart_loading = false;\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n        this.contract_update = response.proposal_open_contract.limit_order;\n\n        // Add indicative status for contract\n        const prev_indicative = this.prev_indicative;\n        const new_indicative = +this.contract_info.bid_price;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = new_indicative;\n\n        const is_forward_starting =\n            !!this.contract_info.is_forward_starting ||\n            isForwardStarting(this.contract_info.shortcode, this.contract_info.purchase_time);\n\n        this.is_forward_starting = is_forward_starting;\n\n        // update the contract_store here passing contract_info\n        this.contract_store.populateConfig(this.contract_info);\n\n        const end_time = this.contract_store.end_time;\n\n        this.updateMargin((end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        if (this.contract_info.is_sold) {\n            this.contract_store.cacheProposalOpenContractResponse(response);\n        }\n    }\n\n    updateMargin(duration) {\n        const granularity = this.contract_store.contract_config.granularity;\n\n        this.margin = Math.floor(!granularity ? Math.max(300, (30 * duration) / (60 * 60) || 0) : 3 * granularity);\n    }\n\n    chartStateChange(state, option) {\n        this.chart_state = state;\n        const market_close_prop = 'isClosed';\n\n        // SmartChart has a weird interaction for getting scale 1:1,\n        // the process of loading an expired contract should follow this,\n        // show loading, first load the chart, then add the endEpoch then request for\n        // scale 1:1 and then wait till chart perform the scale 1:1 then\n        // hide the loading.\n        switch (state) {\n            case 'INITIAL':\n                this.is_chart_scaling = false;\n                // this is for deriv resizing from desktop to mobile,\n                // that show the loading till the chart reflect complete\n                if (!this.is_chart_loading) this.is_chart_loading = true;\n                break;\n            case 'READY':\n                setTimeout(\n                    action(() => (this.is_chart_scaling = true)),\n                    10\n                );\n                break;\n            case 'SCROLL_TO_LEFT':\n                // this Delay is for when the chart try to sacle 1:1 and we want to hide\n                // scale 1:1 jumping from the user\n                setTimeout(\n                    action(() => {\n                        this.is_chart_loading = false;\n                    }),\n                    20\n                );\n                break;\n            case 'MARKET_STATE_CHANGE':\n                if (option && market_close_prop in option) {\n                    this.is_market_closed = option[market_close_prop];\n                }\n                break;\n            default:\n        }\n    }\n\n    onClickCancel(contract_id) {\n        if (contract_id) {\n            WS.cancelContract(contract_id).then(response => {\n                if (response.error) {\n                    this.root_store.common.setServicesError({\n                        type: response.msg_type,\n                        ...response.error,\n                    });\n                } else {\n                    this.root_store.notifications.addNotificationMessage(contractCancelled());\n                }\n            });\n        }\n    }\n\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && (bid_price || bid_price === 0)) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.setServicesError({\n                type: response.msg_type,\n                ...response.error,\n            });\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price: response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.notifications.addNotificationMessage(\n                contractSold(this.root_store.client.currency, response.sell.sold_for, Money)\n            );\n\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'close_contract',\n                form_name: 'default',\n                subform_name: 'contract_details_form',\n            });\n        }\n    }\n\n    forgetProposalOpenContract = () => {\n        if (this.subscriber) {\n            this.subscriber.unsubscribe();\n            delete this.subscriber;\n        }\n    };\n\n    removeErrorMessage() {\n        this.error_message = '';\n        this.has_error = false;\n    }\n\n    setAccountSwitcherListener = (contract_id, history) => {\n        this.onSwitchAccount(() => this.accountSwitcherListener(contract_id, history));\n    };\n\n    accountSwitcherListener = (contract_id, history) => {\n        // if contract had an error on the previous account\n        // try fetching it again for the new account\n        // in case it belongs to this account\n        if (this.has_error) {\n            this.removeErrorMessage();\n            this.onMount(contract_id);\n        } else if (!this.root_store.common.is_language_changing) {\n            history.push(routes.reports);\n        }\n        return Promise.resolve();\n    };\n\n    removeAccountSwitcherListener = () => {\n        this.disposeSwitchAccount();\n    };\n}\n","import { action, computed, makeObservable, observable, override, reaction, runInAction, toJS } from 'mobx';\n\nimport {\n    CONTRACT_TYPES,\n    getAccuBarriersDTraderTimeout,\n    getContractTypesConfig,\n    isAccumulatorContract,\n    isAccumulatorContractOpen,\n    isCallPut,\n    isDesktop,\n    isEnded,\n    isHighLow,\n    isMultiplierContract,\n    isTurbosContract,\n    isVanillaContract,\n    LocalStore,\n    switch_to_tick_chart,\n    TRADE_TYPES,\n} from '@deriv/shared';\n\nimport BaseStore from './base-store';\nimport { getAccumulatorMarkers } from './Helpers/chart-markers';\nimport ContractStore from './contract-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    contracts = [];\n    contracts_map = {};\n    has_error = false;\n    error_message = '';\n\n    // Chart specific observables\n    granularity = +LocalStore.get('contract_trade.granularity') || 0;\n    chart_type = LocalStore.get('contract_trade.chart_style') || 'line';\n    prev_chart_type = '';\n    prev_granularity = null;\n\n    // Accumulator barriers data:\n    accu_barriers_timeout_id = null;\n    accumulator_barriers_data = {};\n    accumulator_contract_barriers_data = {};\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            accu_barriers_timeout_id: observable,\n            accumulator_barriers_data: observable.struct,\n            accumulator_contract_barriers_data: observable.struct,\n            clearAccumulatorBarriersData: action.bound,\n            contracts: observable.shallow,\n            has_crossed_accu_barriers: computed,\n            has_error: observable,\n            error_message: observable,\n            granularity: observable,\n            chart_type: observable,\n            updateAccumulatorBarriersData: action.bound,\n            updateChartType: action.bound,\n            updateGranularity: action.bound,\n            markers_array: computed,\n            filtered_contracts: computed,\n            addContract: action.bound,\n            removeContract: action.bound,\n            accountSwitchListener: action.bound,\n            onUnmount: override,\n            prev_chart_type: observable,\n            prev_granularity: observable,\n            updateProposal: action.bound,\n            last_contract: computed,\n            clearError: action.bound,\n            getContractById: action.bound,\n            savePreviousChartMode: action.bound,\n            setNewAccumulatorBarriersData: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.onSwitchAccount(this.accountSwitchListener);\n\n        reaction(\n            () => this.last_contract.contract_info,\n            () => {\n                if (!isAccumulatorContract(this.last_contract.contract_info?.contract_type)) return;\n                const {\n                    barrier_spot_distance,\n                    current_spot,\n                    current_spot_time,\n                    current_spot_high_barrier,\n                    current_spot_low_barrier,\n                    is_sold,\n                    underlying,\n                } = this.last_contract.contract_info || {};\n                if (current_spot && current_spot_high_barrier && !is_sold) {\n                    this.updateAccumulatorBarriersData({\n                        barrier_spot_distance,\n                        current_spot_time,\n                        accumulators_high_barrier: current_spot_high_barrier,\n                        accumulators_low_barrier: current_spot_low_barrier,\n                        should_update_contract_barriers: true,\n                        underlying,\n                    });\n                } else if (!isAccumulatorContractOpen(this.last_contract.contract_info)) {\n                    this.clearAccumulatorBarriersData(true, false);\n                }\n            }\n        );\n    }\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n\n    clearAccumulatorBarriersData(should_clear_contract_data_only, should_clear_timeout = true) {\n        if (this.accu_barriers_timeout_id && should_clear_timeout) clearTimeout(this.accu_barriers_timeout_id);\n        if (!isAccumulatorContractOpen(this.last_contract.contract_info)) this.accumulator_contract_barriers_data = {};\n        if (!should_clear_contract_data_only) {\n            this.accumulator_barriers_data = {};\n        }\n    }\n\n    setNewAccumulatorBarriersData(new_barriers_data, should_update_contract_barriers) {\n        if (should_update_contract_barriers) {\n            this.accumulator_contract_barriers_data = {\n                ...this.accumulator_contract_barriers_data,\n                ...new_barriers_data,\n            };\n        } else {\n            this.accumulator_barriers_data = {\n                ...this.accumulator_barriers_data,\n                ...new_barriers_data,\n            };\n        }\n    }\n\n    updateAccumulatorBarriersData({\n        accumulators_high_barrier,\n        accumulators_low_barrier,\n        barrier_spot_distance,\n        current_spot,\n        current_spot_time,\n        prev_spot_time,\n        should_update_contract_barriers,\n        underlying,\n    }) {\n        if (current_spot) {\n            const ticks_history_prev_spot_time = prev_spot_time ?? this.accumulator_barriers_data.current_spot_time;\n            // update current tick coming from ticks_history while skipping an update for duplicate data\n            if (current_spot_time === ticks_history_prev_spot_time) return;\n            const current_spot_data = {\n                current_spot,\n                current_spot_time,\n                ticks_history_prev_spot_time,\n                tick_update_timestamp: Date.now(),\n            };\n            this.setNewAccumulatorBarriersData(current_spot_data, true);\n            this.setNewAccumulatorBarriersData(current_spot_data);\n            return;\n        }\n        const delayed_barriers_data = {\n            accumulators_high_barrier,\n            accumulators_low_barrier,\n            barrier_spot_distance,\n            should_update_contract_barriers,\n            proposal_prev_spot_time: current_spot_time,\n        };\n        if (\n            (this.accumulator_barriers_data.current_spot_time &&\n                this.accumulator_barriers_data.current_spot_time !== current_spot_time &&\n                !this.accumulator_barriers_data.accumulators_high_barrier) ||\n            Object.keys(delayed_barriers_data).every(key =>\n                should_update_contract_barriers\n                    ? this.accumulator_contract_barriers_data[key] === delayed_barriers_data[key]\n                    : this.accumulator_barriers_data[key] === delayed_barriers_data[key]\n            )\n        ) {\n            // skip an update for duplicate data, or when a tick, which current barriers are related to, was not returned from ticks_history\n            return;\n        }\n        // update barriers, which are returned from proposal/proposal_open_contract, after timeout on DTrader page\n        const tick_update_timestamp = should_update_contract_barriers\n            ? this.accumulator_contract_barriers_data.tick_update_timestamp\n            : this.accumulator_barriers_data.tick_update_timestamp;\n        if (document.hidden) {\n            clearTimeout(this.accu_barriers_timeout_id);\n            this.setNewAccumulatorBarriersData(delayed_barriers_data, should_update_contract_barriers);\n            return;\n        }\n        this.accu_barriers_timeout_id = setTimeout(\n            () => {\n                runInAction(() => {\n                    this.setNewAccumulatorBarriersData(delayed_barriers_data, should_update_contract_barriers);\n                });\n            },\n            getAccuBarriersDTraderTimeout({\n                barriers_update_timestamp: Date.now(),\n                has_default_timeout: this.accumulator_barriers_data.current_spot_time !== current_spot_time,\n                tick_update_timestamp,\n                underlying,\n            })\n        );\n    }\n\n    updateChartType(type) {\n        LocalStore.set('contract_trade.chart_style', type);\n        this.chart_type = type;\n    }\n\n    updateGranularity(granularity) {\n        const tick_chart_types = ['line', 'candles', 'hollow', 'ohlc'];\n\n        if (granularity === 0 && tick_chart_types.indexOf(this.chart_type) === -1) {\n            this.chart_type = 'line';\n        }\n\n        LocalStore.set('contract_trade.granularity', granularity);\n        this.granularity = granularity;\n        if (this.granularity === 0) {\n            this.root_store.notifications.removeNotificationMessage(switch_to_tick_chart);\n        }\n    }\n\n    savePreviousChartMode(chart_type, granularity) {\n        this.prev_chart_type = chart_type;\n        this.prev_granularity = granularity;\n    }\n\n    applicable_contracts = () => {\n        const { contract_type: trade_type, symbol: underlying } =\n            JSON.parse(sessionStorage.getItem('trade_store')) || {};\n\n        if (!trade_type || !underlying) {\n            return [];\n        }\n        let { trade_types } = getContractTypesConfig()[trade_type];\n        const is_call_put = isCallPut(trade_type);\n        if (is_call_put) {\n            // treat CALLE/PUTE and CALL/PUT the same\n            trade_types = [CONTRACT_TYPES.CALLE, CONTRACT_TYPES.PUTE, CONTRACT_TYPES.CALL, CONTRACT_TYPES.PUT];\n        } else if (isTurbosContract(trade_type)) {\n            //to show both Long and Short recent contracts on DTrader chart\n            trade_types = [CONTRACT_TYPES.TURBOS.LONG, CONTRACT_TYPES.TURBOS.SHORT];\n        } else if (isVanillaContract(trade_type)) {\n            //to show both Call and Put recent contracts on DTrader chart\n            trade_types = [CONTRACT_TYPES.VANILLA.CALL, CONTRACT_TYPES.VANILLA.PUT];\n        }\n\n        return this.contracts\n            .filter(c => c.contract_info.underlying === underlying)\n            .filter(c => {\n                const info = c.contract_info;\n                const has_multiplier_contract_ended =\n                    isMultiplierContract(info.contract_type) && isEnded(c.contract_info);\n                // filter multiplier contract which has ended\n                return !has_multiplier_contract_ended;\n            })\n            .filter(c => {\n                const info = c.contract_info;\n\n                const trade_type_is_supported = trade_types.indexOf(info.contract_type) !== -1;\n                // both high_low & rise_fall have the same contract_types in POC response\n                // entry_spot=barrier means it is rise_fall contract (blame the api)\n                if (trade_type_is_supported && is_call_put && ((info.barrier && info.entry_tick) || info.shortcode)) {\n                    if (`${+info.entry_tick}` === `${+info.barrier}` && !isHighLow(info)) {\n                        return trade_type === TRADE_TYPES.RISE_FALL || trade_type === TRADE_TYPES.RISE_FALL_EQUAL;\n                    }\n                    return trade_type === TRADE_TYPES.HIGH_LOW;\n                }\n                return trade_type_is_supported;\n            });\n    };\n\n    get has_crossed_accu_barriers() {\n        const { symbol } = JSON.parse(sessionStorage.getItem('trade_store')) || {};\n        const { current_spot: contract_current_spot, entry_spot, underlying } = this.last_contract.contract_info || {};\n        const {\n            accumulators_high_barrier,\n            accumulators_low_barrier,\n            current_spot,\n            proposal_prev_spot_time,\n            ticks_history_prev_spot_time,\n        } =\n            (isAccumulatorContractOpen(this.last_contract.contract_info)\n                ? this.accumulator_contract_barriers_data\n                : this.accumulator_barriers_data) || {};\n        const is_knock_out =\n            current_spot &&\n            accumulators_high_barrier &&\n            accumulators_low_barrier &&\n            (current_spot >= accumulators_high_barrier || current_spot <= accumulators_low_barrier);\n        const is_relevant_barrier =\n            ticks_history_prev_spot_time && ticks_history_prev_spot_time === proposal_prev_spot_time;\n        const should_highlight_contract_barriers =\n            entry_spot && entry_spot !== contract_current_spot && underlying === symbol;\n        return !!(\n            is_knock_out &&\n            is_relevant_barrier &&\n            (!isAccumulatorContractOpen(this.last_contract.contract_info) || should_highlight_contract_barriers)\n        );\n    }\n\n    get filtered_contracts() {\n        return this.applicable_contracts();\n    }\n\n    get markers_array() {\n        let markers = [];\n        const { contract_type: trade_type } = JSON.parse(sessionStorage.getItem('trade_store')) || {};\n        markers = this.applicable_contracts()\n            .map(c => c.marker)\n            .filter(m => m)\n            .map(m => toJS(m));\n\n        const { current_spot_time, entry_tick_time, exit_tick_time } = this.last_contract.contract_info || {};\n\n        const should_show_poc_barriers =\n            (entry_tick_time && entry_tick_time !== current_spot_time) ||\n            (exit_tick_time && current_spot_time <= exit_tick_time);\n\n        const { accumulators_high_barrier, accumulators_low_barrier, barrier_spot_distance, proposal_prev_spot_time } =\n            (isAccumulatorContractOpen(this.last_contract.contract_info) &&\n                should_show_poc_barriers &&\n                this.accumulator_contract_barriers_data?.accumulators_high_barrier &&\n                this.accumulator_contract_barriers_data) ||\n            this.accumulator_barriers_data ||\n            {};\n\n        if (trade_type === TRADE_TYPES.ACCUMULATOR && proposal_prev_spot_time && accumulators_high_barrier) {\n            const is_open = isAccumulatorContractOpen(this.last_contract.contract_info);\n            markers.push(\n                getAccumulatorMarkers({\n                    high_barrier: accumulators_high_barrier,\n                    low_barrier: accumulators_low_barrier,\n                    barrier_spot_distance,\n                    prev_epoch: proposal_prev_spot_time,\n                    has_crossed_accu_barriers: this.has_crossed_accu_barriers,\n                    is_dark_theme: this.root_store.ui.is_dark_mode_on,\n                    contract_info: is_open ? this.last_contract.contract_info : {},\n                    is_accumulator_trade_without_contract: !is_open || !entry_tick_time,\n                })\n            );\n        }\n        return markers;\n    }\n\n    addContract({\n        barrier,\n        contract_id,\n        contract_type,\n        start_time,\n        longcode,\n        underlying,\n        is_tick_contract,\n        limit_order = {},\n    }) {\n        const existing_contract = this.contracts_map[contract_id];\n        if (existing_contract) {\n            if (this.contracts.every(c => c.contract_id !== contract_id)) {\n                this.contracts.push(existing_contract);\n            }\n            return;\n        }\n        const is_last_contract = contract_id === this.last_contract.contract_id;\n\n        const contract = new ContractStore(this.root_store, { contract_id });\n        contract.populateConfig(\n            {\n                date_start: start_time,\n                barrier,\n                contract_type,\n                longcode,\n                underlying,\n                limit_order,\n            },\n            is_last_contract\n        );\n\n        this.contracts.push(contract);\n        this.contracts_map[contract_id] = contract;\n\n        if (is_tick_contract && !this.root_store.portfolio.is_multiplier && this.granularity !== 0 && isDesktop()) {\n            this.root_store.notifications.addNotificationMessage(switch_to_tick_chart);\n        }\n    }\n\n    removeContract({ contract_id }) {\n        this.contracts = this.contracts.filter(c => c.contract_id !== contract_id);\n        delete this.contracts_map[contract_id];\n    }\n\n    accountSwitchListener() {\n        if (this.has_error) {\n            this.clearError();\n        }\n\n        return Promise.resolve();\n    }\n\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // TODO: don't forget the tick history when switching to contract-replay-store\n    }\n\n    // Called from portfolio\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error = true;\n            this.error_message = response.error.message;\n            return;\n        }\n        // Update the contract-store corresponding to this POC\n        if (response.proposal_open_contract) {\n            const contract_id = +response.proposal_open_contract.contract_id;\n            const contract = this.contracts_map[contract_id];\n            const is_last_contract = contract_id === this.last_contract.contract_id;\n            contract.populateConfig(response.proposal_open_contract, is_last_contract);\n            if (response.proposal_open_contract.is_sold) {\n                this.root_store.notifications.removeNotificationMessage(switch_to_tick_chart);\n                contract.cacheProposalOpenContractResponse(response);\n            }\n        }\n    }\n\n    get last_contract() {\n        const applicable_contracts = this.applicable_contracts();\n        const length = this.contracts[0]?.contract_info.current_spot_time ? applicable_contracts.length : -1;\n        return length > 0 ? applicable_contracts[length - 1] : {};\n    }\n\n    clearError() {\n        this.error_message = '';\n        this.has_error = false;\n    }\n\n    getContractById(contract_id) {\n        return (\n            this.contracts_map[contract_id] ||\n            // or get contract from contract_replay store when user is on the contract details page\n            this.root_store.contract_replay.contract_store\n        );\n    }\n}\n","import { action, computed, makeObservable, observable, reaction } from 'mobx';\n\nimport { CFD_PLATFORMS, ContentFlag, formatMoney, getAppstorePlatforms, getCFDAvailableAccount } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport BaseStore from './base-store';\nimport { isEuCountry } from '_common/utility';\n\nexport default class TradersHubStore extends BaseStore {\n    available_platforms = [];\n    available_cfd_accounts = [];\n    available_mt5_accounts = [];\n    available_dxtrade_accounts = [];\n    available_ctrader_accounts = [];\n    combined_cfd_mt5_accounts = [];\n    selected_account_type;\n    selected_region;\n    is_onboarding_visited = false;\n    is_first_time_visit = true;\n    is_failed_verification_modal_visible = false;\n    is_regulators_compare_modal_visible = false;\n    is_mt5_notification_modal_visible = false;\n    is_tour_open = false;\n    is_account_type_modal_visible = false;\n    account_type_card = '';\n    selected_platform_type = 'options';\n    mt5_existing_account = {};\n    open_failed_verification_for = '';\n    modal_data = {\n        active_modal: '',\n        data: {},\n    };\n    is_account_transfer_modal_open = false;\n    selected_account = {};\n    is_real_wallets_upgrade_on = false;\n    is_wallet_migration_failed = false;\n    active_modal_tab;\n    active_modal_wallet_id;\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            account_type_card: observable,\n            available_cfd_accounts: observable,\n            available_dxtrade_accounts: observable,\n            available_ctrader_accounts: observable,\n            available_mt5_accounts: observable,\n            available_platforms: observable,\n            combined_cfd_mt5_accounts: observable,\n            is_account_transfer_modal_open: observable,\n            is_account_type_modal_visible: observable,\n            is_regulators_compare_modal_visible: observable,\n            is_mt5_notification_modal_visible: observable,\n            is_failed_verification_modal_visible: observable,\n            is_tour_open: observable,\n            modal_data: observable,\n            is_onboarding_visited: observable,\n            is_first_time_visit: observable,\n            selected_account: observable,\n            selected_account_type: observable,\n            selected_platform_type: observable,\n            active_modal_tab: observable,\n            active_modal_wallet_id: observable,\n            selected_region: observable,\n            mt5_existing_account: observable,\n            open_failed_verification_for: observable,\n            is_real_wallets_upgrade_on: observable,\n            is_wallet_migration_failed: observable,\n            closeModal: action.bound,\n            content_flag: computed,\n            getAccount: action.bound,\n            getAvailableCFDAccounts: action.bound,\n            getAvailableDxtradeAccounts: action.bound,\n            getAvailableCTraderAccounts: action.bound,\n            getExistingAccounts: action.bound,\n            handleTabItemClick: action.bound,\n            setWalletModalActiveTab: action.bound,\n            setWalletModalActiveWalletID: action.bound,\n            has_any_real_account: computed,\n            is_demo_low_risk: computed,\n            is_demo: computed,\n            is_eu_selected: computed,\n            is_real: computed,\n            is_low_risk_cr_eu_real: computed,\n            no_CR_account: computed,\n            no_MF_account: computed,\n            CFDs_restricted_countries: computed,\n            financial_restricted_countries: computed,\n            openDemoCFDAccount: action.bound,\n            openModal: action.bound,\n            openRealAccount: action.bound,\n            selectAccountType: action.bound,\n            selectAccountTypeCard: action.bound,\n            switchToCRAccount: action.bound,\n            selectRegion: action.bound,\n            setCombinedCFDMT5Accounts: action.bound,\n            setSelectedAccount: action.bound,\n            setTogglePlatformType: action.bound,\n            should_show_exit_traders_modal: computed,\n            show_eu_related_content: computed,\n            startTrade: action.bound,\n            toggleAccountTransferModal: action.bound,\n            closeAccountTransferModal: action.bound,\n            toggleAccountTypeModalVisibility: action.bound,\n            setIsOnboardingVisited: action.bound,\n            setIsFirstTimeVisit: action.bound,\n            setMT5NotificationModal: action.bound,\n            toggleFailedVerificationModalVisibility: action.bound,\n            setMT5ExistingAccount: action.bound,\n            openFailedVerificationModal: action.bound,\n            toggleIsTourOpen: action.bound,\n            toggleRegulatorsCompareModal: action.bound,\n            showTopUpModal: action.bound,\n            toggleWalletsUpgrade: action.bound,\n            setWalletsMigrationFailedPopup: action.bound,\n        });\n\n        reaction(\n            () => [\n                this.selected_account_type,\n                this.selected_region,\n                this.root_store.client.is_switching,\n                this.root_store.client.mt5_login_list,\n                this.root_store.client.dxtrade_accounts_list,\n                this.root_store.client.ctrader_accounts_list,\n                this.is_demo_low_risk,\n                this.root_store.modules?.cfd?.current_list,\n                this.root_store.client.landing_companies,\n                this.root_store.common.current_language,\n                this.financial_restricted_countries,\n            ],\n            () => {\n                this.getAvailablePlatforms();\n                this.getAvailableCFDAccounts();\n            }\n        );\n\n        reaction(\n            () => [\n                this.selected_region,\n                this.root_store.client.is_landing_company_loaded,\n                this.root_store.client.loginid,\n            ],\n            () => {\n                if (this.selected_account_type === 'real') {\n                    this.setSwitchEU();\n                }\n            }\n        );\n\n        reaction(\n            () => [this.root_store.client.loginid, this.root_store.client.residence],\n            () => {\n                const residence = this.root_store.client.residence;\n                const active_demo = /^VRT|VRW/.test(this.root_store.client.loginid);\n                const active_real_mf = /^MF|MFW/.test(this.root_store.client.loginid);\n                const default_region = () => {\n                    if (((active_demo || active_real_mf) && isEuCountry(residence)) || active_real_mf) {\n                        return 'EU';\n                    }\n                    return 'Non-EU';\n                };\n                this.selected_account_type = !/^VRT|VRW/.test(this.root_store.client.loginid) ? 'real' : 'demo';\n                this.selected_region = default_region();\n            }\n        );\n    }\n\n    async setSwitchEU() {\n        const { account_list, switchAccount, loginid, setIsLoggingIn } = this.root_store.client;\n\n        const mf_account = account_list.find(acc => acc.loginid?.startsWith('MF'))?.loginid;\n        const cr_account = account_list.find(acc => acc.loginid?.startsWith('CR'))?.loginid;\n\n        if (this.selected_region === 'EU' && !loginid?.startsWith('MF')) {\n            // if active_loginid is already EU = do nothing\n            await switchAccount(mf_account).then(() => {\n                setIsLoggingIn(false);\n            });\n        } else if (this.selected_region === 'Non-EU' && !loginid?.startsWith('CR')) {\n            await switchAccount(cr_account).then(() => {\n                setIsLoggingIn(false);\n            });\n        }\n    }\n\n    setWalletModalActiveTab(tab) {\n        this.active_modal_tab = tab;\n    }\n\n    setWalletModalActiveWalletID(wallet_id) {\n        this.active_modal_wallet_id = wallet_id;\n    }\n\n    get no_MF_account() {\n        const { has_maltainvest_account } = this.root_store.client;\n        return this.selected_region === 'EU' && !has_maltainvest_account;\n    }\n\n    get no_CR_account() {\n        const { active_accounts } = this.root_store.client;\n        const result = active_accounts.some(acc => acc.landing_company_shortcode === 'svg');\n        return !result && this.selected_region === 'Non-EU';\n    }\n\n    setSelectedAccount(account) {\n        this.selected_account = account;\n    }\n\n    async selectAccountType(account_type) {\n        const { account_list, switchAccount, prev_real_account_loginid, has_active_real_account } =\n            this.root_store.client;\n\n        if (account_type === 'demo') {\n            await switchAccount(account_list.find(acc => acc.is_virtual && !acc.is_disabled)?.loginid);\n        } else if (account_type === 'real') {\n            if (!has_active_real_account && this.content_flag === ContentFlag.EU_DEMO) {\n                this.root_store.client.real_account_creation_unlock_date\n                    ? this.root_store.ui.setShouldShowCooldownModal(true)\n                    : this.root_store.ui.openRealAccountSignup('maltainvest');\n            }\n            if (prev_real_account_loginid) {\n                await switchAccount(prev_real_account_loginid);\n            } else {\n                await switchAccount(account_list.find(acc => !acc.is_virtual && !acc.is_disabled)?.loginid);\n            }\n        }\n        this.selected_account_type = account_type;\n    }\n\n    async switchToCRAccount() {\n        const { account_list, switchAccount, prev_real_account_loginid } = this.root_store.client;\n\n        if (prev_real_account_loginid && !prev_real_account_loginid.startsWith('MF')) {\n            //switch to previously selected CR account\n            await switchAccount(prev_real_account_loginid);\n        } else {\n            //if no previously selected CR account , then switch to default CR account\n            await switchAccount(\n                account_list.find(acc => !acc.is_virtual && !acc.is_disabled && !acc.loginid.startsWith('MF'))?.loginid\n            );\n        }\n\n        this.selected_account_type = 'real';\n        this.selected_region = 'Non-EU';\n    }\n\n    selectAccountTypeCard(account_type_card) {\n        this.account_type_card = account_type_card;\n    }\n\n    selectRegion(region) {\n        this.selected_region = region;\n    }\n\n    toggleIsTourOpen(is_tour_open) {\n        this.is_tour_open = is_tour_open;\n    }\n\n    get is_demo_low_risk() {\n        const { is_landing_company_loaded } = this.root_store.client;\n        if (is_landing_company_loaded) {\n            const { financial_company, gaming_company } = this.root_store.client.landing_companies;\n            return (\n                this.content_flag === ContentFlag.CR_DEMO &&\n                financial_company?.shortcode === 'maltainvest' &&\n                gaming_company?.shortcode === 'svg'\n            );\n        }\n        return false;\n    }\n\n    get content_flag() {\n        const { is_logged_in, landing_companies, residence, is_landing_company_loaded } = this.root_store.client;\n        if (is_landing_company_loaded) {\n            const { financial_company, gaming_company } = landing_companies;\n\n            //this is a conditional check for countries like Australia/Norway which fulfills one of these following conditions\n            const restricted_countries = financial_company?.shortcode === 'svg' || gaming_company?.shortcode === 'svg';\n\n            if (!is_logged_in) return '';\n            if (!gaming_company?.shortcode && financial_company?.shortcode === 'maltainvest') {\n                if (this.is_demo) return ContentFlag.EU_DEMO;\n                return ContentFlag.EU_REAL;\n            } else if (\n                financial_company?.shortcode === 'maltainvest' &&\n                gaming_company?.shortcode === 'svg' &&\n                this.is_real\n            ) {\n                if (this.is_eu_user) return ContentFlag.LOW_RISK_CR_EU;\n                return ContentFlag.LOW_RISK_CR_NON_EU;\n            } else if (\n                ((financial_company?.shortcode === 'svg' && gaming_company?.shortcode === 'svg') ||\n                    restricted_countries) &&\n                this.is_real\n            ) {\n                return ContentFlag.HIGH_RISK_CR;\n            }\n\n            // Default Check\n            if (isEuCountry(residence)) {\n                if (this.is_demo) return ContentFlag.EU_DEMO;\n                return ContentFlag.EU_REAL;\n            }\n            if (this.is_demo) return ContentFlag.CR_DEMO;\n        }\n        return ContentFlag.LOW_RISK_CR_NON_EU;\n    }\n\n    get show_eu_related_content() {\n        const eu_related = [ContentFlag.EU_DEMO, ContentFlag.EU_REAL, ContentFlag.LOW_RISK_CR_EU];\n        return eu_related.includes(this.content_flag);\n    }\n\n    get is_low_risk_cr_eu_real() {\n        return [ContentFlag.LOW_RISK_CR_EU, ContentFlag.EU_REAL].includes(this.content_flag);\n    }\n\n    getAvailablePlatforms() {\n        const appstore_platforms = getAppstorePlatforms();\n        if ((this.financial_restricted_countries || this.is_eu_user) && !this.is_demo_low_risk) {\n            this.available_platforms = appstore_platforms.filter(platform =>\n                ['EU', 'All'].some(region => region === platform.availability)\n            );\n            return;\n        } else if (\n            (this.selected_region === 'Non-EU' && !this.financial_restricted_countries) ||\n            this.is_demo_low_risk\n        ) {\n            this.available_platforms = appstore_platforms.filter(platform =>\n                ['Non-EU', 'All'].some(region => region === platform.availability)\n            );\n            return;\n        }\n        this.available_platforms = appstore_platforms;\n    }\n\n    toggleAccountTypeModalVisibility() {\n        this.is_account_type_modal_visible = !this.is_account_type_modal_visible;\n    }\n\n    setIsOnboardingVisited(is_visited) {\n        this.is_onboarding_visited = is_visited;\n    }\n\n    setIsFirstTimeVisit(is_first_time) {\n        this.is_first_time_visit = is_first_time;\n    }\n\n    get is_eu_selected() {\n        return this.selected_region === 'EU';\n    }\n\n    get should_show_exit_traders_modal() {\n        //  should display the modal when low risk cr client have atleast one mf account\n        const is_low_risk_cr_client = [\n            ContentFlag.LOW_RISK_CR_EU,\n            ContentFlag.LOW_RISK_CR_NON_EU,\n            ContentFlag.CR_DEMO,\n        ].includes(this.content_flag);\n        const { active_accounts } = this.root_store.client;\n        return is_low_risk_cr_client && active_accounts.some(acc => acc.landing_company_shortcode === 'maltainvest');\n    }\n\n    toggleRegulatorsCompareModal() {\n        this.is_regulators_compare_modal_visible = !this.is_regulators_compare_modal_visible;\n    }\n\n    setMT5NotificationModal(is_visible) {\n        this.is_mt5_notification_modal_visible = is_visible;\n    }\n\n    get has_any_real_account() {\n        return this.selected_account_type === 'real' && this.root_store.client.has_active_real_account;\n    }\n\n    setTogglePlatformType(platform_type) {\n        this.selected_platform_type = platform_type;\n    }\n\n    getAvailableCFDAccounts() {\n        const getAccountDesc = () => {\n            return !this.is_eu_user || this.is_demo_low_risk\n                ? localize('This account offers CFDs on financial instruments.')\n                : localize('This MFSA-regulated account offers CFDs on derived and financial instruments.');\n        };\n        const getSwapFreeAccountDesc = () => {\n            return localize(\n                'Trade swap-free CFDs on MT5 with forex, stocks, stock indices, commodities cryptocurrencies, ETFs and synthetic indices.'\n            );\n        };\n\n        const all_available_accounts = [\n            ...getCFDAvailableAccount(),\n            {\n                name: !this.is_eu_user || this.is_demo_low_risk ? localize('Financial') : localize('CFDs'),\n                description: getAccountDesc(),\n                platform: CFD_PLATFORMS.MT5,\n                market_type: 'financial',\n                icon: !this.is_eu_user || this.is_demo_low_risk ? 'Financial' : 'CFDs',\n                availability: 'All',\n            },\n            {\n                name: localize('Swap-Free'),\n                description: getSwapFreeAccountDesc(),\n                platform: CFD_PLATFORMS.MT5,\n                market_type: 'all',\n                icon: 'SwapFree',\n                availability: 'Non-EU',\n            },\n        ];\n        this.available_cfd_accounts = all_available_accounts.map(account => {\n            return {\n                ...account,\n                description: account.description,\n            };\n        });\n        this.getAvailableDxtradeAccounts();\n        this.getAvailableCTraderAccounts();\n        this.getAvailableMt5Accounts();\n        this.setCombinedCFDMT5Accounts();\n    }\n\n    get financial_restricted_countries() {\n        const { financial_company, gaming_company } = this.root_store.client.landing_companies;\n\n        return financial_company?.shortcode === 'svg' && !gaming_company;\n    }\n\n    get CFDs_restricted_countries() {\n        const { financial_company, gaming_company } = this.root_store.client.landing_companies;\n\n        return gaming_company?.shortcode === 'svg' && !financial_company;\n    }\n\n    getAvailableMt5Accounts() {\n        if (this.is_eu_user && !this.is_demo_low_risk) {\n            this.available_mt5_accounts = this.available_cfd_accounts.filter(account =>\n                ['EU', 'All'].some(region => region === account.availability)\n            );\n            return;\n        }\n\n        if (this.financial_restricted_countries) {\n            this.available_mt5_accounts = this.available_cfd_accounts.filter(\n                account => account.market_type === 'financial' && account.platform === CFD_PLATFORMS.MT5\n            );\n            return;\n        }\n\n        if (this.CFDs_restricted_countries) {\n            this.available_mt5_accounts = this.available_cfd_accounts.filter(\n                account =>\n                    account.market_type !== 'financial' &&\n                    account.market_type !== 'all' &&\n                    account.platform === CFD_PLATFORMS.MT5\n            );\n            return;\n        }\n\n        this.available_mt5_accounts = this.available_cfd_accounts.filter(\n            account => account.platform === CFD_PLATFORMS.MT5\n        );\n    }\n\n    getAvailableDxtradeAccounts() {\n        if (this.CFDs_restricted_countries || this.financial_restricted_countries) {\n            this.available_dxtrade_accounts = [];\n            return;\n        }\n\n        if (this.is_eu_user && !this.is_demo_low_risk) {\n            this.available_dxtrade_accounts = this.available_cfd_accounts.filter(\n                account =>\n                    ['EU', 'All'].some(region => region === account.availability) &&\n                    account.platform === CFD_PLATFORMS.DXTRADE\n            );\n            return;\n        }\n\n        this.available_dxtrade_accounts = this.available_cfd_accounts.filter(\n            account => account.platform === CFD_PLATFORMS.DXTRADE\n        );\n    }\n    getAvailableCTraderAccounts() {\n        if (this.CFDs_restricted_countries || this.financial_restricted_countries) {\n            this.available_ctrader_accounts = [];\n            return;\n        }\n\n        if (this.is_eu_user && !this.is_demo_low_risk) {\n            this.available_ctrader_accounts = this.available_cfd_accounts.filter(\n                account =>\n                    ['EU', 'All'].some(region => region === account.availability) &&\n                    account.platform === CFD_PLATFORMS.CTRADER\n            );\n            return;\n        }\n        this.available_ctrader_accounts = this.available_cfd_accounts.filter(\n            account => account.platform === CFD_PLATFORMS.CTRADER\n        );\n    }\n\n    getExistingAccounts(platform, market_type) {\n        const { residence } = this.root_store.client;\n        const current_list = this.root_store.modules?.cfd?.current_list || [];\n        const current_list_keys = Object.keys(current_list);\n        const selected_account_type = this.selected_account_type;\n        const existing_accounts = current_list_keys\n            .filter(key => {\n                const maltainvest_account = current_list[key].landing_company_short === 'maltainvest';\n\n                if (platform === CFD_PLATFORMS.MT5 && !this.is_eu_user && !maltainvest_account) {\n                    return key.startsWith(`${platform}.${selected_account_type}.${market_type}`);\n                }\n                if (platform === CFD_PLATFORMS.MT5 && market_type === 'all') {\n                    return key.startsWith(`${platform}.${selected_account_type}.${platform}@${market_type}`);\n                }\n                if (platform === CFD_PLATFORMS.DXTRADE && market_type === 'all') {\n                    return key.startsWith(`${platform}.${selected_account_type}.${platform}@${market_type}`);\n                }\n                if (platform === CFD_PLATFORMS.CTRADER && market_type === 'all') {\n                    return key.startsWith(`${platform}.${selected_account_type}.${platform}@${market_type}`);\n                }\n                if (\n                    platform === CFD_PLATFORMS.MT5 &&\n                    (this.is_eu_user || isEuCountry(residence)) &&\n                    maltainvest_account\n                ) {\n                    return key.startsWith(`${platform}.${selected_account_type}.${market_type}`);\n                }\n\n                return key.startsWith(`${platform}.${selected_account_type}.${market_type}@${market_type}`);\n            })\n            .reduce((_acc, cur) => {\n                _acc.push(current_list[cur]);\n                return _acc;\n            }, []);\n        return existing_accounts;\n    }\n\n    startTrade(platform, account) {\n        const { common, modules } = this.root_store;\n        const { toggleMT5TradeModal, setMT5TradeAccount } = modules.cfd;\n        const { setAppstorePlatform } = common;\n        setAppstorePlatform(platform);\n        toggleMT5TradeModal();\n        setMT5TradeAccount(account);\n    }\n\n    get is_demo() {\n        return this.selected_account_type === 'demo';\n    }\n    get is_real() {\n        return this.selected_account_type === 'real';\n    }\n    get is_eu_user() {\n        return this.selected_region === 'EU';\n    }\n\n    handleTabItemClick(idx) {\n        if (idx === 0) {\n            this.selected_region = 'Non-EU';\n        } else {\n            this.selected_region = 'EU';\n        }\n    }\n\n    async openDemoCFDAccount(account_type, platform) {\n        const { client, modules, ui } = this.root_store;\n        const { standpoint, createCFDAccount, enableCFDPasswordModal, has_maltainvest_account } = modules.cfd;\n\n        const { openAccountNeededModal } = ui;\n        const { is_eu } = client;\n\n        if (is_eu && !has_maltainvest_account && standpoint?.iom) {\n            openAccountNeededModal('maltainvest', localize('Deriv Multipliers'), localize('demo CFDs'));\n        } else if (platform !== CFD_PLATFORMS.CTRADER) {\n            enableCFDPasswordModal();\n        } else {\n            await createCFDAccount({ ...account_type, platform });\n        }\n    }\n\n    async openRealAccount(account_type, platform) {\n        const { client, modules } = this.root_store;\n        const { has_active_real_account } = client;\n        const { createCFDAccount, enableCFDPasswordModal, toggleJurisdictionModal } = modules.cfd;\n        if (has_active_real_account && platform === CFD_PLATFORMS.MT5) {\n            toggleJurisdictionModal();\n        } else if (platform === CFD_PLATFORMS.DXTRADE) {\n            enableCFDPasswordModal();\n        } else {\n            await createCFDAccount({ ...account_type, platform });\n        }\n    }\n\n    openModal(modal_id, props = {}) {\n        this.modal_data = {\n            active_modal: modal_id,\n            data: props,\n        };\n    }\n\n    closeModal() {\n        this.modal_data = {\n            active_modal: '',\n            data: {},\n        };\n    }\n\n    selectRealLoginid(loginid) {\n        const { accounts } = this.root_store.client;\n        if (Object.keys(accounts).includes(loginid)) {\n            this.selected_loginid = loginid;\n        }\n    }\n\n    getAccount() {\n        const { modules, common } = this.root_store;\n        const { account_type } = modules.cfd;\n        const { platform } = common;\n        if (this.is_demo) {\n            this.openDemoCFDAccount(account_type, platform);\n        } else {\n            this.openRealAccount(account_type, platform);\n        }\n    }\n\n    getServerName = account => {\n        if (account) {\n            const server_region = account.server_info?.geolocation?.region;\n            if (server_region) {\n                return `${server_region} ${\n                    account?.server_info?.geolocation?.sequence === 1 ? '' : account?.server_info?.geolocation?.sequence\n                }`;\n            }\n        }\n        return '';\n    };\n    hasMultipleSVGAccounts = () => {\n        const all_svg_acc = [];\n        this.combined_cfd_mt5_accounts.map(acc => {\n            if (acc.landing_company_short === 'svg' && acc.market_type === 'synthetic') {\n                if (all_svg_acc.length) {\n                    all_svg_acc.forEach(svg_acc => {\n                        if (svg_acc.server !== acc.server) all_svg_acc.push(acc);\n                        return all_svg_acc;\n                    });\n                } else {\n                    all_svg_acc.push(acc);\n                }\n            }\n        });\n        return all_svg_acc.length > 1;\n    };\n    getShortCodeAndRegion(account) {\n        let short_code_and_region;\n        if (this.is_real && !this.is_eu_user) {\n            const short_code =\n                account.landing_company_short &&\n                account.landing_company_short !== 'svg' &&\n                account.landing_company_short !== 'bvi'\n                    ? account.landing_company_short?.charAt(0).toUpperCase() + account.landing_company_short?.slice(1)\n                    : account.landing_company_short?.toUpperCase();\n\n            let region = '';\n            if (this.hasMultipleSVGAccounts()) {\n                region =\n                    account.market_type !== 'financial' && account.landing_company_short !== 'bvi'\n                        ? ` - ${this.getServerName(account)}`\n                        : '';\n            }\n            short_code_and_region = `${short_code}${region}`;\n        }\n        return short_code_and_region;\n    }\n    setCombinedCFDMT5Accounts() {\n        this.combined_cfd_mt5_accounts = [];\n        this.available_mt5_accounts?.forEach(account => {\n            const existing_accounts = this.getExistingAccounts(account.platform, account.market_type);\n            const has_existing_accounts = existing_accounts.length > 0;\n            if (has_existing_accounts) {\n                existing_accounts.forEach(existing_account => {\n                    this.combined_cfd_mt5_accounts = [\n                        ...this.combined_cfd_mt5_accounts,\n                        {\n                            ...existing_account,\n                            icon: account.icon,\n                            sub_title: account.name,\n                            name: `${formatMoney(existing_account.currency, existing_account.display_balance, true)} ${\n                                existing_account.currency\n                            }`,\n                            short_code_and_region: this.getShortCodeAndRegion(existing_account),\n                            platform: account.platform,\n                            description: existing_account.display_login,\n                            key: `trading_app_card_${existing_account.display_login}`,\n                            action_type: 'multi-action',\n                            availability: this.selected_region,\n                            market_type: account.market_type,\n                        },\n                    ];\n                });\n            } else {\n                this.combined_cfd_mt5_accounts = [\n                    ...this.combined_cfd_mt5_accounts,\n                    {\n                        icon: account.icon,\n                        name: account.name,\n                        platform: account.platform,\n                        description: account.description,\n                        key: `trading_app_card_${account.name}`,\n                        action_type: 'get',\n                        availability: this.selected_region,\n                        market_type: account.market_type,\n                    },\n                ];\n            }\n        });\n    }\n\n    closeAccountTransferModal() {\n        this.is_account_transfer_modal_open = false;\n    }\n\n    toggleAccountTransferModal() {\n        this.is_account_transfer_modal_open = !this.is_account_transfer_modal_open;\n    }\n\n    toggleFailedVerificationModalVisibility() {\n        this.is_failed_verification_modal_visible = !this.is_failed_verification_modal_visible;\n    }\n\n    setMT5ExistingAccount(existing_account) {\n        this.mt5_existing_account = existing_account;\n    }\n\n    openFailedVerificationModal(selected_account_type) {\n        const {\n            common,\n            modules: { cfd },\n        } = this.root_store;\n        const { setJurisdictionSelectedShortcode, setAccountType } = cfd;\n        const { setAppstorePlatform } = common;\n\n        if (selected_account_type?.platform === CFD_PLATFORMS.MT5) {\n            setAppstorePlatform(selected_account_type.platform);\n            setAccountType({\n                category: selected_account_type.category,\n                type: selected_account_type.type,\n            });\n            this.setMT5ExistingAccount(selected_account_type);\n            setJurisdictionSelectedShortcode(selected_account_type.jurisdiction);\n        } else {\n            setJurisdictionSelectedShortcode('');\n        }\n        this.open_failed_verification_for =\n            selected_account_type?.platform === CFD_PLATFORMS.MT5 ? selected_account_type?.jurisdiction : 'multipliers';\n        this.toggleFailedVerificationModalVisibility();\n    }\n\n    showTopUpModal(data) {\n        const { ui, modules } = this.root_store;\n        const { openTopUpModal } = ui;\n        const { setCurrentAccount } = modules.cfd;\n        setCurrentAccount(data, {\n            category: this.selected_account_type,\n            type: data.market_type,\n        });\n        openTopUpModal();\n    }\n\n    toggleWalletsUpgrade(value) {\n        this.is_real_wallets_upgrade_on = value;\n    }\n\n    setWalletsMigrationFailedPopup(value) {\n        this.is_wallet_migration_failed = value;\n    }\n}\n","import ClientStore from './client-store';\nimport CommonStore from './common-store';\nimport GTMStore from './gtm-store';\nimport ModulesStore from './Modules';\nimport NotificationStore from './notification-store';\nimport UIStore from './ui-store';\nimport ActiveSymbolsStore from './active-symbols-store';\nimport PortfolioStore from './portfolio-store';\nimport ContractReplayStore from './contract-replay-store';\nimport ContractTradeStore from './contract-trade-store';\nimport { ChartBarrierStore } from './chart-barrier-store';\nimport TradersHubStore from './traders-hub-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client = new ClientStore(this);\n        this.common = new CommonStore(this);\n        this.modules = new ModulesStore(this);\n        this.ui = new UIStore(this);\n        this.gtm = new GTMStore(this);\n        this.notifications = new NotificationStore(this);\n        this.active_symbols = new ActiveSymbolsStore(this);\n        this.portfolio = new PortfolioStore(this);\n        this.contract_replay = new ContractReplayStore(this);\n        this.contract_trade = new ContractTradeStore(this);\n        this.chart_barrier_store = new ChartBarrierStore(this);\n        this.traders_hub = new TradersHubStore(this);\n    }\n}\n","import { configure } from 'mobx';\nimport NetworkMonitor from 'Services/network-monitor';\nimport RootStore from 'Stores';\n\nconfigure({ enforceActions: 'observed' });\n\nconst setStorageEvents = root_store => {\n    window.addEventListener('storage', evt => {\n        switch (evt.key) {\n            case 'client.accounts': {\n                const active_loginid = root_store.client.loginid;\n                const new_currency = JSON.parse(evt.newValue)?.[active_loginid]?.currency;\n                const old_currency = JSON.parse(evt.oldValue)?.[active_loginid]?.currency;\n\n                if (document.hidden && new_currency && old_currency !== new_currency) {\n                    root_store.client.updateAccountCurrency(new_currency, false);\n                }\n                break;\n            }\n            case 'active_loginid':\n                if (localStorage.getItem('active_loginid') === 'null' || !localStorage.getItem('active_loginid')) {\n                    root_store.client.logout();\n                }\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n\nconst initStore = notification_messages => {\n    // Check Endpoint from URL need to be done before initializing store to avoid\n    // race condition with setting up user session from URL\n    const url_query_string = window.location.search;\n    const url_params = new URLSearchParams(url_query_string);\n    if (url_params.get('action') === 'signup') {\n        // If a user comes from the signup process,\n        // we need to give him a clean setup\n        const server_url = localStorage.getItem('config.server_url');\n        const app_id = localStorage.getItem('config.app_id');\n\n        localStorage.clear();\n\n        if (server_url) localStorage.setItem('config.server_url', server_url);\n        if (app_id) localStorage.setItem('config.app_id', app_id);\n    }\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    root_store.client.init();\n    root_store.common.init();\n    root_store.ui.init(notification_messages);\n\n    return root_store;\n};\n\nexport default initStore;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes, getUrlBase } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\n\nconst Page404 = () => (\n    <PageError\n        header={localize('We couldn’t find that page')}\n        messages={[\n            localize('You may have followed a broken link, or the page has moved to a new address.'),\n            localize('Error code: {{error_code}} page not found', { error_code: 404 }),\n        ]}\n        redirect_urls={[routes.trade]}\n        redirect_labels={[localize('Return to trade')]}\n        classNameImage='page-404__image'\n        image_url={getUrlBase('/public/images/common/404.png')}\n    />\n);\n\nexport default Page404;\n","import Page404 from './Components/Page404.jsx';\n\nexport default Page404;\n","import { removeCookies } from '@deriv/shared';\nimport SocketCache from '_common/base/socket_cache';\nimport WS from './ws-methods';\n\nexport const requestLogout = () => WS.logout().then(doLogout);\n\nfunction endChat() {\n    window.LC_API?.close_chat?.();\n}\n\nconst doLogout = response => {\n    if (response.logout !== 1) return undefined;\n    removeCookies('affiliate_token', 'affiliate_tracking', 'onfido_token');\n    SocketCache.clear();\n    sessionStorage.clear();\n    endChat();\n    return response;\n};\n","import moment from 'moment';\nimport { flow } from 'mobx';\nimport { State, getSocketURL, getActivePlatform, getPropertyValue, routes, getActionFromUrl } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ServerTime from '_common/base/server_time';\nimport BinarySocket from '_common/base/socket_base';\nimport WS from './ws-methods';\n\nlet client_store, common_store, gtm_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    let session_duration_limit, session_start_time, session_timeout;\n\n    let responseTimeoutErrorTimer = null;\n\n    const onDisconnect = () => {\n        clearTimeout(responseTimeoutErrorTimer);\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = is_ready => {\n        responseTimeoutErrorTimer = setTimeout(() => {\n            const expectedResponseTypes = WS?.get?.()?.expect_response_types || {};\n            const pendingResponseTypes = Object.keys(expectedResponseTypes).filter(\n                key => expectedResponseTypes[key].state === 'pending'\n            );\n\n            const error = new Error('deriv-api: no message received after 30s');\n            error.userId = client_store?.loginid;\n\n            window.TrackJS?.console?.error({\n                message: error.message,\n                clientsCountry: client_store?.clients_country,\n                websocketUrl: getSocketURL(),\n                pendingResponseTypes,\n            });\n        }, 30000);\n\n        if (is_ready) {\n            if (!client_store.is_valid_login) {\n                client_store.logout();\n                return;\n            }\n\n            if (client_store.is_logged_in || client_store.is_logging_in) {\n                WS.get()\n                    .expectResponse('authorize')\n                    .then(() => {\n                        WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n                    });\n            } else {\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n\n            ServerTime.init(() => common_store.setServerTime(ServerTime.get()));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = response => {\n        clearTimeout(responseTimeoutErrorTimer);\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    client_store.logout();\n                } else if (!/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (\n                        response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list &&\n                        !client_store.is_switching\n                    ) {\n                        client_store.logout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                setSessionDurationLimit(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    client_store.setAccountSettings(response.get_settings);\n                    gtm_store.eventHandler(response.get_settings);\n                }\n                break;\n            case 'set_account_currency':\n                WS.forgetAll('balance').then(subscribeBalances);\n                break;\n            case 'get_account_status':\n                client_store.setAccountStatus(response.get_account_status);\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response?.payout_currencies);\n                break;\n            case 'transaction':\n                gtm_store.pushTransactionData(response);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = residence => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence).then(client_store.responseLandingCompany);\n        }\n    };\n\n    const setSessionDurationLimit = user_limits => {\n        const duration = user_limits?.get_self_exclusion?.session_duration_limit;\n\n        session_start_time = new Date(sessionStorage.getItem('session_start_time') || ServerTime.get());\n        sessionStorage.setItem('session_start_time', session_start_time);\n\n        if (duration && duration !== session_duration_limit) {\n            const current_session_duration = session_duration_limit ? ServerTime.get() - moment(session_start_time) : 0;\n            const remaining_session_time = duration * 60 * 1000 - current_session_duration;\n            clearTimeout(session_timeout);\n            session_timeout = setTimeout(() => {\n                client_store.logout();\n                sessionStorage.removeItem('session_start_time');\n            }, remaining_session_time);\n        } else if (!duration) {\n            clearTimeout(session_timeout);\n        }\n\n        session_duration_limit = duration;\n    };\n\n    const setBalanceActiveAccount = flow(function* (obj_balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalanceActiveAccount(obj_balance);\n    });\n\n    const setBalanceOtherAccounts = obj_balance => {\n        client_store.setBalanceOtherAccounts(obj_balance);\n    };\n\n    const handleError = response => {\n        const msg_type = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n                // TODO: Remove condition checks below for WrongResponse once mt5 is more reliable\n                if (msg_type === 'mt5_login_list') {\n                    WS.authorized.mt5LoginList().then(mt5_list_response => {\n                        if (!mt5_list_response.error) {\n                            client_store.responseMt5LoginList(mt5_list_response);\n                            WS.balanceAll().then(balance_response => {\n                                if (!balance_response.error)\n                                    client_store.setBalanceOtherAccounts(balance_response.balance);\n                            });\n                        } else {\n                            client_store.resetMt5ListPopulatedState();\n                        }\n                    });\n                } else if (msg_type === 'balance') {\n                    WS.forgetAll('balance').then(subscribeBalances);\n                } else if (msg_type === 'get_account_status') {\n                    WS.authorized.getAccountStatus().then(account_status_response => {\n                        if (!account_status_response.error) {\n                            client_store.setAccountStatus(account_status_response.get_account_status);\n                        }\n                    });\n                } else if (msg_type === 'landing_company') {\n                    if (client_store.residence) {\n                        WS.authorized.landingCompany(client_store.residence).then(landing_company_response => {\n                            if (!landing_company_response.error) {\n                                client_store.responseLandingCompany(landing_company_response);\n                            }\n                        });\n                    }\n                }\n                break;\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, {\n                        message: localize('You have reached the rate limit of requests per second. Please try later.'),\n                    });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'InvalidToken':\n                if (\n                    [\n                        'cashier',\n                        'paymentagent_withdraw',\n                        'reset_password',\n                        'trading_platform_password_reset',\n                        'trading_platform_investor_password_reset',\n                        'new_account_virtual',\n                        'portfolio',\n                        'proposal_open_contract',\n                        'change_email',\n                    ].includes(msg_type)\n                ) {\n                    return;\n                }\n                // eslint-disable-next-line no-case-declarations\n                const active_platform = getActivePlatform(common_store.app_routing_history);\n\n                // DBot handles this internally. Special case: 'client.invalid_token'\n                if (active_platform === 'DBot') return;\n\n                client_store.logout().then(() => {\n                    let redirect_to = routes.trade;\n                    const action = getActionFromUrl();\n                    if (action === 'system_email_change') {\n                        return;\n                    }\n                    if (active_platform === 'Deriv MT5') {\n                        redirect_to = routes.mt5;\n                    }\n                    common_store.routeTo(redirect_to);\n                });\n                break;\n            case 'AuthorizationRequired':\n                // if msg_type is coming from 'buy', behaviour should be handled in app itself.\n                if (msg_type === 'buy') {\n                    return;\n                }\n                client_store.logout();\n                break;\n            // no default\n        }\n    };\n\n    const init = store => {\n        client_store = store.client;\n        common_store = store.common;\n        gtm_store = store.gtm;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const subscribeBalances = () => {\n        WS.subscribeBalanceAll(ResponseHandlers.balanceOtherAccounts);\n        WS.subscribeBalanceActiveAccount(ResponseHandlers.balanceActiveAccount, client_store.loginid);\n    };\n\n    const authorizeAccount = response => {\n        client_store.responseAuthorize(response);\n        subscribeBalances();\n        WS.storage.getSettings();\n        WS.getAccountStatus();\n        WS.storage.payoutCurrencies();\n        client_store.setIsAuthorize(true);\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalanceActiveAccount,\n        setBalanceOtherAccounts,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    const websiteStatus = response => {\n        if (response.website_status) {\n            const is_available = !BinarySocket.isSiteDown(response.website_status.site_status);\n            if (is_available && BinarySocket.getAvailability().is_down) {\n                window.location.reload();\n                return;\n            }\n            const is_updating = BinarySocket.isSiteUpdating(response.website_status.site_status);\n            if (is_updating && !BinarySocket.getAvailability().is_updating) {\n                // the existing connection is alive for one minute while status is updating\n                // switch to the new connection somewhere between 1-30 seconds from now\n                // to avoid everyone switching to the new connection at the same time\n                const rand_timeout = Math.floor(Math.random() * 30) + 1;\n                window.setTimeout(() => {\n                    BinarySocket.closeAndOpenNewConnection();\n                }, rand_timeout * 1000);\n            }\n            BinarySocket.setAvailability(response.website_status.site_status);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balanceActiveAccount = response => {\n        if (!response.error) {\n            BinarySocketGeneral.setBalanceActiveAccount(response.balance);\n        }\n    };\n\n    const balanceOtherAccounts = response => {\n        if (!response.error) {\n            BinarySocketGeneral.setBalanceOtherAccounts(response.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balanceActiveAccount,\n        balanceOtherAccounts,\n    };\n})();\n","import BinarySocket from '_common/base/socket_base';\n\nconst WS = BinarySocket;\n\nexport default WS;\n","import { isEmptyObject, State } from '@deriv/shared';\n\nexport const hasMissingRequiredField = (account_settings, client, isAccountOfType) => {\n    if (!account_settings || isEmptyObject(account_settings)) return false;\n\n    const { is_svg, landing_company_shortcode } = client;\n\n    // TODO: [deriv-eu] refactor into its own function once more exceptions are added.\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    return required_fields.some(field => !account_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields =\n            State.getResponse('landing_company.financial_company.requirements.withdrawal') || [];\n        const necessary_signup_fields = State.getResponse('landing_company.financial_company.requirements.signup');\n\n        const necessary_signup_fields_mapped = necessary_signup_fields\n            ? necessary_signup_fields.map(field => (field === 'residence' ? 'country' : field))\n            : [];\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields_mapped];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n\n        const { residence } = client;\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence',\n        ];\n\n        const address_postcode_is_required = residence === 'gb' || landing_company_shortcode === 'iom';\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nexport const getStatusValidations = status_arr => {\n    return status_arr.reduce((validations, stats) => {\n        validations[stats] = true;\n        return validations;\n    }, {});\n};\n\nexport const getCashierValidations = cashier_arr => {\n    return cashier_arr.reduce((validations, code) => {\n        validations[code] = true;\n        return validations;\n    }, {});\n};\n\n// Notifications keys will not be added to localStorage and will appear again after user logout/login\nexport const excluded_notifications = ['contract_sold', 'has_changed_two_fa'];\n\nexport const maintenance_notifications = ['system_maintenance', 'site_maintenance'];\n\nexport const priority_toast_messages = [\n    'svg',\n    'need_fa',\n    'p2p_daily_limit_increase',\n    'authenticate',\n    'poinc_upload_limited',\n    'wallets_migrated',\n    'wallets_failed',\n    'needs_poinc',\n    'notify_financial_assessment',\n    'additional_kyc_info',\n    'poa_expired',\n    'svg_needs_poi_poa',\n    'svg_needs_poa',\n    'svg_needs_poi',\n    'poi_failed',\n    'poa_failed',\n    'svg_poi_expired',\n    'mt5_notification',\n    ...maintenance_notifications,\n];\n"],"names":["ErrorComponent","header","message","redirect_label","redirectOnClick","should_clear_error_on_click","setError","redirect_to","routes","should_show_refresh","should_redirect","history","useHistory","React","listen","refresh_message","localize","PageErrorContainer","error_header","error_messages","redirect_urls","redirect_labels","buttonOnClick","location","reload","propTypes","PropTypes","has_cookie_account","active_loginid","useState","isReady","setIsReady","setReload","isMounted","useIsMounted","widget","window","LiveChatWidget","onHistoryChange","useCallback","Promise","resolve","on","get","status","call","e","then","__lc","license","livechat_license_id","n","t","c","i","_h","apply","_q","push","_v","arguments","once","off","Error","init","createElement","async","type","src","head","appendChild","asyncInit","document","slice","liveChatSetup","is_logged_in","client_first_name","client_last_name","domain","test","hostname","deriv_urls","client_information","Cookies","utm_source","utm_medium","utm_campaign","loginid","email","landing_company_shortcode","currency","residence","first_name","last_name","session_variables","LC_API","on_chat_ended","useEffect","notification_order","notification_order_mobile","default_delay","max_display_notifications","max_display_notifications_mobile","icon_types","danger","info","success","warning","contract_sold","announce","types","sortNotifications","promotions","news","a","b","sortNotificationsMobile","is_disabled","is_mobile","disabled_message","children","Popover","alignment","isBot","zIndex","CurrencyDisplay","country_standpoint","is_virtual","user_is_from_this_country_list","Object","values","includes","account_type","replace","Localize","i18n_default_text","is_united_kingdom","is_isle_of_man","getCurrencyName","AccountDisplay","has_error","market_type","sub_account_type","platform","server","is_dark_mode_on","is_eu","shortcode","should_show_server_name","account_title","getCFDAccountDisplay","getServerName","account","server_region","server_info","geolocation","region","sequence","Text","color","size","className","is_pathname_bot","classNames","balance","currency_icon","display_type","has_balance","has_reset_balance","redirectAccount","onClickResetVirtualBalance","selected_loginid","currency_badge","id","onClick","Icon","icon","Button","stopPropagation","secondary","small","styles","fontWeight","Money","getCurrencyDisplayCode","amount","formatMoney","should_format","show_currency","AccountWrapper","is_visible","toggleVisibility","ContentExpander","title","is_expanded","onToggle","is_title_spaced","getSortedAccountList","account_list","accounts","sort","a_currency","b_currency","a_is_crypto","isCryptocurrency","b_is_crypto","a_is_fiat","b_is_fiat","getSortedCFDList","a_is_demo","isDemo","b_is_demo","AccountSwitcher","observer","useStore","client","ui","traders_hub","available_crypto_currencies","account_loginid","client_residence","is_landing_company_loaded","is_low_risk","is_high_risk","has_fiat","mt5_login_list","obj_total_balance","switchAccount","resetVirtualBalance","has_active_real_account","logoutClient","logout","upgradeable_landing_companies","real_account_creation_unlock_date","has_any_real_account","virtual_account_loginid","show_eu_related_content","content_flag","selectRegion","setTogglePlatformType","is_positions_drawer_on","openRealAccountSignup","toggleAccountsDialog","togglePositionsDrawer","toggleSetCurrencyModal","should_show_real_accounts_list","setShouldShowCooldownModal","active_tab_index","setActiveTabIndex","is_deriv_demo_visible","setDerivDemoVisible","is_deriv_real_visible","setDerivRealVisible","is_non_eu_regulator_visible","setNonEuRegulatorVisible","is_eu_regulator_visible","setEuRegulatorVisible","wrapper_ref","scroll_ref","account_total_balance_currency","vrtc_loginid","find","vrtc_currency","section","handleLogout","closeAccountsDialog","href","getStaticUrl","useOnClickOutside","event","target","classList","contains","doSwitch","Analytics","substring","resetBalance","isRealAccountTab","isDemoAccountTab","is_regulated_able_to_change_currency","length","getRemainingRealAccounts","hasSetCurrency","useHasSetCurrency","canResetBalance","checkMultipleSvgAcc","all_svg_acc","ContentFlag","filter","landing_company_short","map","acc","forEach","svg_acc","have_more_accounts","startsWith","has_cr_account","demo_account","key","undefined","real_accounts","ref","index","getAccountTitle","account_residence","first_real_login_id","TradersHubRedirect","TradersHubLink","handleRedirect","align","Tabs","active_index","onTabItemClick","top","label","DesktopWrapper","ThemedScrollbars","height","MobileWrapper","Div100vhContainer","max_autoheight_offset","line_height","weight","amount_real","Loading","is_fullscreen","withRouter","AccountSwitcherMobile","props","disableApp","enableApp","is_upgrade_enabled","toggle","Modal","is_open","is_vertical_top","has_close_icon","toggleModal","width","onClose","visible","wrapperClassName","data_testid","is_belgium","AccountInfo","acc_switcher_disabled_message","is_dialog_on","toggleDialog","currency_lower","toLowerCase","CSSTransition","in","timeout","enter","enterDone","exit","unmountOnExit","findRouteByPath","path","routes_config","result","some","route_info","match_path","matchPath","BinaryLink","active_class","to","platform_context","PlatformContext","common","error","is_appstore","normalizePath","route","getRoutesConfig","NavLink","activeClassName","exact","icon_classname","is_clickable","lang","changeSelectedLanguage","is_active","current_language","link","getAllowedLanguages","checkAppId","Route","render","pathname","removeBranchName","is_valid_route","cashier_subroutes","p2p_subroutes","validateRoute","component","Redirect","is_authenticated","is_logging_in","localStorage","getItem","removeItem","redirectToLogin","getLanguage","default_subroute","r","has_default_subroute","isEmptyObject","passthrough","Page404","getTitle","default_title","alternateLinkTagChange","canonicalLinkTagChange","gtm","promptFn","prompt_when","pushDataLayer","useLocation","is_eu_country","fallback","Prompt","when","Switch","idx","setNewEmail","setVerificationCode","verification_code","setResetTradingPasswordModalOpen","toggleAccountSignupModal","toggleResetPasswordModal","toggleResetEmailModal","toggleUpdateEmailModal","url_query_string","search","url_params","URLSearchParams","redirected_to_route","action_param","code_param","ext_platform_url","is_next_wallet","getObject","data","next_wallet","redirectToExternalPlatform","url","action","form_name","SessionStore","reset_code_key","sessionStorage","setItem","hash","payment_withdraw","WS","new_href","loginUrl","language","is_demo","FeatureFlagsSection","feature_flags","HIDDEN_FEATURE_FLAGS","visible_feature_flags","entries","reduce","flags","value","website_domain","TRADE_FEATURE_FLAGS","style","marginTop","as","keys","flag","Checkbox","onChange","update","old","checked","InputField","Field","name","field","form","errors","touched","Input","autoComplete","maxLength","platform_store","Formik","initialValues","app_id","getAppId","getSocketURL","is_appstore_enabled","is_debug_service_worker_enabled","getDebugServiceWorker","validate","onSubmit","DERIV_APPSTORE_KEY","setIsAppStore","isSubmitting","handleChange","setFieldTouched","Form","minWidth","margin","isMobile","marginBottom","hint","rel","text","primary","marginLeft","routesConfig","Trader","moduleLoader","Reports","CFD","Account","Cashier","Bot","AppStore","Wallets","TradersHub","P2P","P2P_V2","lazyLoadComplaintsPolicy","makeLazyLoader","initRoutesConfig","RouterRedirect","Endpoint","icon_component","default","CFDCompareAccounts","subroutes","is_modal","is_invisible","route_default","EXPERIAN","SUCCESS","WARN","DANGER","PENDING","is_rest_of_eu","getExperianResult","is_fully_authenticated","is_age_verified","is_isle_of_man_residence","is_belgium_residence","CloseButton","NotificationStatusIcons","class_suffix","NotificationBanner","primary_btn","secondary_btn","img_src","img_alt","alt","cta_btn","blue","NotificationOrder","setTimeout","renderText","is_auto_close","Notification","removeNotificationMessage","linear_progress_container_ref","destroy","is_closed_by_user","closeOnClick","delay","header_popup","message_popup","LinearProgress","timeoutMessage","should_store_in_session","session_id","current","removeTimeoutSession","should_hide_close_btn","isRequired","TradeNotifications","show_trade_notifications","notifications","removeTradeNotifications","trade_notifications","notification","buy_price","contract_id","contract_type","profit","symbol","timestamp","SwipeableNotification","is_failure","is_success","onUnmount","getContractPath","visibility_duration_ms","components","trade_type_name","shouldUnescape","getCardLabels","STAKE","TOTAL_PROFIT_LOSS","has_sign","Portal","ReactDOM","getElementById","NotificationsContent","is_notification_loaded","TransitionGroup","appear","AppNotificationMessages","is_mt5","stopNotificationLoading","marked_notifications","notification_messages","markNotificationMessage","should_show_popups","setStyle","notifications_ref","setNotificationsRef","parentElement","bounds","getBoundingClientRect","notifications_msg","is_not_marked_notification","is_non_hidden_notification","maintenance_notifications","is_only_for_p2p_notification","is_maintenance_notifications","notifications_limit","filtered_excluded_notifications","priority_toast_messages","excluded_notifications","notifications_sublist","CFD_TEXT","dxtrade","mt5","mt5_cfds","ctrader","cfd","synthetic","synthetic_demo","synthetic_bvi","synthetic_svg","synthetic_v","financial","financial_demo","financial_bvi","financial_fx","financial_v","financial_svg","all","all_demo","all_svg","FORM_ERROR_MESSAGES","empty_address","address","permitted_characters","address_permitted_special_characters_message","interpolation","escapeValue","barrier","general","password","po_box","phone","postcode","signup_token","tax_id","number","decimalPlaces","decimals","decimal_count","betweenMinMax","min_value","max_value","minNumber","maxNumber","password_warnings","use_a_few_words","no_need_for_mixed_chars","uncommon_words_are_better","straight_rows_of_keys_are_easy","short_keyboard_patterns_are_easy","use_longer_keyboard_patterns","repeated_chars_are_easy","repeated_patterns_are_easy","avoid_repeated_chars","sequences_are_easy","avoid_sequences","recent_years_are_easy","avoid_recent_years","avoid_associated_years","dates_are_easy","avoid_associated_dates_and_years","top10_common_password","top100_common_password","very_common_password","similar_to_common_password","a_word_is_easy","names_are_easy","common_names_are_easy","capitalization_doesnt_help","all_uppercase_doesnt_help","reverse_doesnt_help","substitution_doesnt_help","user_dictionary","base_link","getUrlBinaryBot","display","visibility","sandbox","getPlatformFromUrl","is_staging_deriv_app","ErrorBoundary","componentDidCatch","TrackJS","console","log","root_store","setState","hasError","state","CookieBanner","onAccept","onDecline","is_dark_mode","StaticUrl","is_eu_url","prototype","tracking_status_cookie","CookieStorage","TRACKING_STATUS_KEY","AppContents","show_cookie_banner","setShowCookieBanner","is_gtm_tracking","setIsGtmTracking","user_id","is_app_disabled","is_cashier_visible","is_cfd_page","is_route_modal_on","notifyAppInstall","setAppContentsScrollRef","tracking_status","child_ref","current_page","tracking","identifyEvent","scrollTop","handleInstallPrompt","preventDefault","addEventListener","removeEventListener","platforms","maxHeight","refSetter","has_horizontal","set","sameSite","secure","NetworkStatus","network_status","network_status_element","classNameBubble","tooltip","GoToDeriv","EndpointNote","server_url","fontSize","ToggleFullScreen","is_full_screen","setIsFullScreen","fullscreen_map","element","fnc_enter","fnc_exit","onFullScreen","el","full_screen_icon_class","to_exit","documentElement","fncToCall","fnc","ModalContent","settings_extension","content","VerticalTab","list","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","toggleLanguageSettingsModal","isCurrentLanguage","ToggleLanguageSettings","is_language_settings_modal_on","is_language_changing","should_header_stick_body","HelpCentre","ResponsibleTrading","AccountLimits","Link","xmlns","fill","d","MLTRegulatoryInformation","is_document","legal_entity_name","getLegalEntityName","MXRegulatoryInformation","MFRegulatoryInformation","RegulatoryInformation","landing_company","should_show_modal","showModal","is_mx","is_mlt","is_mf","liveChat","useLiveChat","liveChatClickHandler","onKeyDown","whatsapp_url","ServerTime","server_time","gmt_time","toGMTFormat","local_time","toLocalFormat","FooterIconSeparator","FooterExtensionRenderer","footer_extension","FooterExtensionComponent","Component","position","has_left_separator","has_right_separator","Footer","footer_extensions","is_settings_modal_on","toggleSettingsModal","footer_extensions_left","footer_extensions_right","TradingHubFooter","setDarkMode","changeTheme","clearNotifications","is_notifications_empty","disabled","notifications_array","toggleNotificationsModal","getNotificationItemIcon","item","toTitleCase","getButtonSettings","obj_key","NotificationListWrapperForwardRef","wallets_path","lineHeight","is_bypassed","displayName","is_notifications_visible","removeNotifications","removeNotificationMessageByKey","p2p_settings","LocalStore","should_show_again","notifications_toggle_btn","MobileDialog","portal_element_id","wrapper_classname","count","tooltip_message","should_disable_pointer_events","notifications_toggler_el","Counter","PlatformBox","description","PlatformDropdownContent","app_routing_history","link_to","isActive","getActivePlatform","PlatformDropdown","closeDrawer","platform_config","closest","isDesktop","platform_dropdown","height_offset","PlatformSwitcherLoader","speed","element_spacing","logo_size","name_x","name_y","container_width","container_margin","backgroundColor","foregroundColor","x","y","rx","ry","PlatformSwitcher","toggleDrawer","setIsOpen","is_close_drawer_fired_ref","getPlatformInformation","mountOnEnter","MenuItems","handleClickCashier","ReportTab","CashierTab","toggleReadyToDepositModal","toggleNeedRealAccountForCashierModal","p2p_notification_count","useP2PNotificationCount","real_account_needed_for_cashier","useIsRealAccountNeededForCashier","toggle_modal_routes","cashier_redirect","MenuLinks","is_traders_hub_routes","i18n","useTranslation","is_next_wallet_enabled","useFeatureFlags","LoginButton","has_effect","tertiary","SignupButton","redirectToSignUp","AccountActions","is_acc_switcher_on","is_acc_switcher_disabled","notifications_count","onClickDeposit","toggleNotifications","Badge","background_color","custom_color","toUpperCase","AccountSwitcherWalletItem","show_badge","dtrade_loginid","dtrade_balance","gradients","icons","landing_company_name","linked_to","icon_type","theme","app_icon","is_selected","onAccountSwitch","role","AppLinkedWithWalletIcon","gradient_class","card","wallet_icon","hide_watermark","Boolean","AccountSwitcherWalletList","wallets","is_malta_wallet","AccountSwitcherWallet","wallet_list","useStoreWalletAccountsList","dtrade_account_wallets","wallet","handleTradersHubRedirect","AccountSwitcherWalletMobile","footer","has_full_height","large","AccountsInfoLoader","LoggedInPreloader","LoggedOutPreloader","cx","cy","DropdownArrow","BalanceLabel","display_code","MobileInfoIcon","wallet_account","DesktopInfoIcons","WalletIcon","has_bg","account_switcher_disabled_message","linked_wallets_accounts","useStoreLinkedWalletsAccounts","active_account","active_wallet","linked_dtrade_trading_account_loginid","dtrade","linked_wallet","AccountActionsWallets","is_accounts_switcher_on","notificationsArray","onUpdate","removeUpdateListener","addUpdateListener","onConfirm","validateOnMount","handleSubmit","AutoHeightWrapper","default_height","setRef","autoHide","innerHeight","has_separator","FormSubmitButton","is_absolute","has_cancel","cancel_label","onCancel","STEP_IDENTIFIERS","StepperHeader","has_target","has_real_account","items","getCurrentStep","getTotalSteps","sub_section_index","step","step_title","FormProgress","steps","current_step","AccountWizard","modifiedProps","account_settings","account_status","fetchAccountSettings","fetchResidenceList","fetchStatesList","financial_assessment","has_currency","has_residence","realAccountSignup","residence_list","states_list","upgrade_info","refreshNotifications","closeRealAccountSignup","real_account_signup_target","setIsRealAccountSignupModalVisible","setIsTradingAssessmentForNewUserEnabled","setShouldShowAppropriatenessWarningModal","setShouldShowRiskWarningModal","setSubSectionIndex","finished","mounted","setMounted","form_error","setFormError","previous_data","setPreviousData","state_items","setStateItems","should_accept_financial_risk","setShouldAcceptFinancialRisk","is_high_risk_client_for_mt5","useIsClientHighRiskForMT5","trackEvent","payload","step_num","form_source","referrer","setLoading","getData","get_items_props","previous_state","getItems","fetchFromStorage","form_value","getCountryCode","country_code","stored_items","JSON","parse","residences","response","phone_idd","form_values","obj","original_form_values","fromEntries","Map","trim","date_of_birth","toMoment","format","place_of_birth","getLocation","citizen","tax_residence","clearError","prevStep","goToPreviousStep","step_codename","submitForm","clone","tax_identification_confirm","agreed_tnc","agreed_tos","confirmation_checkbox","tax_identification_number","risk_tolerance","accumulator","val","setRealAccountFormData","updateValue","setSubmitting","goToNextStep","should_override","saveFormData","createRealAccount","cloned_items","assign","getCurrent","step_index","form_data","document_type","user_choice","stringify","echo_req","setIsRiskWarningVisible","onOpenDepositModal","onOpenWelcomeModal","new_account_samoa","onFinishSuccess","new_account_real","idv_submit_data","identity_verification_document_add","formatIDVFormValues","real_signup_error_message","code","onError","is_loading","accept_risk","employment_status","wizard_steps","properties","bypass_to_personal","getPropsForChild","BodyComponent","body","onSave","navHeader","Wizard","nav","FinishedModalItem","onLoading","Headers","heading","FIAT_CURRENCY_TYPE","CRYPTO_CURRENCY_TYPE","AddCryptoCurrency","is_add_fiat","onClickBack","should_show_fiat_only","hasNoAvailableCrypto","legal_allowed_currencies","should_show_cancel","getReorderedFiatCurrencies","reorderCurrencies","getReorderedCryptoCurrencies","should_show_crypto_only","canAddCrypto","canAddFiat","messages","CurrencyRadioButton","deriv","website_name","string","func","bool","all_payment_agent_list","has_payment_agent","agent","currencies","modules","cashier","setShouldShowAllAvailableCurrencies","deposit_target","crypto","fiat","usePaymentAgentList","getReorderedCurrencies","allowed_currencies_payment_agent_availability","AddFiat","second_line_label","AddCrypto","is_add_crypto","client_currency","current_fiat_currency","current_currency_type","fiat_message","open_chat_window","non_fiat_mesage","fiat_currency","can_change_fiat_currency","ChangeAccountCurrency","closeModal","AddOrManageAccounts","is_add_currency","onSuccessSetAccountCurrency","setCurrency","setAccountCurrency","createCryptoAccount","manage_real_account_tab_index","setShouldShowCancel","resetRealAccountSignupTarget","setIsDeposit","general_store","initial_active_index","setActiveIndex","fetchMt5LoginList","setCurrencyOrAddCryptoAccount","currency_object","CURRENCY_TYPE","previous_currency","set_account_currency","fiat_section","is_mf_active","autohide","header_fit_content","continueRouteAfterChooseCrypto","should_show_all_available_currencies","isLoading","hasAllCryptos","addNewCryptoAccount","reorderCryptoCurrencies","show_add_button","target_account","ChooseCurrency","FinishedAddCurrency","redirectToLegacyPlatform","deposit_real_account_signup_target","IconNextCurrency","IconWon","SuccessMessage","prev","FinishedSetCurrency","IconPrevCurrency","IconArrow","noCryptoAvailable","error_message","Heading","Message","details","error_details","address_line_1","getSignupFormFields","TryAgain","ErrorCTA","SignupErrorContent","error_field","is_invalid_field_error","IOMHeading","DialogHeading","DialogMessage","Array","isArray","DialogPrimaryButton","closeModalAndOpenCashier","closeModalAndOpenPOI","closeModalAndOpenPOA","getActionButton","DialogDismissButton","switchToVirtual","getDismissButton","DialogButtons","MainIcon","Checkmark","Warning","Danger","CloseIcon","StatusDialogContainer","icon_size","getStatus","defaultProps","choose_crypto_currency","add_currency","finished_add_currency","restricted_country_signup_error","invalid_input_error","active_modal_index_no","deposit_cash_signup","state_index","is_trading_experience_incomplete","is_from_restricted_country","is_real_acc_signup_on","setIsClosingCreateRealAccountModal","setParams","setRealAccountSignupParams","should_show_appropriateness_warning_modal","should_show_risk_warning_modal","setShouldShowOneTimeDepositModal","state_value","is_trading_assessment_for_new_user_enabled","toggleIsTourOpen","current_action","setCurrentAction","is_risk_warning_visible","real_account_form_data","risk_warning_title","local_props","closeModalthenOpenDepositModal","closeModalthenOpenWelcomeModal","showErrorModal","WizardHeading","closeSetCurrencySuccessModal","modal_content","setAssessmentDecline","getModalHeight","curr","showSetCurrencySuccess","current_currency","setIsLoading","cacheFormValues","setRiskWarningTitle","active_modal_index","modal_pages_indices","onErrorConfirm","getActiveModalIndex","set_currency","signup_error","account_wizard","add_or_manage_account","authorized","getAccountStatus","get_account_status","showStatusDialog","assessment_decline","handleRiskAcceptance","handleOnDecline","handleOnAccept","finished_set_currency","getModalWidth","is_set_currency_modal_visible","has_set_currency","is_hidden","onClickLink","suffix_icon","setMobileLanguageMenuOpen","is_trade_text","deriv_static_url","traders_hub_path","is_languages_link_on_mobile","is_external_link","isExternalLink","is_cashier_link","is_mobile_language_menu_open","expandSubMenu","MobileDrawer","has_subheader","submenu_title","submenu_toggle_class","ToggleMenuDrawer","toggleTheme","should_allow_authentication","should_allow_poinc_authentication","active_account_landing_company","is_pending_proof_of_ownership","is_payment_agent_visible","payment_agent","is_account_transfer_visible","useAccountTransferVisible","is_onramp_visible","useOnrampVisible","is_payment_agent_transfer_visible","usePaymentAgentTransferVisible","is_p2p_enabled","useIsP2PEnabled","transitionExit","setTransitionExit","primary_routes_config","setPrimaryRoutesConfig","is_submenu_expanded","primary_routes","is_trading_hub_category","getFilteredRoutesConfig","processRoutes","clearTimeout","has_border_bottom","all_routes_config","routes_to_filter","subroutes_config","flatMap","getRoutesWithSubMenu","route_config","has_subroutes","submenu_icon","submenu_suffix_icon","route_config_path","section_icon","section_title","subroute","subindex","route_path","icon_class","ToggleSwitch","handleToggle","is_enabled","getPlatformSettings","is_account_switcher_disabled","is_bot_allowed","is_dxtrade_allowed","is_mt5_allowed","is_switching","addNotificationMessage","client_notifications","header_extension","is_desktop","is_trading_assessment_for_existing_user_enabled","removeUpdateNotification","filterPlatformsForClients","config","getDecimalPlaces","new_version_available","is_next_tradershub_enabled","viewBox","clipPath","capitalizeFirstLetter","current_loginid","selected_region","openFailedVerificationModal","authentication","mf_account_status","useMFAccountStatus","getStatusBadgeConfig","poi_status","identity","poa_status","badge_text","badge_icon","StatusBadge","notifications_store","setIsOnboardingVisited","setIsFirstTimeVisit","setWalletsOnboarding","useLocalStorage","onClickHandler","DefaultMobileLinks","modal_data","cashier_routes","account_balance","active_modal","Divider","MenuLeft","MenuRight","is_crypto","DTraderHeaderWallets","setAccounts","is_wallets_cashier_route","traders_hub_routes","client_accounts","useReadLocalStorage","has_wallet","should_show_wallets","accounts_keys","active_loginig_from_local_storage","is_eu_user","is_deriv_account_needed_modal_visible","openDerivRealAccountNeededModal","Dialog","confirm_button_text","cancel_button_text","is_closed_on_cancel","is_closed_on_confirm","is_account_needed_modal_on","account_needed_modal_props","target_label","target_dmt5_label","closeAccountNeededModal","dmt5_label","deriv_label","deriv_account","dmt5_account","portal_id","dialog_status","setDialogStatus","external_link","setExternalLink","onCancelDialog","onClickExternalLink","link_element","tagName","destination","URL","host","RegExp","getCurrentProductionDomain","isThirdPartyLink","open","dismissable","should_show_assessment_complete_modal","setShouldShowAssessmentCompleteModal","should_show_account_success_modal","setShouldTriggerTourGuide","toggleAccountSuccessModal","setIsVerificationModalVisible","setIsFromSuccessDepositModal","has_mf_account_deposited","useHasMFAccountDeposited","onEscapeButtonCancel","should_show_cooldown_modal","unblock_date","formatDate","unblock_time","formatTime","real_account_unblock_date","setMT5NotificationModal","mt5_community_url","is_mt5_notification_modal_visible","UILoader","is_need_real_account_for_cashier_modal_visible","regulation","active_real_regulation","is_ready_to_deposit_modal_visible","should_show_risk_accept_modal","setShouldShowWarningModal","handleAcceptAppropriatenessTestWarning","trading_assessment","cfd_score","setShouldShowTradingAssessmentModal","should_show_trading_assessment_modal","setShouldShowTradeAssessmentForm","setFinancialAndTradingAssessment","updateAccountStatus","should_show_trade_assessment_form","setIsTradingAssessmentForExistingUserEnabled","setFormValue","assessment_questions","setAssessmentQuestions","should_move_to_next","setShouldMoveToNext","tradingAssessmentConfig","form_payload","trading_experience_regulated","set_financial_assessment","trading_score","handleCancel","show_risk_modal","button_text","handleAcceptRisk","prev_state","body_content","has_icon","has_sub_header","class_name","setStep","is_mounted","authentication_status","poi_config","ProofOfIdentityContainer","poa_config","ProofOfAddressContainer","should_show_poi","identity_status","should_show_poa","document_status","verification_configs","setItems","unmount","onFinish","nextStep","onStateChange","modal_title","is_verification_modal_visible","setIsVerificationSubmitted","exit_classname","AccountSignupModal","ResetOrUnlinkPasswordModal","UnlinkPasswordModal","RedirectToLoginModal","SetResidenceModal","ResetEmailModal","UpdateEmailModal","WarningScamMessageModal","WarningCloseCreateRealAccountModal","VerificationDocumentSubmitted","OneTimeDepositModal","AdditionalKycInfoModal","InformationSubmittedModal","fetchFinancialAssessment","setCFDScore","is_closing_create_real_account_modal","is_set_residence_modal_visible","is_warning_scam_message_modal_visible","is_additional_kyc_info_modal_open","is_kyc_information_submitted_modal_open","is_verification_submitted","should_show_one_time_deposit_modal","temp_session_signup_params","url_action_param","ComponentToLoad","RedirectNotice","is_appstore_storage","Loadable","loader","loading","loaded","Routes","setAppRouterHistory","addRouteHistoryItem","setInitialRouteHistoryItem","initial_route","unlisten_to_change","route_to","has_lang","replaceState","urlForLanguage","toasts","removeToast","top_toasts","is_bottom","bottom_toasts","createToast","toast_config","Toast","toast_messages","EndpointSection","formik","useFormik","toString","getFieldProps","classNameLabel","isValid","dirty","flag_name","is_devtool_open","setIsDevtoolOpen","store","is_translation_loaded","initCashierStore","attachModule","initCFDStore","loadSmartchartsStyles","RUDDERSTACK_KEY","initialise","initHotjar","setWebsocket","reset","has_base","platform_passthrough","AppWithoutTranslation","App","withTranslation","common_store","updateStore","is_online","setNetworkStatus","NetworkMonitorBase","BinarySocketGeneral","types_map_config","getClientAccountType","TypesMapConfig","gaming","virtual","getAvailableAccount","setDeviceDataCookie","cookie_name","cookie_value","cookie_object","getCookieObject","BaseStore","options","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","partial_fetch_time","makeObservable","this","observable","retrieveFromStorage","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","assertHasValidCache","local_storage_properties","session_storage_properties","store_name","defineProperty","enumerable","writable","setupReactionForLocalStorage","setupReactionForSessionStorage","snapshot","toJS","p","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","getSnapshot","local_storage_snapshot","session_storage_snapshot","k","propertyName","concat","rules","property","intercept","change","newValue","trigger","inputs","hasOwnProperty","validator","Validator","isPassed","listener","switch_broadcast","switchEndSignal","isProduction","pre_switch_broadcast","setPreSwitchAccount","has_logged_out","setLogout","initialized_broadcast","setInitialized","is_network_online","has_real_account_signup_ended","setRealAccountSignupEnd","reactions","act","freeze","Symbol","LANGUAGE_KEY","storage_key","eu_shortcode_regex","eu_excluded_regex","ClientStore","preferred_language","trading_platform_available_accounts","switched","currencies_list","selected_currency","is_populating_account_list","is_populating_mt5_account_list","is_populating_dxtrade_account_list","website_status","device_data","is_authorize","is_account_setting_loaded","has_enabled_two_fa","has_changed_two_fa","landing_companies","standpoint","iom","svg","malta","maltainvest","gaming_company","financial_company","mt5_disabled_signup_types","real","demo","mt5_login_list_error","dxtrade_accounts_list","ctrader_accounts_list","dxtrade_accounts_list_error","dxtrade_disabled_signup_types","statement","amount_mt5","amount_dxtrade","signup","reset_password","payment_agent_withdraw","trading_platform_mt5_password_reset","trading_platform_dxtrade_password_reset","request_email","social_email_change","system_email_change","new_email","account_limits","self_exclusion","local_currency_config","decimal_places","mt5_trading_servers","dxtrade_trading_servers","is_cfd_poi_completed","is_mt5_account_list_updated","prev_real_account_loginid","p2p_advertiser_info","prev_account_type","external_url_params","is_already_attempted","hasAnyRealAccount","hasAccountErrorInCFDList","CFD_PLATFORMS","setExternalParams","params","getIsMarketTypeMatching","isMT5Allowed","is_france","isDxtradeAllowed","clients_country","isBotAllowed","is_eu_or_multipliers_only","is_options_blocked","setPreferredLanguage","isEuCountrySelected","selected_country","isEuCountry","isAccountOfType","client_account_type","isDisabled","isAccountOfTypeDisabled","filtered_list","every","shouldCompleteTax","setPrevRealAccountLoginid","logind","setPrevAccountType","acc_type","computed","account_open_date","is_svg","has_maltainvest_account","first_switchable_real_loginid","upgradeable_currencies","current_landing_company","has_real_mt5_login","has_real_dxtrade_login","has_account_error_in_mt5_real_list","has_account_error_in_mt5_demo_list","has_account_error_in_dxtrade_real_list","has_account_error_in_dxtrade_demo_list","active_accounts","all_loginids","default_currency","is_financial_assessment_incomplete","is_financial_assessment_needed","is_authentication_needed","is_identity_verification_needed","is_poa_expired","is_tnc_needed","is_social_signup","isEligibleForMoreDemoMt5Svg","isEligibleForMoreRealMt5","setIsCfdPoiCompleted","setCitizen","is_mt5_password_not_set","is_dxtrade_password_not_set","is_financial_information_incomplete","is_deposit_lock","is_withdrawal_lock","social_identity_provider","is_pending_authentication","is_financial_account","is_valid_login","has_restricted_mt5_account","has_mt5_account_with_rejected_poa","should_restrict_bvi_account_creation","should_restrict_vanuatu_account_creation","should_show_eu_content","should_show_eu_error","is_uk","is_brazil","can_upgrade","can_upgrade_to","is_single_currency","is_multipliers_only","resetLocalStorageValues","getBasicUpgradeInfo","setMT5DisabledSignupTypes","setCFDDisabledSignupTypes","getLimits","setCookieAccount","updateSelfExclusion","responsePayoutCurrencies","responseAuthorize","setWebsiteStatus","accountRealReaction","setLoginInformation","updateAccountCurrency","email_address","is_website_status_ready","updateAccountList","resetMt5AccountListPopulation","responseWebsiteStatus","responseLandingCompany","setStandpoint","setLoginId","setSwitched","setIsAuthorize","setIsLoggingIn","broadcastAccountChange","switchAccountHandler","registerReactions","setBalanceActiveAccount","setBalanceOtherAccounts","selectCurrency","setResidence","setEmail","setAccountSettings","setAccountStatus","cleanUp","storeClientAccounts","setUserLogin","canStoreClientAccounts","setDeviceData","getSignupParams","onSetResidence","onSetCitizen","onSignup","setResidenceList","resetMt5ListPopulatedState","updateMt5LoginList","responseMT5TradingServers","responseMt5LoginList","responseDxtradeTradingServers","responseTradingPlatformAvailableAccounts","responseTradingPlatformAccountsList","responseStatement","getChangeableFields","syncWithLegacyPlatforms","setTwoFAStatus","setTwoFAChangedStatus","getTwoFAStatus","updateMT5Status","isEuropeCountry","setP2pAdvertiserInfo","setIsAlreadyAttempted","getRedirectionLanguage","created_at","has_no_mt5","has_no_dxtrade","has_no_transaction","transactions","has_no_deposit_attempt_account_status","has_account_criteria","getDefaultAllowedCurrencies","currencies_config","company","getAccountInfo","types_map","needs_verification","cooling_off_expiration_date","client_tnc_status","terms_conditions_version","status_name","valid_login_ids_regex","token","mt5_account","is_current_mf","mt_gaming_company","financial_shortcode","gaming_shortcode","mt_gaming_shortcode","swap_free","is_other_eu","can_open_multi","cur","is_synthetic","available_account","existing_demo_accounts","has_matching_account","has_no_svg_account","existing_real_accounts","country","isOptionsBlocked","isMultipliersOnly","accepted_bch","Set","State","indexOf","canUpgrade","disabled_types_obj","current_list","runInAction","api_initial_load_error","get_limits","getRegion","removeCookies","score","get_self_exclusion","getSelfExclusion","payout_currencies","isCrypto","has_tooltip","authorize","session_start","parseInt","moment","utc","valueOf","local_currencies","fractional_digits","setCurrencies","expires","cookie","has_client_accounts","client_id","new_account_maltainvest","oauth_token","BinarySocket","authorize_response","new_data","landing_company_fullname","get_settings_response","get_settings","DEFAULT_CRYPTO_ACCOUNT_CURRENCY","is_maltainvest_account","is_samoa_account","document_number","document_additional","required_form_values","reject","is_set_storage","new_account","removeNotificationByKey","is_down","excluded_until","param","param_to_set","value_to_set","removeAllNotificationMessages","login_new_user","search_params","redirect_url","loginid_param","unused_params","setIsNewAccount","redirect_route","query_string","filterUrlQuery","stored_language","toggleSetResidenceModal","filteredQuery","excludeParamsFromUrlQuery","is_completed","getAccount","is_pre_switch","isUnableToFindLoginId","handleNotFoundLoginId","from_login_id","SocketCache","should_switch_socket_connection","getToken","setLoginFlag","obj_balance","resetVirtualBalanceNotification","account_transfer","is_mt5_transfer_in_progress","account_id","total","total_real","getPropertyValue","total_mt5","total_dxtrade","has_mt5","has_dxtrade","settings","account_status_response","is_initialized","requestLogout","is_logged_out","obj_params","map_names","client_object","selected_acct","acct1","is_social_signup_provider","account_key","search_param_without_account","is_client_logging_in","token1","endsWith","isTestLink","isLocal","isStaging","signup_provider","is_ready_to_process","is_cross_checked","acct","isDesktopOs","signup_params","cb","set_settings","citizenship","new_account_virtual","switchToNewlyCreatedAccount","new_user_login","curr1","residence_list_response","trading_servers","display_login","login","trading_server","trading_platform_accounts","readonly_fields","immutable_fields","smartTrader","binaryBot","iframe","origin","getUrlSmartTrader","contentWindow","postMessage","restricted_countries","risk_classification","get_financial_assessment","account_security","totp_action","is_low_risk_cr_eu_real","p2p_config","supported_currencies","toLocaleLowerCase","CommonStore","allowed_languages","app_router","changing_language_timer_id","currentLanguage","deposit_url","is_socket_opened","selected_contract_type","services_error","was_socket_opened","withdraw_url","new_url","searchParams","pushState","changeLanguage","changeCurrentLanguage","is_from_derivgo","routeBackInApp","routeTo","setAppstorePlatform","setDepositURL","setIsSocketOpened","setPlatform","setSelectedContractType","setServerTime","setServicesError","setWithdrawURL","showError","new_language","platform_name","ext_url","decodeURI","is_external","should_broadcast_account_change","broadcastAccountChangeAfterAuthorize","you_are_offline","toggleServicesErrorModal","addToast","router_action","check_existing","findIndex","splice","unshift","additional_platform_path","route_to_item_idx","route_to_item","history_item","parent_path","split","ui_store","GTMStore","is_gtm_applicable","visitorId","common_variables","accountSwitcherListener","pushTransactionData","eventHandler","userId","loggedIn","gtm_object","dataLayer","extra_data","transaction","moment_now","gtm_transactions","isAfter","epochToMoment","unix","transactions_arr","transaction_id","bom_account_type","bom_today","time","transaction_time","login_event","is_new_account","affiliate_token","country_abbrev","today","bom_date_joined","event_name","ModulesStore","module","NotificationStore","push_notifications","p2p_order_props","p2p_redirect_to","p2p_completed_orders","handlePOAAddressMismatchNotifications","getStatusValidations","poa_address_mismatch","showPOAAddressMismatchWarningNotification","showPOAAddressMismatchSuccessNotification","showPOAAddressMismatchFailureNotification","addNotificationBar","addNotificationMessageByKey","addTradeNotification","addVerificationNotifications","filterNotificationMessages","getP2pCompletedOrders","handleClientNotifications","setClientNotifications","setP2POrderProps","setP2PRedirectTo","setShouldShowPopups","showCompletedOrderNotification","unmarkNotificationMessage","updateNotifications","debouncedGetP2pCompletedOrders","debounce","order_id","checkNotificationMessages","unique","sortFn","contract_info","purchase_time","underlying","getTradeTypeName","isHighLow","isTurbosContract","isMultiplierContract","isNaN","getTotalProfit","getMarketName","extractInfoFromShortcode","getEndTime","hundred_sec_ago","Math","floor","Date","now","poi_verified","poi_failed","poa_verified","resticted_mt5_with_pending_poa","resticted_mt5_with_failed_poa","poa_rejected_for_mt5","poa_failed","getPathname","is_disposable","notifications_list","refined_list","is_p2p_notifications_visible","refined","is_poi_dob_mismatch","upgradable_daily_limits","max_daily_buy","max_daily_sell","is_10k_withdrawal_limit_reached","withdraw","malta_account","cr_account","is_website_up","site_status","has_trustpilot","trustpilot","site_maintenance","income","ownership","cashier_validation","cashier_locked","deposit_locked","document_needs_action","mt5_withdrawal_locked","personal_details_locked","poi_name_mismatch","withdrawal_locked","additional_kyc_info","two_f_a","need_fa","poi_dob_mismatch","poa_expired","notify_financial_assessment","getCashierValidations","cashier_locked_status","documents_expired","FinancialAssessmentRequired","no_residence","no_withdrawal_or_trading_status","SelfExclusion","system_maintenance","unwelcome_status","withdrawal_locked_status","ASK_AUTHENTICATE","ASK_CURRENCY","ASK_FINANCIAL_RISK_APPROVAL","ASK_FIX_DETAILS","ASK_SELF_EXCLUSION_MAX_TURNOVER_SET","ASK_TIN_INFORMATION","ASK_UK_FUNDS_PROTECTION","needs_poa","needs_poi","needs_poinc","poinc_upload_limited","onfido_submissions_left","services","onfido","submissions_left","poo_required","requests","poo_rejected","svg_needs_poi_poa","svg_needs_poa","svg_needs_poi","svg_poi_expired","last_rejected","authenticate","ask_financial_risk_approval","risk","tax","ask_uk_funds_protection","max_turnover_limit_not_set","required_fields","withdrawal_locked_review","no_withdrawal_or_trading","unwelcome","dp2p","order","advertiser_details","client_details","is_reviewable","order_status","p2p_daily_limit_increase","daysSince","tnc","hasMissingRequiredField","deriv_go","advertiser_name","notification_key","setP2POrderTab","navigateToOrderDetails","notification_redirect_action","should_close_persistent","notifs","is_persistent","max_reset_limit","reset_virtual_balance","client_data","two_fa_status","platform_name_trader","platform_name_go","getUrlBase","routeToMyProfile","install_pwa","installWithDeferredPrompt","remaining","password_changed","exclusion_end","notification_obj","wallets_migrated","wallets_failed","mt5_notification","toggleAdditionalKycInfoModal","p2p_order_list","active","UIStore","url_hashed_values","is_account_settings_visible","is_reports_visible","reports_route_tab_index","is_history_tab_active","should_show_cancellation_warning","notification_messages_ui","matchMedia","matches","has_only_forward_starting_contracts","has_read_scam_message","is_services_error_visible","is_unsupported_contract_modal_visible","is_account_signup_modal_visible","is_link_expired_modal_visible","is_reset_password_modal_visible","is_reset_email_modal_visible","is_update_email_modal_visible","is_reset_trading_password_modal_visible","is_mf_verification_pending_modal_visible","is_chart_countdown_visible","is_chart_layout_default","pwa_prompt_event","screen_width","innerWidth","screen_height","is_onscreen_keyboard_active","is_advanced_duration","advanced_duration_unit","advanced_expiry_type","simple_duration_unit","duration_t","duration_s","duration_m","duration_h","duration_d","purchase_states","is_from_signup_account","show_positions_toggle","modal_index","is_top_up_virtual_open","is_top_up_virtual_in_progress","is_top_up_virtual_success","real_account_signup","success_message","current_focus","mobile_toast_timeout","is_nativepicker_visible","is_landscape","is_mt5_migration_modal_open","is_mt5_verification_failed_modal","is_real_tab_enabled","choose_crypto_currency_target","should_trigger_tour_guide","is_from_success_deposit_modal","app_contents_scroll_ref","is_wallet_modal_visible","is_switch_to_deriv_account_modal_visible","is_cfd_reset_password_modal_enabled","is_mt5_migration_modal_enabled","getDurationFromUnit","unit","remove","add","closeSuccessTopUpModal","closeTopUpModal","disableRouteModal","handleResize","is_tablet","onChangeUiStore","openAccountNeededModal","openPositionsDrawer","openSwitchToRealAccountModal","openTopUpModal","populateFooterExtensions","populateHeaderExtensions","populateSettingsExtensions","removePWAPromptEvent","resetPurchaseStates","resetRealAccountSignupParams","setAccountSwitcherDisabledMessage","setCFDPasswordResetModal","setChartCountdown","setChartLayout","setCurrentFocus","setHasOnlyForwardingContracts","setHashedValue","setIsFromSignupAccount","setIsNativepickerVisible","setReportsTabIndex","toggleShouldShowRealAccountsList","shouldNavigateAfterChooseCrypto","setIsMT5VerificationFailedModal","setIsWalletModalVisible","setIsRealTabEnabled","setManageRealAccountActiveTabIndex","setModalIndex","setPromptHandler","setPurchaseState","setPWAPromptEvent","setRouteModal","setScamMessageLocalStorage","setTopUpInProgress","setIsMFVericationPendingModal","setMT5MigrationModalEnabled","toggleAccountSettings","toggleCancellationWarning","toggleCashier","toggleHistoryTab","toggleLinkExpiredModal","toggleOnScreenKeyboard","toggleReports","toggleUnsupportedContractModal","toggleKycInformationSubmittedModal","toggleMT5MigrationModal","autorun","menu_items","condition","el_purchase_buttons","getElementsByClassName","bind","is_default","state_change","has_ended","isTouchDevice","toast_index","tab_index","prompt","deferred_prompt","userChoice","outcome","next_location","ActiveSymbolsStore","active_symbols","setActiveSymbols","ChartBarrierStore","high_barrier","low_barrier","onChartBarrierChange","hideBarrierLine","line_style","not_draggable","shade","lineStyle","shadeColor","high","low","relative","draggable","hidePriceLines","hideOffscreenLine","updateBarriers","updateBarrierShade","onBarrierChange","barrier_count","default_shade","BARRIER_LINE_STYLES","has_barrier","should_display","CONTRACT_SHADES","barriersToString","DEFAULT_SHADES","LIMIT_ORDER_TYPES","STOP_OUT","TAKE_PROFIT","STOP_LOSS","setLimitOrderBarriers","barriers","is_over","limit_order","isLimitOrderBarrierSupported","limit_orders","has_stop_loss","obj_limit_order","obj_barrier","display_name","BARRIER_COLORS","showOffscreenArrows","isSingleBarrier","opacityOnOverlap","removeBarrier","l","getLimitOrder","contract_update","has_contract_update_stop_loss","has_contract_update_take_profit","contract_update_stop_loss","contract_update_take_profit","new_take_profit","abs","take_profit","order_amount","new_stop_loss","stop_loss","PortfolioStore","positions","all_positions","positions_map","open_accu_contract","main_barrier","getPositionById","createTransformer","responseQueue","active_positions","deepClone","proposalOpenContractQueueHandler","throttledUpdatePositions","populateResultDetailsFromTransaction","transaction_response","getPositionIndexById","is_sold","is_expired","is_valid_to_sell","exit_tick_time","date_expiry","sell_price","String","updatePositions","populateResultDetails","contract_response","proposal_open_contract","duration","getDurationTime","duration_unit","getDurationUnitText","getDurationPeriod","exit_spot","exit_tick","current_spot","isValidToSell","getDisplayStatus","profit_loss","sell_time","current_spot_time","entry_spot","isUserSold","res","proposalOpenContractHandler","setActivePositions","throttle","initializePortfolio","clearTable","portfolioHandler","onBuyResponse","transactionHandler","onClickCancel","onClickSell","handleSell","populateContractUpdate","pushNewPosition","removePositionById","onHoverPosition","logoutListener","networkStatusChangeListener","onMount","override","totals","is_active_empty","active_positions_count","is_empty","setPurchaseSpotBarrier","updateLimitOrderBarriers","setContractType","is_accumulator","is_multiplier","is_turbos","has_subscribed_to_poc_and_transaction","portfolio","contracts","filterDisabledPositions","pos","formatPortfolioPosition","pos1","pos2","reference","new_pos","longcode","subscriber","poc","updateContractTradeStore","updateContractReplayStore","unsubscribe","contract_trade","has_poc","addContract","updateProposal","contract_replay","populateConfig","portfolio_position","is_limit_order_update","proposal","formatted_position","indicative","prev_indicative","new_indicative","bid_price","tick_count","current_tick","getCurrentTick","hovered_position_id","updateTradeStore","is_sell_requested","msg_type","contractCancelled","sell","sell_info","sold_for","contractSold","subform_name","contract_idx","removeContract","isEnded","preSwitchAccountListener","payout","purchase","portfolio_pos","isAccumulatorContract","purchase_spot_barrier","hideOffscreenBarrier","TRADE_TYPES","hour_to_granularity_map","getExpiryTime","getChartType","start_time","expiry_time","diff","asHours","getChartGranularity","calculateGranularity","m","MarkerLine","marker_config","LINE_END","content_config","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","align_label","has_hover_toggle","is_value_hidden","spot_className","spot_epoch","spot_value","spot_profit","show_label","setShowLabel","handleHoverToggle","marker_spot","onMouseEnter","onMouseLeave","addComma","parseFloat","MARKER_TYPES_CONFIG","ContentComponent","LINE_PURCHASE","SPOT_ENTRY","SPOT_SELL","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","isDigitContract","isSmartTraderContract","createMarkerSpotEntry","entry_tick_time","component_props","entry_tick","entry_tick_display_value","createMarkerSpotExit","tick","is_user_sold","exit_tick_display_value","should_show_spot_exit","should_show_profit_label","isVanillaContract","marker_spot_type","createChartMarkers","is_delayed_markers_update","tick_stream","should_show_10_last_ticks","isAccumulatorContractOpen","markers","end_time","chart_type","date_start","tick_markers","createTickMarkers","spot_markers","marker_spots","line_markers","marker_lines","marker","react_key","addLabelAlignment","arr","prev_tick","is_smarttrader_contract","is_accu_contract_closed","isOpen","available_ticks","audit_details","all_ticks","ticks","epoch","exit_tick_count","isEntrySpot","_tick","is_entry_spot","is_middle_spot","isExitSpot","_idx","is_exit_spot","is_current_last_spot","exit_spot_index","is_accu_current_last_spot","is_accu_preexit_spot","spot","tick_display_value","createMarkerSpotMiddle","should_highlight_previous_spot","dark_theme","bg","fg","grey_border","lost","sold","won","light_theme","getColor","is_dark_theme","is_vanilla","colors","currency_symbols","AUD","EUR","GBP","JPY","USD","BTC","BCH","ETH","ETC","LTC","UST","getMarkerContractType","getStartText","is_non_tick_contract","toFixed","max","calculateMarker","is_last_contract","barrier_price","transaction_ids","is_accumulator_contract","is_digit_contract","is_tick_contract","is_high_low_contract","is_touch_contract","isTouchContract","price","quote","last_tick","getTickStreamMarkers","getContractStatus","previous_tick","getAccumulatorBarrierMarkers","prev_epoch","is_accumulator_trade_without_contract","has_crossed_accu_barriers","barrier_spot_distance","contract_status","is_accu_contract_ended","barrier_color","tick_color","getAccumulatorMarkers","in_contract_details","hasPersistentBorders","ContractStore","getContractValidationRules","digits_info","contract_config","display_status","is_ended","is_static_chart","accu_high_barrier","accu_low_barrier","cached_barriers_data","contract_update_history","contract_update_config","barriers_array","markers_array","accumulator_marker","is_ongoing_contract","cacheProposalOpenContractResponse","createBarriersArray","isBarrierSupported","populateContractUpdateConfig","populateContractUpdateHistory","clearContractUpdateConfigValues","updateLimitOrder","getContractsArray","prev_contract_info","getAccuBarriersForContractDetails","updateBarriersArray","start","end","granularity","first_tick_epoch","start_epoch","scroll_to_epoch","end_epoch","getChartConfig","extendObservable","getDigitInfo","is_settleable","sell_expired","getContractUpdateConfig","isEqualObject","contract_store","order_date","current_spot_high_barrier","current_spot_low_barrier","getAccuBarriersDefaultTimeout","ContractReplayStore","chart_state","is_market_closed","error_code","is_chart_loading","is_chart_scaling","is_forward_starting","indicative_status","should_forget_first","handleSubscribeProposalOpenContract","subscribeProposalOpenContract","forgetProposalOpenContract","setAccountSwitcherListener","removeErrorMessage","removeAccountSwitcherListener","updateMargin","chartStateChange","isForwardStarting","option","market_close_prop","ContractTradeStore","contracts_map","prev_chart_type","prev_granularity","accu_barriers_timeout_id","accumulator_barriers_data","accumulator_contract_barriers_data","applicable_contracts","trade_type","trade_types","getContractTypesConfig","is_call_put","isCallPut","CONTRACT_TYPES","trade_type_is_supported","clearAccumulatorBarriersData","updateAccumulatorBarriersData","updateChartType","updateGranularity","filtered_contracts","accountSwitchListener","last_contract","getContractById","savePreviousChartMode","setNewAccumulatorBarriersData","accumulators_high_barrier","accumulators_low_barrier","should_update_contract_barriers","should_clear_contract_data_only","should_clear_timeout","new_barriers_data","prev_spot_time","ticks_history_prev_spot_time","current_spot_data","tick_update_timestamp","delayed_barriers_data","proposal_prev_spot_time","hidden","getAccuBarriersDTraderTimeout","barriers_update_timestamp","has_default_timeout","switch_to_tick_chart","contract_current_spot","should_highlight_contract_barriers","should_show_poc_barriers","existing_contract","contract","TradersHubStore","available_platforms","available_cfd_accounts","available_mt5_accounts","available_dxtrade_accounts","available_ctrader_accounts","combined_cfd_mt5_accounts","selected_account_type","is_onboarding_visited","is_first_time_visit","is_failed_verification_modal_visible","is_regulators_compare_modal_visible","is_tour_open","is_account_type_modal_visible","account_type_card","selected_platform_type","mt5_existing_account","open_failed_verification_for","is_account_transfer_modal_open","selected_account","is_real_wallets_upgrade_on","is_wallet_migration_failed","active_modal_tab","active_modal_wallet_id","hasMultipleSVGAccounts","getAvailableCFDAccounts","getAvailableDxtradeAccounts","getAvailableCTraderAccounts","getExistingAccounts","handleTabItemClick","setWalletModalActiveTab","setWalletModalActiveWalletID","is_demo_low_risk","is_eu_selected","is_real","no_CR_account","no_MF_account","CFDs_restricted_countries","financial_restricted_countries","openDemoCFDAccount","openModal","openRealAccount","selectAccountType","selectAccountTypeCard","switchToCRAccount","setCombinedCFDMT5Accounts","setSelectedAccount","should_show_exit_traders_modal","startTrade","toggleAccountTransferModal","closeAccountTransferModal","toggleAccountTypeModalVisibility","toggleFailedVerificationModalVisibility","setMT5ExistingAccount","toggleRegulatorsCompareModal","showTopUpModal","toggleWalletsUpgrade","setWalletsMigrationFailedPopup","getAvailablePlatforms","setSwitchEU","active_demo","active_real_mf","mf_account","tab","wallet_id","appstore_platforms","getAppstorePlatforms","availability","is_visited","is_first_time","is_low_risk_cr_client","platform_type","all_available_accounts","getCFDAvailableAccount","getAvailableMt5Accounts","current_list_keys","maltainvest_account","_acc","toggleMT5TradeModal","setMT5TradeAccount","createCFDAccount","enableCFDPasswordModal","toggleJurisdictionModal","modal_id","short_code_and_region","short_code","charAt","existing_accounts","existing_account","sub_title","display_balance","getShortCodeAndRegion","action_type","setJurisdictionSelectedShortcode","setAccountType","category","jurisdiction","setCurrentAccount","RootStore","chart_barrier_store","configure","enforceActions","clear","evt","new_currency","old_currency","oldValue","setStorageEvents","NetworkMonitor","PageError","classNameImage","image_url","doLogout","close_chat","client_store","gtm_store","session_duration_limit","session_start_time","session_timeout","responseTimeoutErrorTimer","onDisconnect","onOpen","onMessage","setSessionDurationLimit","handleError","subscribeBalances","authorizeAccount","is_ready","expectedResponseTypes","expect_response_types","pendingResponseTypes","clientsCountry","websocketUrl","expectResponse","ResponseHandlers","websiteStatus","is_active_tab","user_limits","remaining_session_time","flow","mt5_list_response","balance_response","landing_company_response","active_platform","getActionFromUrl","balanceOtherAccounts","balanceActiveAccount","is_updating","rand_timeout","random","necessary_withdrawal_fields","necessary_signup_fields","necessary_signup_fields_mapped","required_settings_fields","getRequiredFields","status_arr","validations","stats","cashier_arr"],"sourceRoot":""}